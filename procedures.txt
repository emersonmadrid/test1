
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'ADRWSA_ALERTA_INCONSISTENCIAS')
BEGIN
  DROP PROCEDURE [dbo].[ADRWSA_ALERTA_INCONSISTENCIAS]
END
GO


CREATE PROCEDURE ADRWSA_ALERTA_INCONSISTENCIAS
(      
	@K_COD_CIA CHAR(2)      
)      
AS
	SET NOCOUNT ON
	    
    SELECT 
		T.MATRICULA,      
        LTRIM(RTRIM(T.NOMBRE)) + ' ' + LTRIM(RTRIM(T.APELLIDO_PATERNO)) + ' ' + LTRIM(RTRIM(T.APELLIDO_MATERNO)) as TRABAJADOR,
        CONVERT (varchar (10),MI.FECHA_MARCACION,103) as FECHA_MARCACION,      
        CASE 
			WHEN MI.TIPO_INCONSISTENCIA = 1 THEN 'SIN SALIDA'      
			WHEN MI.TIPO_INCONSISTENCIA = 2 THEN 'SIN ENTRADA'       
            WHEN MI.TIPO_INCONSISTENCIA = 8 THEN 'SIN MARCAR'      
        END AS TIPO_MARCACION,      
        T.EMAIL_TRABAJO EMAIL_TRABAJADOR,       
        UF.nombre_unidad_funcional as UNIDAD_FUNCIONAL,      
        LTRIM(RTRIM(TR.NOMBRE)) + ' ' + LTRIM(RTRIM(TR.APELLIDO_PATERNO)) + ' ' + LTRIM(RTRIM(TR.APELLIDO_MATERNO)) as SUPERVISOR,      
		TR.EMAIL_TRABAJO AS EMAIL_SUPERVISOR
    FROM ADRWT_MARCA_INCONSISTENCIAS MI 
		INNER JOIN TRABAJADOR T ON MI.CODIGO_UNICO= T.CODIGO_UNICO       
        INNER JOIN  TBL_UNIDAD_FUNCIONAL UF ON T.UNIDAD_FUNCIONAL_ORGANICA = UF.UNIDAD_FUNCIONAL AND T.COMPANIA = UF.COMPANIA      
        LEFT JOIN (
			SELECT CODIGO_UNICO,NOMBRE,APELLIDO_PATERNO,APELLIDO_MATERNO,EMAIL_TRABAJO FROM TRABAJADOR
		) TR ON TR.CODIGO_UNICO = UF.MATRICULA_RESPONSABLE
    WHERE dbo.FN_TRUNCDATE(MI.FECHA_MARCACION) = dbo.FN_TRUNCDATE(GETDATE())-1      
		AND MI.TIPO_INCONSISTENCIA IN (1,2,8)
		AND T.SITUACION_TRABAJADOR = 'A'
		AND UF.SITUACION_UNIDAD_FUNCIONAL='A'      
		AND T.COMPANIA = @K_COD_CIA   
		AND T.CODIGO_UNICO NOT IN (--Licencia  
			SELECT L.CODIGO_UNICO FROM LICENCIA L  
			WHERE L.CODIGO_UNICO = T.CODIGO_UNICO AND dbo.FN_TRUNCDATE(MI.FECHA_MARCACION) BETWEEN L.FECHA_INICIO AND FECHA_TERMINO  
		)  
		AND T.CODIGO_UNICO NOT IN (--Licencia Maternidad  
			SELECT LM.CODIGO_UNICO FROM LICENCIA_MATERNIDAD LM  
			WHERE LM.CODIGO_UNICO = T.CODIGO_UNICO AND dbo.FN_TRUNCDATE(MI.FECHA_MARCACION) BETWEEN LM.FECHA_INICIO_PRE_NATAL AND LM.FECHA_INICIO_POST_NATAL  
		)  
		AND T.CODIGO_UNICO NOT IN (--Vacaciones  
			SELECT VC.CODIGOUNICO FROM dbo.ADRWVW_ASIST_VACACIONES VC  
				INNER JOIN TRABAJADOR TRA ON VC.CODIGOUNICO = TRA.CODIGO_UNICO
			WHERE TRA.CODIGO_UNICO = T.CODIGO_UNICO AND dbo.FN_TRUNCDATE(MI.FECHA_MARCACION) BETWEEN VC.FECHAINICIO AND vc.FECHAFIN  
		)  
		AND T.CODIGO_UNICO NOT IN (--Horas Compensadas  
			SELECT ET.CODIGO_UNICO FROM ADRWT_HORAS_EXTRAS HE
				INNER JOIN ADRWT_EVENTO_TRABAJADOR ET     
					-- CSJ-2015.03.06: Cambios del codigo compuesto de la HHEE para considerar multiples turnos
					-- ON DBO.ASISFN_CCHE(HE.CODIGO_UNICO, HE.FECHA_MARCACION, HE.TIPO_HE) = ET.INDICE_HE       
					ON DBO.ASISFN_CCHE(HE.CODIGO_UNICO, HE.ANNO_PERIODO, HE.COD_PERIODO, HE.SECUENCIA_HE) = ET.INDICE_HE       
					-- CSJ-2015.03.06: Cambios del codigo compuesto de la HHEE para considerar multiples turnos
				INNER JOIN TRABAJADOR TR     
					ON HE.CODIGO_UNICO = TR.CODIGO_UNICO        
				INNER JOIN TBL_UNIDAD_FUNCIONAL U     
					ON U.unidad_funcional = TR.UNIDAD_FUNCIONAL_ORGANICA AND U.COMPANIA=TR.COMPANIA    
			WHERE HE.CODIGO_UNICO = T.CODIGO_UNICO  
				AND dbo.FN_TRUNCDATE(ET.FECHA_INI_EVENTO) = dbo.FN_TRUNCDATE(MI.FECHA_MARCACION)     
			GROUP BY ET.CODIGO_UNICO, FECHA_INI_EVENTO    
			HAVING SUM(DBO.ASISFN_TOTAL_MINUTOS(ET.HORAS_COMPENSACION)) >= 480  
 
			UNION    
        
			SELECT ET.CODIGO_UNICO FROM ADRWT_HORAS_EXTRAS HE
				INNER JOIN ADRWT_EVENTO_TRABAJADOR_TEMP ET     
					-- CSJ-2015.03.06: Cambios del codigo compuesto de la HHEE para considerar multiples turnos
					-- ON DBO.ASISFN_CCHE(HE.CODIGO_UNICO, HE.FECHA_MARCACION, HE.TIPO_HE) = ET.INDICE_HE    
					-- CSJ-2015.03.06: Cambios del codigo compuesto de la HHEE para considerar multiples turnos
					ON DBO.ASISFN_CCHE(HE.CODIGO_UNICO, HE.ANNO_PERIODO, HE.COD_PERIODO, HE.SECUENCIA_HE) = ET.INDICE_HE    
				INNER JOIN TRABAJADOR TR     
					ON HE.CODIGO_UNICO = TR.CODIGO_UNICO        
				INNER JOIN TBL_UNIDAD_FUNCIONAL U     
					ON U.unidad_funcional = TR.UNIDAD_FUNCIONAL_ORGANICA AND U.COMPANIA=TR.COMPANIA    
			WHERE HE.CODIGO_UNICO = T.CODIGO_UNICO  
				AND dbo.FN_TRUNCDATE(ET.FECHA_INI_EVENTO) = dbo.FN_TRUNCDATE(MI.FECHA_MARCACION)  
			GROUP BY ET.CODIGO_UNICO, FECHA_INI_EVENTO   
			HAVING SUM(DBO.ASISFN_TOTAL_MINUTOS(ET.HORAS_COMPENSACION))> = 480   
		)   
      
    ORDER BY 2    

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'ADRWSS_CONSULTA_USR_SEL_ADMIN')
BEGIN
  DROP PROCEDURE [dbo].[ADRWSS_CONSULTA_USR_SEL_ADMIN]
END
GO


CREATE PROCEDURE ADRWSS_CONSULTA_USR_SEL_ADMIN  --'0', '' ,'','','01',''                        
/*                                  
*********************************************************************                                  
Procedimiento:  ADRWSS_CONSULTA_USUARIO_SELEC_ADMIN
Propósito   : Obtiene el listado de listado de Usuarios a Seleccionar                                 
  para mantenimiento                                
Entradas    :  @K_UNID_FUNC     -- UF del usuario                                
               @K_APELLIDOS    -- Apellido del usuario                                
               @K_NOMBRE     -- Nombre del usuario                                
               @K_LOGIN     -- Login del Usuario                
        @K_COMPANIA   -- Codigo de la cia              
               @K_USER_SEL   -- Cadena de Usuarios ya elegidos                          
              
Se Asume    : N/A                                  
Efectos     : N/A                                  
Retorno     :                                   
Notas       :                                  
Autor       : German Salcedo Hidalgo                                
Fecha       : 03/02/2006                                
*********************************************************************                                  
*/                                  
(                                  
 @K_UNID_FUNC VARCHAR(8),                                
 @K_APELLIDOS VARCHAR(30),                                
 @K_NOMBRE VARCHAR(50),                                
 @K_LOGIN VARCHAR(10),                                
 @K_COMPANIA VARCHAR(2),              
 @K_USER_SEL VARCHAR(8000)                          
              
)                                  
AS                                   
SET NOCOUNT ON    
      
/*SELECT DISTINCT TU.USUARIO AS LOGIN,     
TU.NOMBRE + ' ' + TU.APELLIDO_PATERNO + ' ' + TU.APELLIDO_MATERNO AS USUARIO,     
UF.NOMBRE_UNIDAD_FUNCIONAL AS UNIDAD_FUNCIONAL    
--FROM TBL_USUARIO TU, TRABAJADOR T, TBL_UNIDAD_FUNCIONAL UF    
FROM  TBL_USUARIO TU  
INNER JOIN ADRWVW_TRABAJADOR_MAS_IRS T ON TU.CODIGO_UNICO_USUARIO = T.CODIGO_UNICO  AND TU.SITUACION_USUARIO='A'    
INNER JOIN TBL_UNIDAD_FUNCIONAL UF  ON T.UNIDAD_FUNCIONAL_ORGANICA = UF.UNIDAD_FUNCIONAL AND T.COMPANIA = UF.COMPANIA  
WHERE LTRIM(RTRIM(Isnull(TU.clave_usuario,'')))=''  
--TU.CODIGO_UNICO_USUARIO = T.CODIGO_UNICO    
AND TU.SITUACION_USUARIO='A'    
--AND TU.COMPANIA_USUARIO = T.COMPANIA    
AND TU.COMPANIA_USUARIO = @K_COMPANIA    
--AND T.UNIDAD_FUNCIONAL_ORGANICA = UF.UNIDAD_FUNCIONAL                                          
AND (UF.UNIDAD_FUNCIONAL = @K_UNID_FUNC  OR @K_UNID_FUNC = '0')
AND (UPPER(RTRIM(LTRIM(TU.APELLIDO_PATERNO))) + ' ' + UPPER(LTRIM(RTRIM(TU.APELLIDO_MATERNO))) LIKE '%' + UPPER(LTRIM(RTRIM(@K_APELLIDOS))) + '%' OR  @K_APELLIDOS='')
AND (TU.NOMBRE = @K_NOMBRE  OR @K_NOMBRE = '')                                               
AND (TU.USUARIO = @K_LOGIN  OR @K_LOGIN = '')                                                                     
AND (CHARINDEX(TU.USUARIO , '''' + @K_USER_SEL + '''' ) = 0 OR @K_USER_SEL = '')                                                  
ORDER BY TU.USUARIO                                  
*/

	SELECT 	T.MATRICULA AS LOGIN, 
					dbo.ADRWSS_OBTENER_NOM_TRAB(T.CODIGO_UNICO,'2') AS USUARIO,
					UF.NOMBRE_UNIDAD_FUNCIONAL AS UNIDAD_FUNCIONAL,
					UF.UNIDAD_FUNCIONAL AS COD_UNIDAD_FUNCIONAL,
					T.CODIGO_UNICO AS CODIGO_UNICO					
		FROM 	ADRWVW_TRABAJADOR_MAS_IRS T 
		INNER JOIN TBL_UNIDAD_FUNCIONAL UF  
			ON 	T.UNIDAD_FUNCIONAL_ORGANICA = UF.UNIDAD_FUNCIONAL AND T.COMPANIA = UF.COMPANIA
		WHERE	SITUACION_TRABAJADOR='A'
			AND T.COMPANIA = @K_COMPANIA    
			AND (UF.UNIDAD_FUNCIONAL = @K_UNID_FUNC  OR @K_UNID_FUNC = '')
			AND (UPPER(RTRIM(LTRIM(T.APELLIDO_PATERNO))) + ' ' + UPPER(LTRIM(RTRIM(T.APELLIDO_MATERNO))) LIKE '%' + UPPER(LTRIM(RTRIM(@K_APELLIDOS))) + '%' OR  @K_APELLIDOS='')
			AND (T.NOMBRE = @K_NOMBRE  OR @K_NOMBRE = '')                                               
			AND (T.MATRICULA = @K_LOGIN  OR @K_LOGIN = '')                                                                     
			AND (CHARINDEX(T.MATRICULA , '''' + @K_USER_SEL + '''' ) = 0 OR @K_USER_SEL = '')                                                  
		ORDER BY 2
 

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'ADRWSS_CONSULTA_USUARIO_SELEC_ADMIN')
BEGIN
  DROP PROCEDURE [dbo].[ADRWSS_CONSULTA_USUARIO_SELEC_ADMIN]
END
GO


CREATE PROCEDURE dbo.ADRWSS_CONSULTA_USUARIO_SELEC_ADMIN  --'0', '' ,'','','01',''                        
/*                                  
*********************************************************************                                  
Procedimiento:  ADRWSS_CONSULTA_USUARIO_SELEC_ADMIN
Propósito   : Obtiene el listado de listado de Usuarios a Seleccionar                                 
  para mantenimiento                                
Entradas    :  @K_UNID_FUNC     -- UF del usuario                                
               @K_APELLIDOS    -- Apellido del usuario                                
               @K_NOMBRE     -- Nombre del usuario                                
               @K_LOGIN     -- Login del Usuario                
        @K_COMPANIA   -- Codigo de la cia              
               @K_USER_SEL   -- Cadena de Usuarios ya elegidos                          
              
Se Asume    : N/A                                  
Efectos     : N/A                                  
Retorno     :                                   
Notas       :                                  
Autor       : German Salcedo Hidalgo                                
Fecha       : 03/02/2006                                
*********************************************************************                                  
*/                                  
(                                  
 @K_UNID_FUNC VARCHAR(8),                                
 @K_APELLIDOS VARCHAR(30),                                
 @K_NOMBRE VARCHAR(50),                                
 @K_LOGIN VARCHAR(10),                                
 @K_COMPANIA VARCHAR(2),              
 @K_USER_SEL VARCHAR(8000)                          
              
)                                  
AS                                   
SET NOCOUNT ON    
      
/*SELECT DISTINCT TU.USUARIO AS LOGIN,     
TU.NOMBRE + ' ' + TU.APELLIDO_PATERNO + ' ' + TU.APELLIDO_MATERNO AS USUARIO,     
UF.NOMBRE_UNIDAD_FUNCIONAL AS UNIDAD_FUNCIONAL    
--FROM TBL_USUARIO TU, TRABAJADOR T, TBL_UNIDAD_FUNCIONAL UF    
FROM  TBL_USUARIO TU  
INNER JOIN ADRWVW_TRABAJADOR_MAS_IRS T ON TU.CODIGO_UNICO_USUARIO = T.CODIGO_UNICO  AND TU.SITUACION_USUARIO='A'    
INNER JOIN TBL_UNIDAD_FUNCIONAL UF  ON T.UNIDAD_FUNCIONAL_ORGANICA = UF.UNIDAD_FUNCIONAL AND T.COMPANIA = UF.COMPANIA  
WHERE LTRIM(RTRIM(Isnull(TU.clave_usuario,'')))=''  
--TU.CODIGO_UNICO_USUARIO = T.CODIGO_UNICO    
AND TU.SITUACION_USUARIO='A'    
--AND TU.COMPANIA_USUARIO = T.COMPANIA    
AND TU.COMPANIA_USUARIO = @K_COMPANIA    
--AND T.UNIDAD_FUNCIONAL_ORGANICA = UF.UNIDAD_FUNCIONAL                                          
AND (UF.UNIDAD_FUNCIONAL = @K_UNID_FUNC  OR @K_UNID_FUNC = '0')
AND (UPPER(RTRIM(LTRIM(TU.APELLIDO_PATERNO))) + ' ' + UPPER(LTRIM(RTRIM(TU.APELLIDO_MATERNO))) LIKE '%' + UPPER(LTRIM(RTRIM(@K_APELLIDOS))) + '%' OR  @K_APELLIDOS='')
AND (TU.NOMBRE = @K_NOMBRE  OR @K_NOMBRE = '')                                               
AND (TU.USUARIO = @K_LOGIN  OR @K_LOGIN = '')                                                                     
AND (CHARINDEX(TU.USUARIO , '''' + @K_USER_SEL + '''' ) = 0 OR @K_USER_SEL = '')                                                  
ORDER BY TU.USUARIO                                  
*/

	SELECT 	T.MATRICULA AS LOGIN, 
					dbo.ADRWSS_OBTENER_NOM_TRAB(T.CODIGO_UNICO,'2') AS USUARIO,
					UF.NOMBRE_UNIDAD_FUNCIONAL AS UNIDAD_FUNCIONAL,
					UF.UNIDAD_FUNCIONAL AS COD_UNIDAD_FUNCIONAL,
					T.CODIGO_UNICO AS CODIGO_UNICO					
		FROM 	ADRWVW_TRABAJADOR_MAS_IRS T 
		INNER JOIN TBL_UNIDAD_FUNCIONAL UF  
			ON 	T.UNIDAD_FUNCIONAL_ORGANICA = UF.UNIDAD_FUNCIONAL AND T.COMPANIA = UF.COMPANIA
		WHERE	SITUACION_TRABAJADOR='A'
			AND T.COMPANIA = @K_COMPANIA    
			AND (UF.UNIDAD_FUNCIONAL = @K_UNID_FUNC  OR @K_UNID_FUNC = '')
			AND (UPPER(RTRIM(LTRIM(T.APELLIDO_PATERNO))) + ' ' + UPPER(LTRIM(RTRIM(T.APELLIDO_MATERNO))) LIKE '%' + UPPER(LTRIM(RTRIM(@K_APELLIDOS))) + '%' OR  @K_APELLIDOS='')
			AND (T.NOMBRE = @K_NOMBRE  OR @K_NOMBRE = '')                                               
			AND (T.MATRICULA = @K_LOGIN  OR @K_LOGIN = '')                                                                     
			AND (CHARINDEX(T.MATRICULA , '''' + @K_USER_SEL + '''' ) = 0 OR @K_USER_SEL = '')                                                  
		ORDER BY 2

SET NOCOUNT OFF 

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'ADRWSS_CONS_HORAS_EXT_E_PRG2')
BEGIN
  DROP PROCEDURE [dbo].[ADRWSS_CONS_HORAS_EXT_E_PRG2]
END
GO

CREATE PROCEDURE ADRWSS_CONS_HORAS_EXT_E_PRG2
(    
	@K_COD_COMPANIA     VARCHAR(2),
	@K_COD_TRABAJADOR   VARCHAR(9),
	@pCodigoPerfil		Int 
)    
AS    
  
DECLARE @V_DESDE DATETIME
DECLARE @V_HASTA DATETIME
  
SET NOCOUNT ON

/* CSJ: 11-12-2014: Comentado para obtener el rango de fechas segun el perfil  */
	--SELECT	@V_DESDE = INI_PERIODO,
	--				@V_HASTA = FIN_PERIODO
	--	FROM	DBO.ADRWFN_OBT_FECHA_INI_FIN(@K_COD_COMPANIA)
/* CSJ: 11-12-2014: Comentado para obtener el rango de fechas segun el perfil */

/* CSJ: 11-12-2014: Agregado para obtener el rango de fechas segun el perfil */
SELECT  
	@V_DESDE = INI_PERIODO,      
    @V_HASTA = FIN_PERIODO      
--FROM  DBO.usfASIPeriodoLstRangoVigente(@K_COD_COMPANIA, @pCodigoPerfil)
FROM  DBO.usfASIPeriodoLstRangoVigenteOLD(@K_COD_COMPANIA, @pCodigoPerfil)
/* CSJ: 11-12-2014: Agregado para obtener el rango de fechas segun el perfil */

	select 
		COD_TRABAJADOR = ET.CODIGO_UNICO
		,ID_EVENTO = ET.ID_EVENTO
		,ET.ANNO_PERIODO
		,ET.COD_PERIODO
		,ET.FECHA_INI_EVENTO
		,FECHA_COMPENSACION = CONVERT(VARCHAR,ET.FECHA_INI_EVENTO,103)
		,HORAS_COMP = DBO.ASISFN_OBT_HORA_DE_MINUTOS(SUM(DBO.ASISFN_TOTAL_MINUTOS(ET.HORAS_COMPENSACION)))
		,TIPO_COMPENSACION = CASE   
					 WHEN ET.TIPO_COMPENSACION='1' THEN 'Ingreso'  
					 WHEN ET.TIPO_COMPENSACION='2' THEN 'Salida'  
					 WHEN ET.TIPO_COMPENSACION='3' THEN 'Otro'  
					 ELSE ''  
					END
		,COD_TIPO_COMP = ET.TIPO_COMPENSACION
		,HORA_INICIO = LEFT(ET.HORA_INI_EVENTO,2)
		,MINUTO_INICIO = RIGHT(ET.HORA_INI_EVENTO,2)
		,ESTADO = 'APROBADO'
		,COMENTARIO = ET.COMENTARIO_EVENTO
	FROM 
		ADRWT_HORAS_EXTRAS HE 
		INNER JOIN ADRWT_EVENTO_TRABAJADOR ET 
			--ON DBO.ASISFN_CCHE(HE.CODIGO_UNICO, HE.FECHA_MARCACION, HE.TIPO_HE) = ET.INDICE_HE
			ON DBO.ASISFN_CCHE(HE.CODIGO_UNICO, HE.ANNO_PERIODO, HE.COD_PERIODO, HE.SECUENCIA_HE) = ET.INDICE_HE
			AND DBO.FN_TRUNCDATE(FECHA_INI_EVENTO) >= @V_DESDE  
		INNER JOIN TRABAJADOR TR 
			ON HE.CODIGO_UNICO=TR.CODIGO_UNICO    
		JOIN TBL_UNIDAD_FUNCIONAL U 
			ON U.unidad_funcional=TR.UNIDAD_FUNCIONAL_ORGANICA 
		AND U.COMPANIA=TR.COMPANIA
	WHERE	
		HE.CODIGO_UNICO = @K_COD_TRABAJADOR
	GROUP BY
		ET.FECHA_INI_EVENTO
		,ET.TIPO_COMPENSACION
		,ET.HORA_INI_EVENTO
		,ET.CODIGO_UNICO
		,ET.COMENTARIO_EVENTO
		,ET.ID_EVENTO
		,ET.ANNO_PERIODO
		,ET.COD_PERIODO
	UNION
	select 
		COD_TRABAJADOR = ET.CODIGO_UNICO
		,ID_EVENTO = ET.ID_EVENTO
		,ET.ANNO_PERIODO
		,ET.COD_PERIODO
		,ET.FECHA_INI_EVENTO
		,FECHA_COMPENSACION = CONVERT(VARCHAR,ET.FECHA_INI_EVENTO,103)
		,HORAS_COMP = DBO.ASISFN_OBT_HORA_DE_MINUTOS(SUM(DBO.ASISFN_TOTAL_MINUTOS(ET.HORAS_COMPENSACION)))
		,TIPO_COMPENSACION = CASE   
					 WHEN ET.TIPO_COMPENSACION='1' THEN 'Ingreso'  
					 WHEN ET.TIPO_COMPENSACION='2' THEN 'Salida'  
					 WHEN ET.TIPO_COMPENSACION='3' THEN 'Otro'  
					 ELSE ''  
					END
		,COD_TIPO_COMP = ET.TIPO_COMPENSACION
		,HORA_INICIO = LEFT(ET.HORA_INI_EVENTO,2)
		,MINUTO_INICIO = RIGHT(ET.HORA_INI_EVENTO,2)
		,ESTADO = ET.ESTADO
		,COMENTARIO = ET.COMENTARIO_EVENTO
	FROM 
		ADRWT_HORAS_EXTRAS HE 
		INNER JOIN ADRWT_EVENTO_TRABAJADOR_TEMP ET 
			--ON DBO.ASISFN_CCHE(HE.CODIGO_UNICO, HE.FECHA_MARCACION, HE.TIPO_HE) = ET.INDICE_HE
			ON DBO.ASISFN_CCHE(HE.CODIGO_UNICO, HE.ANNO_PERIODO, HE.COD_PERIODO, HE.SECUENCIA_HE) = ET.INDICE_HE
			AND DBO.FN_TRUNCDATE(FECHA_INI_EVENTO) >= @V_DESDE
		INNER JOIN TRABAJADOR TR 
			ON HE.CODIGO_UNICO=TR.CODIGO_UNICO    
		JOIN TBL_UNIDAD_FUNCIONAL U 
			ON U.unidad_funcional=TR.UNIDAD_FUNCIONAL_ORGANICA 
		AND U.COMPANIA=TR.COMPANIA
	WHERE	
		HE.CODIGO_UNICO = @K_COD_TRABAJADOR
	GROUP BY
		ET.FECHA_INI_EVENTO
		,ET.TIPO_COMPENSACION
		,ET.HORA_INI_EVENTO
		,ET.CODIGO_UNICO
		,ET.COMENTARIO_EVENTO
		,ET.ESTADO
		,ET.ID_EVENTO
		,ET.ANNO_PERIODO
		,ET.COD_PERIODO
	ORDER BY
		5 DESC
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'ADRWSS_LISTA_GENERICA_REPORT')
BEGIN
  DROP PROCEDURE [dbo].[ADRWSS_LISTA_GENERICA_REPORT]
END
GO



CREATE PROCEDURE ADRWSS_LISTA_GENERICA_REPORT  
(   
 @K_INDICADOR  INT,  
 @K_COD_TABLA  CHAR(4),  
 @K_FLAG_ORDEN   INT, --1 POR CODIGO / 2 POR DESCRIPCION  
 @K_COD_COMPANIA CHAR(2)  
)    
As  
  
SET NOCOUNT ON  
  
/* @K_INDICADOR = 1 ==> INDICA QUE SE REALIZARA UNA CONSULTA DE TRABAJADORES POR CODIGO UNICO */  
/* @K_INDICADOR = 2 ==> INDICA QUE SE REALIZARA UNA CONSULTA DE COMPAÑIAS */  
/* @K_INDICADOR = 3 ==> INDICA QUE SE REALIZARA UNA CONSULTA DE PUESTO */  
/* @K_INDICADOR = 4 ==> INDICA QUE SE REALIZARA UNA CONSULTA DE GRADO SALARIAL */  
/* @K_INDICADOR = 5 ==> INDICA QUE SE REALIZARA UNA CONSULTA DE TIPO DE TRABAJADOR */  
/* @K_INDICADOR = 6 ==> INDICA QUE SE REALIZARA UNA CONSULTA DE UBICACION FISICA */  
/* @K_INDICADOR = 7 ==> INDICA QUE SE REALIZARA UNA CONSULTA DE AFP */  
/* @K_INDICADOR = 8 ==> INDICA QUE SE REALIZARA UNA CONSULTA DE ENTIDAD O INSTITUCION FINANCIERA */  
/* @K_INDICADOR = 9 ==> INDICA QUE SE REALIZARA UNA CONSULTA DE CATEGORIA JERARQUICA */  
/* @K_INDICADOR = 10 ==> INDICA QUE SE REALIZARA UNA CONSULTA DE TRABAJADORES POR MATRICULA */  
  
 SET @K_FLAG_ORDEN = ISNULL(@K_FLAG_ORDEN,1)  
  
 IF ((@K_FLAG_ORDEN<>1) AND (@K_FLAG_ORDEN<>2))  
 BEGIN   
  SET @K_FLAG_ORDEN = 1  
 END  
  
IF (@K_INDICADOR=1) /* TRABAJADORES POR CODIGO UNICO */  
 BEGIN  
  IF (@K_FLAG_ORDEN=1)  
  BEGIN  
   SELECT  codigo_unico AS CODIGO,  
       Rtrim(Ltrim(IsNull(apellido_paterno,''))) + ' ' +   
       Rtrim(Ltrim(IsNull(apellido_materno,''))) + ', ' +  
       Rtrim(Ltrim(IsNull(nombre,''))) AS DESCRIPCION  
    FROM  Trabajador  
    WHERE  compania= @K_COD_COMPANIA  
    ORDER BY 1  
  END  
  ELSE  
  BEGIN  
   SELECT  codigo_unico AS CODIGO,  
       Rtrim(Ltrim(IsNull(apellido_paterno,''))) + ' ' +   
       Rtrim(Ltrim(IsNull(apellido_materno,''))) + ', ' +  
       Rtrim(Ltrim(IsNull(nombre,''))) AS DESCRIPCION  
    FROM  Trabajador  
    WHERE  compania= @K_COD_COMPANIA  
    ORDER BY 2  
  END  
  GOTO FinListaGenericaReporteador  
 END  
  
IF (@K_INDICADOR=2) /* COMPAÑIAS */  
 BEGIN  
  IF (@K_FLAG_ORDEN=1)  
  BEGIN  
   SELECT  codigo_cia  AS CODIGO,  
       nombre_cia AS DESCRIPCION  
    FROM  TBL_COMPANIA   
    WHERE  codigo_cia= @K_COD_COMPANIA  
    ORDER BY 1  
  END  
  ELSE  
  BEGIN  
   SELECT  codigo_cia  AS CODIGO,  
       nombre_cia AS DESCRIPCION  
    FROM  TBL_COMPANIA   
    WHERE  codigo_cia= @K_COD_COMPANIA  
    ORDER BY 2  
  END  
  GOTO FinListaGenericaReporteador  
 END  
  
IF (@K_INDICADOR=3) /* PUESTO */  
 BEGIN  
  IF (@K_FLAG_ORDEN=1)  
  BEGIN  
   SELECT  PUESTO  AS CODIGO,  
       descripcion_puesto AS DESCRIPCION  
    FROM  TBL_PUESTO_COMPANIA   
    WHERE  COMPANIA= @K_COD_COMPANIA  
     AND SITUACION_REGISTRO='A'  
    ORDER BY 1  
  END  
  ELSE  
  BEGIN  
   SELECT  PUESTO  AS CODIGO,  
       descripcion_puesto AS DESCRIPCION  
    FROM  TBL_PUESTO_COMPANIA   
    WHERE  COMPANIA= @K_COD_COMPANIA  
     AND SITUACION_REGISTRO='A'  
    ORDER BY 2  
  END  
  GOTO FinListaGenericaReporteador  
 END  
  
IF (@K_INDICADOR=4) /* GRADO SALARIAL */  
 BEGIN  
  IF (@K_FLAG_ORDEN=1)  
  BEGIN  
   SELECT  grado_salarial  AS CODIGO,  
       descripcion_grado_salarial AS DESCRIPCION  
    FROM  Tbl_grado_salarial   
    WHERE  COMPANIA= @K_COD_COMPANIA  
     AND SITUACION_REGISTRO='A'  
    ORDER BY 1  
  END  
  ELSE  
  BEGIN  
   SELECT  grado_salarial  AS CODIGO,  
       descripcion_grado_salarial AS DESCRIPCION  
    FROM  Tbl_grado_salarial   
    WHERE  COMPANIA= @K_COD_COMPANIA  
     AND SITUACION_REGISTRO='A'  
    ORDER BY 2  
  END  
  GOTO FinListaGenericaReporteador  
 END  
  
IF (@K_INDICADOR=5) /* TIPO DE TRABAJADOR */  
 BEGIN  
  IF (@K_FLAG_ORDEN=1)  
  BEGIN  
   SELECT  tipo_trabajador  AS CODIGO,  
       descripcion_corta_tipo_trab AS DESCRIPCION  
    FROM  Tbl_tipo_trabajador   
    WHERE  COMPANIA= @K_COD_COMPANIA  
     AND SITUACION_REGISTRO='A'  
    ORDER BY 1  
  END  
  ELSE  
  BEGIN  
   SELECT  tipo_trabajador  AS CODIGO,  
       descripcion_corta_tipo_trab AS DESCRIPCION  
    FROM  Tbl_tipo_trabajador   
    WHERE  COMPANIA= @K_COD_COMPANIA  
     AND SITUACION_REGISTRO='A'  
    ORDER BY 2  
  END  
  GOTO FinListaGenericaReporteador  
 END  
  
IF (@K_INDICADOR=6) /* UBICACION FISICA */  
 BEGIN  
  IF (@K_FLAG_ORDEN=1)  
  BEGIN  
   SELECT  codigo_ubicacion_fisica  AS CODIGO,  
       descripcion_ubicacion_fisica AS DESCRIPCION  
    FROM  Tbl_ubicacion_fisica   
    WHERE  COMPANIA= @K_COD_COMPANIA  
     AND situacion_ubicacion_fisica='A'  
    ORDER BY 1  
  END  
  ELSE  
  BEGIN  
   SELECT  codigo_ubicacion_fisica  AS CODIGO,  
       descripcion_ubicacion_fisica AS DESCRIPCION  
    FROM  Tbl_ubicacion_fisica   
    WHERE  COMPANIA= @K_COD_COMPANIA  
     AND situacion_ubicacion_fisica='A'  
    ORDER BY 2  
  END  
  GOTO FinListaGenericaReporteador  
 END  
  
IF (@K_INDICADOR=7) /* AFP */  
 BEGIN  
  IF (@K_FLAG_ORDEN=1)  
  BEGIN  
   SELECT  codigo_afp  AS CODIGO,  
       nombre_afp AS DESCRIPCION  
    FROM  Tbl_afp   
    WHERE  SITUACION_REGISTRO='A'  
    ORDER BY 1  
  END  
  ELSE  
  BEGIN  
   SELECT  codigo_afp  AS CODIGO,  
       nombre_afp AS DESCRIPCION  
    FROM  Tbl_afp   
    WHERE  SITUACION_REGISTRO='A'  
    ORDER BY 2  
  END  
  GOTO FinListaGenericaReporteador  
 END  
  
IF (@K_INDICADOR=8) /* ENTIDAD O INSTITUCION FINANCIERA */  
 BEGIN  
  IF (@K_FLAG_ORDEN=1)  
  BEGIN  
   SELECT  codigo_entidad  AS CODIGO,  
       descripcion_corta AS DESCRIPCION  
    FROM  tbl_entidad_financiera   
    WHERE  SITUACION_REGISTRO='A'  
    ORDER BY 1  
  END  
  ELSE  
  BEGIN  
   SELECT  codigo_entidad  AS CODIGO,  
       descripcion_corta AS DESCRIPCION  
    FROM  tbl_entidad_financiera   
    WHERE  SITUACION_REGISTRO='A'  
    ORDER BY 2  
  END  
  GOTO FinListaGenericaReporteador  
 END  
  
IF (@K_INDICADOR=9) /* CATEGORIA JERARQUICA */  
 BEGIN  
  IF (@K_FLAG_ORDEN=1)  
  BEGIN  
   SELECT  codigo  AS CODIGO,  
       descripcion AS DESCRIPCION  
    FROM  Tbl_categoria_jerarquica   
    WHERE  COMPANIA= @K_COD_COMPANIA  
    ORDER BY 1  
  END  
  ELSE  
  BEGIN  
   SELECT  codigo  AS CODIGO,  
       descripcion AS DESCRIPCION  
    FROM  Tbl_categoria_jerarquica   
    WHERE  COMPANIA= @K_COD_COMPANIA  
    ORDER BY 2  
  END  
  GOTO FinListaGenericaReporteador  
 END  
  
IF (@K_INDICADOR=10) /* TRABAJADORES POR MATRICULA */  
 BEGIN  
  IF (@K_FLAG_ORDEN=1)  
  BEGIN  
   SELECT  matricula AS CODIGO,  
       Rtrim(Ltrim(IsNull(apellido_paterno,''))) + ' ' +   
       Rtrim(Ltrim(IsNull(apellido_materno,''))) + ', ' +  
       Rtrim(Ltrim(IsNull(nombre,''))) AS DESCRIPCION  
    FROM  Trabajador  
    WHERE  compania= @K_COD_COMPANIA  
    ORDER BY 1  
  END  
  ELSE  
  BEGIN  
   SELECT  matricula AS CODIGO,  
       Rtrim(Ltrim(IsNull(apellido_paterno,''))) + ' ' +   
       Rtrim(Ltrim(IsNull(apellido_materno,''))) + ', ' +  
       Rtrim(Ltrim(IsNull(nombre,''))) AS DESCRIPCION  
    FROM  Trabajador  
    WHERE  compania= @K_COD_COMPANIA  
    ORDER BY 2  
  END  
  GOTO FinListaGenericaReporteador  
 END  
  
IF (@K_INDICADOR=10000) /* OTROS */  
BEGIN  
 if @K_FLAG_ORDEN = '1'     
  Select     
   RTRIM(LTRIM(codigo_registro)) As Codigo,    
   Rtrim(LTRIM(descripcion_registro)) As Descripcion      
  from  
   Tbl_detalle_tabla     
  where     
   codigo_tabla = @K_COD_TABLA and    
   situacion_registro = 'A'    
  Order By descripcion_registro  
 ELSE  
  Select     
   RTRIM(LTRIM(codigo_registro)) As Codigo,    
   Rtrim(LTRIM(descripcion_registro)) As Descripcion      
  from  
   Tbl_detalle_tabla     
  where     
   codigo_tabla = @K_COD_TABLA and    
   situacion_registro = 'A' 
  Order By codigo_registro  
END  
  
 SELECT '' AS CODIGO, '' AS DESCRIPCION  
  
FinListaGenericaReporteador:  
SET NOCOUNT OFF  

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'ADRWSS_LISTA_UBIC_FISICA')
BEGIN
  DROP PROCEDURE [dbo].[ADRWSS_LISTA_UBIC_FISICA]
END
GO

CREATE PROCEDURE dbo.ADRWSS_LISTA_UBIC_FISICA  
/***************************************************************                
Procedimiento : ADRWSS_LISTA_UBIC_FISICA  
Propósito     : Carga en una lista con las Ubicaciones Fisicas
Entradas      : @K_ID_COMPANIA: Codigo de la Compañia    
Se Asume      : N/A                
Efectos       : N/A                
Retorno       : N/A    
Notas         : N/A           
Autor         : Inés López
Modificado    :                 
Fecha/Hora    : 09/08/2006                
'***************************************************************/          
 @K_ID_COMPANIA CHAR(2)
AS      

SET NOCOUNT ON      
      
SELECT 	
	CODIGO = Rtrim(CODIGO_UBICACION_FISICA),   
	DESCRIPCION = Rtrim(Isnull(OTRA_DESCRIPCION, descripcion_ubicacion_fisica))
FROM   	TBL_UBICACION_FISICA      
WHERE 	SITUACION_UBICACION_FISICA='A'   
	AND	COMPANIA = @K_ID_COMPANIA
ORDER BY 2

SET NOCOUNT OFF

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'ADRWSS_REPORTE_SINC_ADRYAN')
BEGIN
  DROP PROCEDURE [dbo].[ADRWSS_REPORTE_SINC_ADRYAN]
END
GO


CREATE PROCEDURE [dbo].[ADRWSS_REPORTE_SINC_ADRYAN]  
@COMPANIA CHAR(2),
@INDICADOR CHAR(1),
@SITUACION CHAR(1),
@FECHADESDE Date = Null,
@FECHAHASTA Date = Null
AS
BEGIN
   IF @INDICADOR = 1
    BEGIN
    /*
    Sincronización AREA 
    El archivo contendrá  el código y descripción de la "aéreas" */

    SELECT  UNIDAD_FUNCIONAL AS 'CODIGO',
            NOMBRE_UNIDAD_FUNCIONAL AS 'DESCRIPCION',
            CASE SITUACION_UNIDAD_FUNCIONAL 
             WHEN 'A' THEN 'ACTIVO'
             WHEN 'E' THEN 'INACTIVO' END AS 'SITUACI0N',
            LTRIM(RTRIM(UNIDAD_FUNCIONAL))+';'+LTRIM(RTRIM(NOMBRE_UNIDAD_FUNCIONAL)) AS 'EXPORTAR'
    FROM TBL_UNIDAD_FUNCIONAL
    WHERE (COMPANIA = @COMPANIA OR @COMPANIA = '')
    AND (SITUACION_UNIDAD_FUNCIONAL = 'A')--@SITUACION OR @SITUACION = '')

    END
    
   ELSE IF @INDICADOR = 2
    BEGIN
    /*
    Sincronización PUESTO
    El archivo contendrá  el código y descripción de los "puestos"*/

    SELECT PUESTO AS 'CODIGO',
           DESCRIPCION_PUESTO AS 'DESCRIPCION',
           CASE SITUACION_REGISTRO
             WHEN 'A' THEN 'ACTIVO'
             WHEN 'E' THEN 'INACTIVO' END AS 'SITUACI0N',
           LTRIM(RTRIM(PUESTO))+';'+LTRIM(RTRIM(DESCRIPCION_PUESTO)) AS 'EXPORTAR'
    FROM TBL_PUESTO_COMPANIA
    WHERE (COMPANIA = @COMPANIA OR @COMPANIA= '' )
    AND (SITUACION_REGISTRO = 'A')--@SITUACION OR @SITUACION = '')
    order by 2
    END
    
   ELSE IF @INDICADOR = 3
    BEGIN
    /*
    Sincronización USUARIOS
    El archivo contendrá  el nombre,apellido,email,nick,contraseña,area,puesto,estado  de los "usuarios" 
    */
    
    SELECT LTRIM(RTRIM(T.NOMBRE)) as 'NOMBRE',
           LTRIM(RTRIM(T.APELLIDO_PATERNO)) +' '+ LTRIM(RTRIM(T.APELLIDO_MATERNO)) AS 'APELLIDOS',
           T.email_trabajo AS 'EMAIL',
           T.CUENTAUSUARIONT AS 'NICK',
           '' AS 'CONTRASEÑA',
           T.UNIDAD_FUNCIONAL_ORGANICA,
           UF.NOMBRE_UNIDAD_FUNCIONAL AS 'AREA',
           T.puesto_organica,
           PC.DESCRIPCION_PUESTO AS 'PUESTO',
           T.SITUACION_TRABAJADOR,
           CASE WHEN T.SITUACION_TRABAJADOR = 'A' THEN 'ACTIVO' ELSE 'CESADO' END AS 'ESTADO',
           T.FECHA_RETIRO,
           LTRIM(RTRIM(T.NOMBRE))+';'+LTRIM(RTRIM(T.APELLIDO_PATERNO)) +' '+ LTRIM(RTRIM(T.APELLIDO_MATERNO)) +';'+
           RTRIM(LTRIM(T.email_trabajo))+';'+RTRIM(LTRIM(T.CUENTAUSUARIONT))+';'+''+';'+LTRIM(RTRIM(T.UNIDAD_FUNCIONAL_ORGANICA))+';'+
           RTRIM(LTRIM(T.puesto_organica))+';'+LTRIM(RTRIM(T.SITUACION_TRABAJADOR)) AS 'EXPORTAR'
    FROM TRABAJADOR T INNER JOIN TBL_UNIDAD_FUNCIONAL UF
     ON T.UNIDAD_FUNCIONAL_ORGANICA = UF.UNIDAD_FUNCIONAL
     INNER JOIN TBL_PUESTO_COMPANIA PC
     ON T.puesto_organica = PC.PUESTO
    WHERE T.COMPANIA = @COMPANIA
    AND TIPO_TRABAJADOR IN ('E','G')
    AND (T.SITUACION_TRABAJADOR = @SITUACION OR @SITUACION = '')
    AND (CONVERT(Date, T.FECHA_RETIRO, 112) >=  CONVERT(Date, @FECHADESDE, 112) OR @FECHADESDE Is Null)
    AND (CONVERT(Date, T.FECHA_RETIRO, 112) <=  CONVERT(Date, @FECHAHASTA, 112) OR @FECHAHASTA Is Null)
    ORDER BY 1

    END
   ELSE
    PRINT 'No hay reportes'
END

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'CAPA_LISTA_PUESTOS_TODOS')
BEGIN
  DROP PROCEDURE [dbo].[CAPA_LISTA_PUESTOS_TODOS]
END
GO


CREATE PROCEDURE CAPA_LISTA_PUESTOS_TODOS
/***************************************************************                
Procedimiento : CAPA_LISTA_PUESTOS  
Propósito     : Devuelve el listado de los puestos 
Entradas      : N/A  
Se Asume      : N/A  
Efectos       : N/A  
Retorno       : Recordset con el listado de los puestos  
Notas         : N/A           
Autor         : Ruiz Pintado, Mario Luis 
Modificado    :                 
Fecha/Hora    : 10/03/2008
'***************************************************************/     
(
  @K_COMPANIA VARCHAR(2)
)  
AS    
     
SET NOCOUNT ON  

	IF ISNULL(@K_COMPANIA,'') = ''
	BEGIN
		SELECT  
			 compania  = @K_COMPANIA,  
		     codigo    = '999999',  
		     descripcion = 'SERVICE' 
		WHERE 1=2
	END
	ELSE
	BEGIN
		SELECT  
			 compania  = @K_COMPANIA,  
		     codigo    = '999999',  
		     descripcion = 'SERVICE' 
		 UNION ALL 
		 SELECT  
			 compania  = compania,  
		     codigo   = rtrim(ltrim(puesto)),  
		     descripcion = rtrim(ltrim(descripcion_puesto))  
		 FROM  
			Tbl_puesto_compania     
		 WHERE  
				--puesto_web      = '1' AND
				situacion_registro  = 'A' AND
				COMPANIA = @K_COMPANIA
		 ORDER BY 
			3    
	END
  
SET NOCOUNT OFF

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'EVPDSS_LISTA_PUESTOS_TODOS')
BEGIN
  DROP PROCEDURE [dbo].[EVPDSS_LISTA_PUESTOS_TODOS]
END
GO


CREATE PROCEDURE EVPDSS_LISTA_PUESTOS_TODOS
(
  @K_COMPANIA VARCHAR(2)
)  
AS    
BEGIN     
	SET NOCOUNT ON  

	 SELECT  
		 COMPANIA  = COMPANIA,  
		 CODIGO   = RTRIM(LTRIM(PUESTO)),  
		 DESCRIPCION = RTRIM(LTRIM(DESCRIPCION_PUESTO))  
	 FROM  
			TBL_PUESTO_COMPANIA     
	 WHERE  
			SITUACION_REGISTRO  = 'A' AND
			COMPANIA = @K_COMPANIA
	 ORDER BY 
		3    
	  
	SET NOCOUNT OFF 
END

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'RYSNSS_LISTA_PUESTOSXSEL')
BEGIN
  DROP PROCEDURE [dbo].[RYSNSS_LISTA_PUESTOSXSEL]
END
GO

CREATE PROCEDURE [dbo].[RYSNSS_LISTA_PUESTOSXSEL]
(
@K_AREA_INTERES CHAR(3),
@COMPANIA CHAR(2)
) 
AS
BEGIN
      SELECT PUESTO AS CODIGO,
       (SELECT TPC.DESCRIPCION_PUESTO
          FROM TBL_PUESTO_COMPANIA TPC
         WHERE TPC.COMPANIA = MYQUERY.COMPANIA
           AND TPC.PUESTO = MYQUERY.PUESTO) DESCRIPCION
        FROM (
							SELECT TPC.COMPANIA, TPC.PUESTO
				      FROM TBL_PUESTO_COMPANIA TPC
				     WHERE TPC.SITUACION_REGISTRO = 'A'
							AND TPC.COMPANIA=@COMPANIA 
				    AND TPC.puesto NOT IN (
						    SELECT T.PUESTO
						      FROM PUESTOS_AREA_INTERES T
						     WHERE T.SITUACION_REGISTRO = 'A'
									 AND T.COMPANIA=@COMPANIA 
						       AND T.AREA_INTERES = @K_AREA_INTERES)
							) MYQUERY
       ORDER BY 2
END

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'RYSNSS_OBT_COMENTARIOS_APROBADORES')
BEGIN
  DROP PROCEDURE [dbo].[RYSNSS_OBT_COMENTARIOS_APROBADORES]
END
GO

CREATE PROC RYSNSS_OBT_COMENTARIOS_APROBADORES
(
	@K_COD_REQUERIMIENTO CHAR(9)
)
AS
BEGIN

	SELECT 
		NRO_APROBADOR = 1
		,APROBADOR = DBO.ADRWSS_OBTENER_NOM_TRAB(ISNULL(B.CODIGO_UNICO_APROBADOR,A.CODIGO_UNICO_APROBADOR1),'2')
		,COMENTARIO = B.COMENTARIO
		,FECHA_APROBACION = CONVERT(VARCHAR,B.FECHA_APROBACION,103)
	FROM 
		PUESTO_VACANTE A 
		LEFT JOIN RYSN_REQ_APROBACION B 
			ON A.NRO_SOLICITUD_PUESTO_VACANTE = B.NRO_SOLICITUD_PUESTO_VACANTE 
			AND B.NUMERO_APROBADOR = 1
	WHERE
		A.NRO_SOLICITUD_PUESTO_VACANTE = @K_COD_REQUERIMIENTO
		AND RTRIM(ISNULL(CODIGO_UNICO_APROBADOR1,'')) <> ''
	UNION
	SELECT 
		NRO_APROBADOR = 2
		,APROBADOR = DBO.ADRWSS_OBTENER_NOM_TRAB(ISNULL(B.CODIGO_UNICO_APROBADOR,A.CODIGO_UNICO_APROBADOR2),'2')
		,COMENTARIO = B.COMENTARIO
		,FECHA_APROBACION = CONVERT(VARCHAR,B.FECHA_APROBACION,103)
	FROM 
		PUESTO_VACANTE A 
		LEFT JOIN RYSN_REQ_APROBACION B 
			ON A.NRO_SOLICITUD_PUESTO_VACANTE = B.NRO_SOLICITUD_PUESTO_VACANTE 
			AND B.NUMERO_APROBADOR = 2
	WHERE
		A.NRO_SOLICITUD_PUESTO_VACANTE = @K_COD_REQUERIMIENTO
		AND RTRIM(ISNULL(CODIGO_UNICO_APROBADOR2,'')) <> ''
	UNION
	SELECT 
		NRO_APROBADOR = 3
		,APROBADOR = DBO.ADRWSS_OBTENER_NOM_TRAB(ISNULL(B.CODIGO_UNICO_APROBADOR,A.CODIGO_UNICO_APROBADOR3),'2')
		,COMENTARIO = B.COMENTARIO
		,FECHA_APROBACION = CONVERT(VARCHAR,B.FECHA_APROBACION,103)
	FROM 
		PUESTO_VACANTE A 
		LEFT JOIN RYSN_REQ_APROBACION B 
			ON A.NRO_SOLICITUD_PUESTO_VACANTE = B.NRO_SOLICITUD_PUESTO_VACANTE 
			AND B.NUMERO_APROBADOR = 3
	WHERE
		A.NRO_SOLICITUD_PUESTO_VACANTE = @K_COD_REQUERIMIENTO
		AND RTRIM(ISNULL(CODIGO_UNICO_APROBADOR3,'')) <> ''
	UNION
	SELECT 
		NRO_APROBADOR = 4
		,APROBADOR = DBO.ADRWSS_OBTENER_NOM_TRAB(ISNULL(B.CODIGO_UNICO_APROBADOR,A.CODIGO_UNICO_APROBADOR4),'2')
		,COMENTARIO = B.COMENTARIO
		,FECHA_APROBACION = CONVERT(VARCHAR,B.FECHA_APROBACION,103)
	FROM 
		PUESTO_VACANTE A 
		LEFT JOIN RYSN_REQ_APROBACION B 
			ON A.NRO_SOLICITUD_PUESTO_VACANTE = B.NRO_SOLICITUD_PUESTO_VACANTE 
			AND B.NUMERO_APROBADOR = 4
	WHERE
		A.NRO_SOLICITUD_PUESTO_VACANTE = @K_COD_REQUERIMIENTO
		AND RTRIM(ISNULL(CODIGO_UNICO_APROBADOR4,'')) <> ''
	UNION
	SELECT 
		NRO_APROBADOR = 5
		,APROBADOR = DBO.ADRWSS_OBTENER_NOM_TRAB(ISNULL(B.CODIGO_UNICO_APROBADOR,A.CODIGO_UNICO_APROBADOR5),'2')
		,COMENTARIO = B.COMENTARIO
		,FECHA_APROBACION = CONVERT(VARCHAR,B.FECHA_APROBACION,103)
	FROM 
		PUESTO_VACANTE A 
		LEFT JOIN RYSN_REQ_APROBACION B 
			ON A.NRO_SOLICITUD_PUESTO_VACANTE = B.NRO_SOLICITUD_PUESTO_VACANTE 
			AND B.NUMERO_APROBADOR = 5
	WHERE
		A.NRO_SOLICITUD_PUESTO_VACANTE = @K_COD_REQUERIMIENTO
		AND RTRIM(ISNULL(CODIGO_UNICO_APROBADOR5,'')) <> ''
	ORDER BY 1

END

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SEGUSS_C_LISTA_COMPANIA')
BEGIN
  DROP PROCEDURE [dbo].[SEGUSS_C_LISTA_COMPANIA]
END
GO

CREATE PROCEDURE [dbo].[SEGUSS_C_LISTA_COMPANIA] --'USUARIO1'  
/***************************************************************              
Procedimiento : SEGUSS_C_CARGA_COMPANIA      
Propósito     : Carga en un combo las companias del usuario   
Entradas     :   @K_USUARIO Codigo del usuario  
Se Asume     : N/A              
Efectos      : N/A              
Retorno      : N/A  
Notas        : N/A         
Autor         : German Salcedo Hidalgo      
Modificado    :               
Fecha/Hora    : 06/03/2006              
'***************************************************************/        
(  
 @K_USUARIO VARCHAR(10)  
 )   
AS    
/*  
SELECT  DISTINCT CODIGO = B.CODIGO_CIA + ',' +  USUARIO,   
 DESCRIPCION = B.NOMBRE_CIA  
FROM  TBL_USUARIO A  
INNER  JOIN TBL_COMPANIA B ON A.COMPANIA_USUARIO = B.CODIGO_CIA  
WHERE  RTRIM(A.CODIGO_UNICO_USUARIO) = RTRIM(@K_USUARIO)  
AND  ISNULL(A.CLAVE_USUARIO,'') = ''   
ORDER BY 2  
*/  
SELECT  DISTINCT CODIGO = B.CODIGO_CIA + ',' +  USUARIO,  
 DESCRIPCION = LTRIM(RTRIM(B.NOMBRE_CIA))  
FROM  TBL_USUARIO A  
INNER  JOIN TBL_COMPANIA B ON A.COMPANIA_USUARIO = B.CODIGO_CIA  
WHERE  RTRIM(A.CODIGO_UNICO_USUARIO) = RTRIM(@K_USUARIO)  
AND  ISNULL(A.CLAVE_USUARIO,'') = ''   
AND A.SITUACION_USUARIO = 'A'  
AND B.SITUACION_REGISTRO = 'A'  
ORDER BY 2 

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_archivo_abono_televise')
BEGIN
  DROP PROCEDURE [dbo].[sp_archivo_abono_televise]
END
GO

CREATE procedure sp_archivo_abono_televise

--declare
(
@compania_usuario		char(02),
@usuario			char(10),
@codigo_proceso		char(20),
@estacion_id			char(30),
@compania			char(02),
@ano_periodo			char(04),
@codigo_periodo		char(02),
@codigo_concepto		char(04),
@codigo_planilla		char(02),
@tipo_trabajador		char(01),
@codigo_banco			char(02),
@fecha				char(8),
@glosa				char(22)
)
AS

--set @compania_usuario = '01'
--set @usuario = 'USER01'
--set @codigo_proceso = '10_40-MENSUAL_CONTAB'
--set @estacion_id = '00000007'
--set @planilla = '01'
--set @tipo_trabajador = 'E'
--set @compania = '01'
--set @fecha = '20041201'
--set @codigo_concepto = '8995'
--set @glosa = 'PAGO DE HABERES'


select 	replicate( ' ' , 15 ) + 
	SUBSTRING( rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno) + ', ' + rtrim(nombre) ,1,30 )+ 
	(CASE 
	WHEN len( rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno) + ', ' + rtrim(nombre))  < 30 THEN replicate( ' ' , 30 - len( rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno) + ', ' + rtrim(nombre))  )
	ELSE ''
	END) + 
	right(t.matricula,8) + 
	replicate( ' ' , 22 ) + 
 	@fecha +
	replicate( ' ' , 22 ) + 
	replicate( '0' , 11 - len( rtrim(convert( varchar(11) , CONVERT(integer,isnull(i.importe_concepto,0) * 100)   )) )) +   rtrim(convert( varchar(11) ,convert(integer, isnull(i.importe_concepto,0) * 100)   )) + 
	replicate( ' ' , 6) + 
	@glosa +
	'3' + 
	t.numero_cuenta_abono
	
from	Trabajador t, Importe_id i, Filtro_proceso f
where 	t.codigo_unico = i.codigo_unico And 
	t.codigo_unico = f.codigo_unico and
	i.codigo_concepto = @codigo_concepto and 
	i.codigo_planilla = @codigo_planilla and 
	i.tipo_trabajador = @tipo_trabajador and 
	i.codigo_compania = @compania and
	t.tipo_trabajador = @tipo_trabajador and
	t.codigo_banco_abono = @codigo_banco and
	f.usuario = @usuario and
	f.codigo_proceso = @codigo_proceso and
	f.estacion_id = @estacion_id and
	t.numero_cuenta_abono is not null
order by 1
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_CAMPOS_TRABAJADOR')
BEGIN
  DROP PROCEDURE [dbo].[SP_CAMPOS_TRABAJADOR]
END
GO


/*
SP_CAMPOS_TRABAJADOR
*/

CREATE procedure [DBO].[SP_CAMPOS_TRABAJADOR]
AS
	SELECT	'0'									AS	SELECCION,
				UPPER(S.NAME)						AS	COLUMNA	,
				UPPER(S.NAME)	+' '+
				UPPER(T.NAME)
--		   CASE 	WHEN UPPER(T.NAME) = 'DATETIME' AND LEFT(UPPER(S.NAME), 3) = 'RAC' THEN 'DATE' ELSE  UPPER(T.NAME)	END 
			   +
				LTRIM(RTRIM(	(	CASE T.NAME
											WHEN 'CHAR'     THEN '('+RTRIM(CONVERT(CHAR,S.LENGTH))+')'
											WHEN 'VARCHAR'  THEN '('+RTRIM(CONVERT(CHAR,S.LENGTH))+')'
											WHEN 'DECIMAL'  THEN '(19,4) '
											WHEN 'NUMBER'   THEN '(19,4) '
											ELSE	''/*
											WHEN 'FLOAT'    THEN ''
											WHEN 'DATE'     THEN ''
											WHEN 'DATETIME' THEN ''
											WHEN 'INT'		 THEN	''*/
										END	)	)	)	+
				( CASE S.ISNULLABLE
					  WHEN '1' THEN ' NULL'
					  WHEN '0' THEN ' NOT NULL'
					END )								AS	DESCRIPCION	,
				UPPER(T.NAME)				   	AS	TIPODATO		,
				(	CASE
						WHEN S.NAME = 'CODIGO_PAIS_EMISOR_DOCUMENTO'	THEN	'PAIS_EMISOR_DOC'
						WHEN S.NAME = 'CODIGO_CESE'						THEN	'MOTIVO_CESE'
						WHEN S.NAME = 'JUBILADO_CON_TRATO_ESPECIAL'	THEN	'IND_SENATI'
						WHEN S.NAME = 'NUMERO_TACO'						THEN	'IND_DOMICILIADO'
						WHEN S.NAME = 'PUESTO_ORGANICA'					THEN	'PUESTO'
						WHEN S.NAME = 'UNIDAD_FUNCIONAL_ORGANICA'		THEN	'UNIDAD_FUNCIONAL'
						WHEN S.NAME = 'TIPO_CALENDARIO_UTIL'			THEN	'DIAS_HABILES_MES'
						WHEN S.NAME = 'INDICADOR_PERSONAL_DIRECCION'	THEN	'IND_DIRECCION_CONFIANZA'
						WHEN S.NAME = 'INDICADOR_PERSONAL_CONFIANZA'	THEN	'IND_FISCALIZABLE'
						WHEN S.NAME = 'CODIGO_BANCO_ABONO'				THEN	'BANCO_ABONO'
						WHEN S.NAME = 'CODIGO_BANCO_ENVIO_ABONO'		THEN	'BANCO_ABONO_ENVIO'
						WHEN S.NAME = 'INSTITUCION_FINANCIERA'			THEN	'BANCO_ABONO_CTS'
						WHEN S.NAME = 'INSTITUCION_FINANCIERA_ENVIO'	THEN	'BANCO_ABONO_ENVIO_CTS'
						WHEN S.NAME = 'INDICADOR_INSCRITO_IPSS'		THEN	'INSCRITO_ESSALUD'
						WHEN S.NAME = 'INSCRITO_SEGURO_VIDA'			THEN	'INSC_ESSALUD_VIDA'
						WHEN S.NAME = 'INSCRITO_LEY_4916'				THEN	'INSC_VIDA_LEY'
						WHEN S.NAME = 'CIRCULO_FUNCIONARIO'				THEN	'INSCRITO_EPS'
						WHEN S.NAME = 'FECHA_INICIO_PAGO'				THEN	'FECHA_INICIO_PAGO_CTS'
						WHEN S.NAME = 'FECHA_FIN_PAGO'					THEN	'FECHA_FIN_PAGO_CTS'
						WHEN S.NAME = 'REFERENCIA'							THEN	'REFERENCIA_DOMICILIO'
						WHEN S.NAME = 'IND_REF_ALTE_ACUM_ATIP'			THEN	'IND_REGIMEN_ATIPICO'
						WHEN S.NAME = 'CUENTAUSUARIONT'					THEN	'CUENTA_USUARIO_DE_RED'
						WHEN S.NAME = 'SEGURO_MEDICO_MF'					THEN	'SEGURO_MEDICO_MOD_FORMATIVA'
						WHEN S.NAME = 'RUC_EPS'								THEN	'CODIGO_EPS'
						WHEN S.NAME = 'SERVICE'								THEN	'MODALIDAD'
						WHEN S.NAME = 'INDICADOR_FDSA'					THEN	'IND_FONDO_DER_SOC_ARTISTA'
						ELSE 	UPPER(S.NAME)
					END	)						AS	ALIAS
	FROM	SYSCOLUMNS	S
	INNER JOIN SYSTYPES		T	ON	(	S.XTYPE	=	T.XTYPE	)
	INNER JOIN SYSOBJECTS	O	ON	(	S.ID		=	O.ID		)
	WHERE	O.XTYPE	=	'U'				AND
			O.NAME	=	'TRABAJADOR'	AND
			S.NAME	NOT IN (	'CODIGO_UNICO'              ,'MATRICULA'                    ,'COMPANIA'                    ,'UNIDAD_FUNCIONAL_AREA'      ,
									'UNIDAD_FUNCIONAL_DIVISION' ,'UNIDAD_FUNCIONAL_GCENTRAL'    ,'USUARIO'                     ,'TOTAL_SMF_BANCO'            ,
									'TOTAL_SMF_TRABAJADOR'      ,'TRASLADADO_DE_16_14_SUELDOS'  ,'TEORICO_ESTUDIOS'            ,'TEORICO_MOVILIDAD'          ,
									'TEORICO_OBRA'              ,'TEORICO_REFRIGERIO'           ,'TEORICO_VIATICOS'            ,'TIPO_CAMBIO_SUELDO'         ,
									'TALLA_CALZADO'             ,'REMUNERACION_COMPUTABLE'      ,'PORCENTAJE_DOLAR_CTS'        ,'NUMERO_IPSS'                ,
									'MEDIDA_CUELLO'             ,'INDICADOR_PROV_CONTRATO'      ,'INDICADOR_SELECCION_INTERNA' ,'INDICADOR_RESTRINGIDO'      ,
									'INDICADOR_FEDERADO'        ,'INDICADOR_BRIGADISTA'         ,'GRUPO_TRABAJADOR'            ,'FUNCION_PRACTICANTE'        ,
									'GASTO_SMF'                 ,'FECHA_REGISTRO_USUARIO'     ,'FECHA_MATRIMONIO'            ,'FECHA_PROMOCION_OBRERO'     ,
									'FECHA_PROMOCION_MANUAL'    ,'FECHA_FIN_PAGO'           ,'FEC_REGISTRO_USUARIONT'      ,'FECHA_DESDE_VIVE_DOMICILIO' ,
									'DNI_RECTOR'                ,'DIRECCION_UNIVER'             ,'CODPERSONA'                  ,'CODIGO_UNICO_CONYUGE'       ,
									'CODIGO_POSTAL'             ,'CODIGO_PERIODO_ACTUALIZACION' ,'CODIGO_CESE'                 ,'CLAVE_SMF'                  ,
									'CANTIDAD_CICLOS'           ,'BONO_OBJETIVO'                ,'BONO_ESPECIFICO'             ,'ASIGNACION_MADRE_VIUDA'     ,
									'ANO_PERIODO_ACTUALIZACION' ,'ANEXO_TRABAJO_2'              ,'ANEXO_TRABAJO_1'             ,'TIPO_CENTRO_ESTUDIOS'       ,
									'TIPO_CICLO'                ,'SITUACION_TRABAJADOR'         ,'SITUACION_EPS'               ,'RUC_UNIVER'                 ,
									'RAZON_UNIVER'              ,'RAZON_RECTOR'                 ,'RAZON_CARRERA'               ,'PAGADOR'                    ,
									'MONTO_PROV_CONTRATO'       ,'FECHA_INICIO_PAGO'            ,'FECHA_INICIO_INDETERMINADO'  ,'FECHA_FIN_INDETERMINADO'    ,
									'DIRIGE_PERSONAL'           ,'CODIGO_POSTULANTE'            ,'DIAS_NO_COMPUTABLES'         ,'FECHA_RETIRO'               ,
									'CONDICION_PRACTICANTE'     ,'TIPO_SEDE'                    ,'TIPO_TRABAJADOR'             ,'TIPO_DE_REMUNERACION'       ,
									'TIPO_DE_PENSIONES'         ,'OBSERVACIONES'                ,'TIPO_RECIBO_CUARTA'          ,'INTERBANCARIO_ABONO'        ,
									'INTERBANCARIO_CTS'         ,'CLASE_TRABAJADOR'             )
	ORDER BY 5



SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_campos_trabajador_BAK')
BEGIN
  DROP PROCEDURE [dbo].[sp_campos_trabajador_BAK]
END
GO



/*
sp_campos_trabajador_BAK
*/

CREATE procedure [dbo].[sp_campos_trabajador_BAK]
as
select '0' as selection, 
upper(s.name),s.name+' '+
t.name+
(case t.name
 when 'datetime' then ''
 when 'char' then '('+rtrim(convert(char,s.length))+')' 
 when 'varchar' then '('+rtrim(convert(char,s.length))+')' 
 when 'decimal' then '(10,2)'
end) +
(case s.isnullable
 when '1' then ' null '
 when '0' then ' not null '
end
) as descripcion,
t.name as tipodato ,
       ( CASE
         	WHEN S.NAME = 'CODIGO_PAIS_EMISOR_DOCUMENTO' THEN 'PAIS_EMISOR_DOC'
            WHEN S.NAME = 'CODIGO_CESE'                  THEN 'MOTIVO_CESE'
            WHEN S.NAME = 'JUBILADO_CON_TRATO_ESPECIAL'  THEN 'IND_SENATI'
            WHEN S.NAME = 'NUMERO_TACO'                  THEN 'IND_DOMICILIADO'
            WHEN S.NAME = 'PUESTO_ORGANICA'              THEN 'PUESTO'
            WHEN S.NAME = 'UNIDAD_FUNCIONAL_ORGANICA'    THEN 'UNIDAD_FUNCIONAL'
            WHEN S.NAME = 'TIPO_CALENDARIO_UTIL'         THEN 'DIAS_HABILES_MES'
            WHEN S.NAME = 'INDICADOR_PERSONAL_DIRECCION' THEN 'IND_DIRECCION_CONFIANZA'
            WHEN S.NAME = 'INDICADOR_PERSONAL_CONFIANZA' THEN 'IND_FISCALIZABLE'
            WHEN S.NAME = 'CODIGO_BANCO_ABONO'           THEN 'BANCO_ABONO'
            WHEN S.NAME = 'CODIGO_BANCO_ENVIO_ABONO'     THEN 'BANCO_ABONO_ENVIO'
            WHEN S.NAME = 'INSTITUCION_FINANCIERA'       THEN 'BANCO_ABONO_CTS'
            WHEN S.NAME = 'INSTITUCION_FINANCIERA_ENVIO' THEN 'BANCO_ABONO_ENVIO_CTS'
            WHEN S.NAME = 'INDICADOR_INSCRITO_IPSS'      THEN 'INSCRITO_ESSALUD'
            WHEN S.NAME = 'INSCRITO_SEGURO_VIDA'         THEN 'INSC_ESSALUD_VIDA'
            WHEN S.NAME = 'INSCRITO_LEY_4916'            THEN 'INSC_VIDA_LEY'
            WHEN S.NAME = 'CIRCULO_FUNCIONARIO'          THEN 'INSCRITO_EPS'
            WHEN S.NAME = 'FECHA_INICIO_PAGO'            THEN 'FECHA_INICIO_PAGO_CTS'
            WHEN S.NAME = 'FECHA_FIN_PAGO'               THEN 'FECHA_FIN_PAGO_CTS'
            WHEN S.NAME = 'REFERENCIA'                   THEN 'REFERENCIA_DOMICILIO'
            WHEN S.NAME = 'IND_REF_ALTE_ACUM_ATIP'       THEN 'IND_REGIMEN_ATIPICO'
            WHEN S.NAME = 'CUENTAUSUARIONT'              THEN 'CUENTA_USUARIO_DE_RED'
            WHEN S.NAME = 'SEGURO_MEDICO_MF'             THEN 'SEGURO_MEDICO_MOD_FORMATIVA'
            WHEN S.NAME = 'RUC_EPS'                      THEN 'CODIGO_EPS'
            WHEN S.NAME = 'SERVICE'                      THEN 'MODALIDAD'
            WHEN S.NAME = 'INDICADOR_FDSA'               THEN 'IND_FONDO_DER_SOC_ARTISTA'
            ELSE 	UPPER(S.NAME)
         END )    AS ALIAS
from syscolumns s,systypes t where id=(select id from sysobjects where xtype = 'U' and name='trabajador')
and s.xtype = t.xtype and 
s.name not in(	'CODIGO_UNICO'              ,'MATRICULA'                    ,'COMPANIA'                    ,'UNIDAD_FUNCIONAL_AREA'      ,
               'UNIDAD_FUNCIONAL_DIVISION' ,'UNIDAD_FUNCIONAL_GCENTRAL'    ,'USUARIO'                     ,'TOTAL_SMF_BANCO'            ,
               'TOTAL_SMF_TRABAJADOR'      ,'TRASLADADO_DE_16_14_SUELDOS'  ,'TEORICO_ESTUDIOS'            ,'TEORICO_MOVILIDAD'          ,
					'TEORICO_OBRA'              ,'TEORICO_REFRIGERIO'           ,'TEORICO_VIATICOS'            ,'TIPO_CAMBIO_SUELDO'         ,
					'TALLA_CALZADO'             ,'REMUNERACION_COMPUTABLE'      ,'PORCENTAJE_DOLAR_CTS'        ,'NUMERO_IPSS'                ,
					'MEDIDA_CUELLO'             ,'INDICADOR_PROV_CONTRATO'      ,'INDICADOR_SELECCION_INTERNA' ,'INDICADOR_RESTRINGIDO'      ,
					'INDICADOR_FEDERADO'        ,'INDICADOR_BRIGADISTA'         ,'GRUPO_TRABAJADOR'            ,'FUNCION_PRACTICANTE'        ,
					'GASTO_SMF'                 ,'FECHA_REGISTRO_USUARIO'       ,'FECHA_MATRIMONIO'            ,'FECHA_PROMOCION_OBRERO'     ,
					'FECHA_PROMOCION_MANUAL'    ,'FECHA_FIN_PAGO'               ,'FEC_REGISTRO_USUARIONT'      ,'FECHA_DESDE_VIVE_DOMICILIO' ,
					'DNI_RECTOR'                ,'DIRECCION_UNIVER'             ,'CODPERSONA'                  ,'CODIGO_UNICO_CONYUGE'       ,
					'CODIGO_POSTAL'             ,'CODIGO_PERIODO_ACTUALIZACION' ,'CODIGO_CESE'                 ,'CLAVE_SMF'                  ,
					'CANTIDAD_CICLOS'           ,'BONO_OBJETIVO'                ,'BONO_ESPECIFICO'             ,'ASIGNACION_MADRE_VIUDA'     ,
					'ANO_PERIODO_ACTUALIZACION' ,'ANEXO_TRABAJO_2'              ,'ANEXO_TRABAJO_1'             ,'TIPO_CENTRO_ESTUDIOS'       ,
					'TIPO_CICLO'                ,'SITUACION_TRABAJADOR'         ,'SITUACION_EPS'               ,'RUC_UNIVER'                 ,
					'RAZON_UNIVER'              ,'RAZON_RECTOR'                 ,'RAZON_CARRERA'               ,'PAGADOR'                    ,
					'MONTO_PROV_CONTRATO'       ,'FECHA_INICIO_PAGO'            ,'FECHA_INICIO_INDETERMINADO'  ,'FECHA_FIN_INDETERMINADO'    ,
					'DIRIGE_PERSONAL'           ,'CODIGO_POSTULANTE'            ,'DIAS_NO_COMPUTABLES'         ,'FECHA_RETIRO'               ,
					'CONDICION_PRACTICANTE'     ,'TIPO_SEDE'                    ,'TIPO_TRABAJADOR'             ,'TIPO_DE_REMUNERACION'       ,
					'TIPO_DE_PENSIONES'         ,'OBSERVACIONES'                ,'TIPO_RECIBO_CUARTA'          ,'INTERBANCARIO_ABONO'        ,
					'INTERBANCARIO_CTS'         ,'CLASE_TRABAJADOR'             )
order by 5



SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_certificado_retencion_afp_detalle')
BEGIN
  DROP PROCEDURE [dbo].[sp_certificado_retencion_afp_detalle]
END
GO



/*  
execute dbo.sp_certificado_retencion_afp_detalle;1 @compania_usuario = '01', @usuario = 'USER01', @codigo_proceso = '87-CERTIFICADOS',   
@estacion_id = '00000007', @compania = '01', @ano_periodo = '2014', @codigo_planilla = '01', @tipo_trabajador = 'E'  

*/
CREATE procedure [dbo].[sp_certificado_retencion_afp_detalle]
(	@compania_usuario	char(02),
	@usuario				char(10),
	@codigo_proceso	char(20),
	@estacion_id		char(30),
	@compania			char(02),
	@ano_periodo		char(04),
	@codigo_planilla	char(02),
	@tipo_trabajador	char(01)
)
AS 
	DECLARE	@monto1				money		,
				@monto2				money		,
				@monto3				money		,
				@monto4				money		,
				@mes_ant				char(2)	,
				@cod_ant				char(9)	,
				@cod					char(9)	,
				@afp					char(2)	,
				@mes_final			char(2)	,
				@base_concepto		char(2)	,
				@concepto1			char(4)	,
				@concepto2			char(4)	,
				@concepto3			char(4)	,
				@mes_vigente		CHAR(2)	,
				@ano_vigente		CHAR(4)	,
				@codigo_periodo	char(02) 


select @base_concepto = codigo_base_concepto  
from Tbl_tipo_trabajador  
where compania = @compania and  
  tipo_trabajador = @tipo_trabajador  
 

  
SELECT @mes_vigente = codigo_periodo,  
       @ano_vigente = ano_periodo  
FROM Periodo_vigente_planilla  
WHERE codigo_compania = @compania AND tipo_trabajador = @tipo_trabajador  
   
 SELECT @codigo_periodo = @mes_vigente  
  

 create table #tmp_afp(  codigo_unico char(9) COLLATE SQL_Latin1_General_CP1_CI_AS, codigo_afp char(2)COLLATE SQL_Latin1_General_CP1_CI_AS, importe_aporte money, importe_comision money,     
    importe_seguro money, remuneracion money , compania char(2) COLLATE SQL_Latin1_General_CP1_CI_AS)      
  
IF CONVERT (INT, @ano_periodo) < CONVERT (INT, @ano_vigente)
 begin  
  SELECT @codigo_periodo = '12'
  
  --create table #tmp_afp(  codigo_unico char(9) Modern_Spanish_CI_AS , codigo_afp char(2) Modern_Spanish_CI_AS, importe_aporte money, importe_comision money,     
  --  importe_seguro money, remuneracion money , compania char(2))    
    
declare trab cursor for    
select distinct codigo_unico, codigo_afp    
from Historico_boleta_id    
where ano_periodo = @ano_periodo and    
 tipo_trabajador = @tipo_trabajador and    
 indicador_inscrito_afp = '1' and    
 indicador_estado_boleta = '1' and    
 codigo_compania = @compania  /*and    
 codigo_unico = '000000159'*/    
order by 1    
    
select @mes_ant = '01'    
    
open trab    
fetch trab into @cod, @afp    
    
select @cod_ant = @cod    
    
while @@fetch_status = 0    
begin    
 /*if @cod_ant <> @cod    
 begin    
  select @cod_ant = @cod    
  select @mes_ant = '01'    
 end */    
    
-- select @cod, @afp    
    
 select  @mes_final = max(codigo_periodo)    
 from  Historico_boleta_id    
 where  codigo_unico = @cod and    
  ano_periodo = @ano_periodo and    
  codigo_afp = @afp and     
  tipo_trabajador = @tipo_trabajador    
     
 select  @mes_ant = min(codigo_periodo)    
 from  Historico_boleta_id    
 where  codigo_unico = @cod and    
  ano_periodo = @ano_periodo and    
  codigo_afp = @afp and     
  tipo_trabajador = @tipo_trabajador    
    
    
 if @afp = 'HO'           
 begin          
  select @concepto1 = '3004'          
  select @concepto2 = '3005'          
  select @concepto3 = '3006'           
 end          
          
 if @afp = 'IN'           
 begin          
  select @concepto1 = '3001'          
  select @concepto2 = '3002'          
  select @concepto3 = '3003'           
 end          
          
 if @afp = 'NV'           
 begin          
  select @concepto1 = '3007'          
  select @concepto2 = '3008'          
  select @concepto3 = '3009'           
 end          
          
 if @afp = 'PR'           
 begin          
  select @concepto1 = '3010'          
  select @concepto2 = '3011'          
  select @concepto3 = '3012'           
 end          
          
 if @afp = 'PM'           
 begin          
  select @concepto1 = '3013'          
  select @concepto2 = '3014'          
  select @concepto3 = '3015'           
 end          
-- solo se va considerar para el primer año x ser la implementacion  
  select @concepto1 = '3016'          
  select @concepto2 = '3017'          
  select @concepto3 = '3018'     
     
  
 if @afp = 'IN'    
 begin    
  select @monto1 = sum(importe_concepto)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto1   
    
  select @monto2 = sum(importe_concepto)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto2   
    
  select @monto3 = sum(importe_concepto)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto3   
    
  select @monto4 = sum(importe_concepto)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto in  (  select codigo_concepto    
       from Concepto_suma    
       where codigo_base_concepto = @base_concepto and    
         codigo_suma = '8010' )    
 end     
    
 if @afp = 'HO'    
 begin    
  select @monto1 = sum(importe_concepto)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto1   
    
  select @monto2 = sum(importe_concepto)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto2    
    
  select @monto3 = sum(importe_concepto)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto3   
    
  select @monto4 = sum(importe_concepto)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto in  (  select  codigo_concepto    
      from  Concepto_suma    
      where  codigo_base_concepto = @base_concepto and    
       codigo_suma = '8010' )    
 end    
    
 if @afp = 'NV'    
 begin    
  select @monto1 = sum(importe_concepto)    
  from  Historico_importe_id    
 where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto1    
    
  select @monto2 = sum(importe_concepto)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto2    
    
  select @monto3 = sum(importe_concepto)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto3   
    
  select @monto4 = sum(importe_concepto)    
  from  Historico_importe_id    
where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto in  (  select  codigo_concepto    
      from  Concepto_suma    
      where  codigo_base_concepto = @base_concepto and    
       codigo_suma = '8010' )    
 end    
    
 if @afp = 'PR'    
 begin    
  select @monto1 = sum(importe_concepto)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto1   
    
  select @monto2 = sum(importe_concepto)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto2    
    
  select @monto3 = sum(importe_concepto)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto3    
    
  select @monto4 = sum(importe_concepto)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto in  (  select  codigo_concepto    
      from  Concepto_suma    
      where  codigo_base_concepto = @base_concepto and    
       codigo_suma = '8010' )    
 end    
    
 if @afp = 'PM'    
 begin    
  select @monto1 = sum(importe_concepto)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto1   
    
  select @monto2 = sum(importe_concepto)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto2   
    
  select @monto3 = sum(importe_concepto)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto3   
    
  select @monto4 = sum(importe_concepto)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto in  (  select  codigo_concepto    
      from  Concepto_suma    
      where  codigo_base_concepto = @base_concepto and    
       codigo_suma = '8010' )    
 end    
    
 if @monto1 is null    
  select @monto1 = 0    
    
 if @monto2 is null    
  select @monto2 = 0    
    
 if @monto3 is null    
  select @monto3 = 0    
    
    
 if @monto1 > 0 or @monto2 > 0 or @monto3 > 0    
  insert into #tmp_afp values    
  (@cod, @afp, @monto1, @monto2, @monto3, @monto4, @compania )    
    
 --select @mes_ant = @mes_final    
 select @monto1 = 0    
 select @monto2 = 0    
 select @monto3 = 0    
 select @monto4 = 0    
    
 fetch trab into @cod, @afp    
end    
    
close trab    
deallocate trab    
    
    
select  t.matricula,    
 rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno) + ', ' + rtrim(t.nombre),    
 t.codigo_spp,    
 (select rtrim(nombre_afp)    
  from Tbl_afp    
  where codigo_afp = k.codigo_afp AND compania = k.compania   ),    
 k.importe_aporte,    
 k.importe_comision,    
 k.importe_seguro,    
 k.remuneracion,    
 (select nombre_cia    
  from Tbl_compania    
  where codigo_cia = t.codigo_compania ),    
 (select numero_ruc_cia    
  from Tbl_compania    
  where codigo_cia = t.codigo_compania ),    
 (select domicilio_fiscal_cia    
  from Tbl_compania    
  where codigo_cia = t.codigo_compania ),     
 (select telefono_cia    
  from Tbl_compania    
  where codigo_cia = t.codigo_compania ),     
 (select rtrim(nombre) + ' ' + rtrim(apellido_materno) + ' ' + rtrim(apellido_paterno)    
 from Tbl_compania    
  where codigo_cia = t.codigo_compania ),    
 (select numero_documento    
 from Tbl_compania    
  where codigo_cia = t.codigo_compania )    
from #tmp_afp k, Historico_boleta_id t    
where k.codigo_unico = t.codigo_unico and
t.ano_periodo = @ano_periodo and
t.codigo_periodo = @codigo_periodo   
    
drop table #tmp_afp  

end

else

begin

 --create table #tmp_afp(  codigo_unico char(9), codigo_afp char(2), importe_aporte money, importe_comision money,     
 --   importe_seguro money, remuneracion money , compania char(2))    
    
declare trab cursor for    
select distinct codigo_unico, codigo_afp    
from Historico_boleta_id    
where ano_periodo = @ano_periodo and    
 tipo_trabajador = @tipo_trabajador and    
 indicador_inscrito_afp = '1' and    
 indicador_estado_boleta = '1' and    
 codigo_compania = @compania 
 union
 select distinct codigo_unico, codigo_afp    
from trabajador    
where   
 tipo_trabajador = @tipo_trabajador and    
 indicador_inscrito_afp = '1' and    
 --indicador_estado_boleta = '1' and    
 compania = @compania     
order by 1    
    
select @mes_ant = '01'    
    
open trab    
fetch trab into @cod, @afp    
    
select @cod_ant = @cod    
    
while @@fetch_status = 0    
begin    
 /*if @cod_ant <> @cod    
 begin    
  select @cod_ant = @cod    
  select @mes_ant = '01'    
end */    
    
-- select @cod, @afp    
    
 select  @mes_final = max(codigo_periodo)    
 from  Historico_boleta_id    
 where  codigo_unico = @cod and    
  ano_periodo = @ano_periodo and    
  codigo_afp = @afp and     
  tipo_trabajador = @tipo_trabajador    
     
 select  @mes_ant = min(codigo_periodo)    
 from  Historico_boleta_id    
 where  codigo_unico = @cod and    
  ano_periodo = @ano_periodo and    
  codigo_afp = @afp and     
  tipo_trabajador = @tipo_trabajador    
    
    
 if @afp = 'HO'           
 begin          
  select @concepto1 = '3004'          
  select @concepto2 = '3005'          
  select @concepto3 = '3006'           
 end          
          
 if @afp = 'IN'           
 begin          
  select @concepto1 = '3001'          
  select @concepto2 = '3002'          
  select @concepto3 = '3003'           
 end          
          
 if @afp = 'NV'           
 begin          
  select @concepto1 = '3007'          
  select @concepto2 = '3008'          
  select @concepto3 = '3009'           
 end          
          
 if @afp = 'PR'           
 begin          
  select @concepto1 = '3010'          
  select @concepto2 = '3011'          
  select @concepto3 = '3012'           
 end          
          
 if @afp = 'PM'           
 begin          
  select @concepto1 = '3013'          
  select @concepto2 = '3014'          
  select @concepto3 = '3015'           
 end          
-- solo se va considerar para el primer año x ser la implementacion  
  select @concepto1 = '3016'          
  select @concepto2 = '3017'          
  select @concepto3 = '3018'     
     
  
 if @afp = 'IN'    
 begin    
 select @monto1 = (
  (select isnull(sum(importe_concepto),0)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto1) +  
   (select isnull(sum(importe_concepto),0)     
  from  importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   --ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   --ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto1))  
  
  select @monto2 = ( 
  (select isnull(sum(importe_concepto),0)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto2) +
   (select isnull(sum(importe_concepto),0)     
  from  importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   --ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   --ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto2))     
  
  select @monto3 = 
  (select isnull(sum(importe_concepto),0)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto3) +    
  (select isnull(sum(importe_concepto),0)     
  from importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   --ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   --ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto3)
  
  select @monto4 =  
  ((select ISNULL(sum(importe_concepto),0)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto in  (  select codigo_concepto    
       from Concepto_suma    
       where codigo_base_concepto = @base_concepto and    
         codigo_suma = '8010')) + 
    (select isnull(sum(importe_concepto),0)     
  from  importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   --ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   --ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto in  (  select codigo_concepto    
       from Concepto_suma    
       where codigo_base_concepto = @base_concepto and    
         codigo_suma = '8010')))
             
 end     
    
 if @afp = 'HO'    
 begin
 select @monto1 =  
  ((select isnull(sum(importe_concepto),0)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto1) +  
    (select isnull(sum(importe_concepto),0)     
  from  importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   --ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   --ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto1))
  
  select @monto2 =
  (select ISNULL(sum(importe_concepto),0)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto2) +
   (select isnull(sum(importe_concepto),0)     
   from  importe_id    
   where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   --ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   --ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto2)      
  
  select @monto3 = 
  (select isnull(sum(importe_concepto),0)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto3) +
  (select isnull(sum(importe_concepto),0)     
  from importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   --ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   --ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto3)   
  
  select @monto4 =  
  ((select isnull(sum(importe_concepto),0)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto in  (  select  codigo_concepto    
      from  Concepto_suma    
      where  codigo_base_concepto = @base_concepto and    
       codigo_suma = '8010' )) +
    (select isnull(sum(importe_concepto),0)    
  from importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   --ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   --ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto in  ( select  codigo_concepto    
      from  Concepto_suma    
      where  codigo_base_concepto = @base_concepto and    
       codigo_suma = '8010' ))) 
          
 end    
    
 if @afp = 'NV'    
 begin 
 select @monto1 =   
 (select isnull(sum(importe_concepto),0)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto1) +
   (select isnull(sum(importe_concepto),0)     
  from importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   --ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   --ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto1)   
  
  select @monto2 =   
  (select isnull(sum(importe_concepto),0)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto2) +
    (select isnull(sum(importe_concepto),0)     
  from importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   --ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   --ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto2)    
  
  select @monto3 =  
  ((select isnull(sum(importe_concepto),0)    
  from importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto3) + 
   (select isnull(sum(importe_concepto),0)     
  from importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   --ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   --ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto3))
  
  select @monto4 =  
 ((select isnull(sum(importe_concepto),0)    
  from  Historico_importe_id    
where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto in  (  select  codigo_concepto    
      from  Concepto_suma    
      where  codigo_base_concepto = @base_concepto and    
       codigo_suma = '8010' )) + 
    (select isnull(sum(importe_concepto),0)    
  from importe_id    
where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   --ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   --ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto in  (  select  codigo_concepto    
      from  Concepto_suma    
      where  codigo_base_concepto = @base_concepto and    
       codigo_suma = '8010' )))
           
 end    
    
 if @afp = 'PR'    
 begin
 
 select @monto1 =  
  ((	select isnull(sum(importe_concepto),0)   
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto1) + 
    (select isnull(sum(importe_concepto),0)   
  from  importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   --ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   --ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto1))  
  
  select @monto2 = 
  ((select isnull(sum(importe_concepto),0)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto2) +
    (select isnull(sum(importe_concepto),0)     
  from  importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   --ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   --ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto2))   
   
  select @monto3 =
  ((select isnull(sum(importe_concepto),0)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto3) +
    (select isnull(sum(importe_concepto),0)     
  from  importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   --ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   --ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto3))    
  
  select @monto4 =  
  ((select isnull(sum(importe_concepto),0)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto in  (  select  codigo_concepto    
      from  Concepto_suma    
      where  codigo_base_concepto = @base_concepto and    
       codigo_suma = '8010' )) + 
    (select isnull(sum(importe_concepto),0)     
  from  importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   --ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   --ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto in  (  select  codigo_concepto    
      from  Concepto_suma    
      where  codigo_base_concepto = @base_concepto and    
       codigo_suma = '8010' )))
           
 end    
    
 if @afp = 'PM'    
 begin  
  select @monto1 =   
  ((select isnull(sum(importe_concepto),0)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto1) + 
   (select isnull(sum(importe_concepto),0)     
  from importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   --ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   --ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto1))   
  
  select @monto2 =  
  ((select isnull(sum(importe_concepto),0)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto2) +
    (select isnull(sum(importe_concepto),0)     
  from  importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   --ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   --ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto2))  
  
  select @monto3 = 
  ((select isnull(sum(importe_concepto),0)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto3) +  
   (select isnull(sum(importe_concepto),0)     
  from importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   --ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   --ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto = @concepto3)) 
  
  select @monto4 =   
  ((select isnull(sum(importe_concepto),0)    
  from  Historico_importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto in  (  select  codigo_concepto    
      from  Concepto_suma    
      where  codigo_base_concepto = @base_concepto and    
       codigo_suma = '8010' )) + 
   (select isnull(sum(importe_concepto),0)     
  from importe_id    
  where  codigo_unico = @cod and    
   tipo_trabajador = @tipo_trabajador and    
   --ano_periodo + codigo_periodo >= @ano_periodo + @mes_ant and    
   --ano_periodo + codigo_periodo <= @ano_periodo + @mes_final and    
   codigo_planilla = @codigo_planilla and    
   codigo_concepto in  (  select  codigo_concepto    
      from  Concepto_suma    
      where  codigo_base_concepto = @base_concepto and    
       codigo_suma = '8010' ))) 
          
 end    
    
 if @monto1 is null    
  select @monto1 = 0    
    
 if @monto2 is null    
  select @monto2 = 0    
    
 if @monto3 is null    
  select @monto3 = 0    
    
    
 if @monto1 > 0 or @monto2 > 0 or @monto3 > 0    
  insert into #tmp_afp values    
  (@cod, @afp, @monto1, @monto2, @monto3, @monto4, @compania )    
    
 --select @mes_ant = @mes_final    
 select @monto1 = 0    
 select @monto2 = 0    
 select @monto3 = 0    
 select @monto4 = 0    
    
 fetch trab into @cod, @afp    
end    
    
close trab    
deallocate trab    
    
    
select  t.matricula,    
 rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno) + ', ' + rtrim(t.nombre),    
 t.codigo_spp,    
 (select rtrim(nombre_afp)    
  from Tbl_afp    
  where codigo_afp = k.codigo_afp AND compania = k.compania),    
 k.importe_aporte,    
 k.importe_comision,    
 k.importe_seguro,    
 k.remuneracion,    
 (select nombre_cia    
  from Tbl_compania    
  where codigo_cia = t.compania ),    
 (select numero_ruc_cia    
  from Tbl_compania    
  where codigo_cia = t.compania ),    
 (select domicilio_fiscal_cia    
  from Tbl_compania    
  where codigo_cia = t.compania ),     
 (select telefono_cia    
  from Tbl_compania    
  where codigo_cia = t.compania ),     
 (select rtrim(nombre) + ' ' + rtrim(apellido_materno) + ' ' + rtrim(apellido_paterno)    
 from Tbl_compania    
  where codigo_cia = t.compania ),    
 (select numero_documento    
 from Tbl_compania    
  where codigo_cia = t.compania )    
from #tmp_afp k, Trabajador t    
where k.codigo_unico = t.codigo_unico    
    
drop table #tmp_afp  

end
  

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_cesados_sin_pase_contable')
BEGIN
  DROP PROCEDURE [dbo].[sp_cesados_sin_pase_contable]
END
GO

CREATE procedure dbo.sp_cesados_sin_pase_contable
(
@compania	char(02)
)
as

select  t.codigo_unico, 
	t.matricula,
	rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno) + ', ' + rtrim(t.nombre),
	t.fecha_retiro,
	convert(char(4), year(t.fecha_retiro)) as ano_periodo,
	(case
	when month(t.fecha_retiro) < 10 then '0' + convert(char(1), month(t.fecha_retiro))
	else convert(char(2), month(t.fecha_retiro))
	end) as codigo_periodo,
	'0' as indicador
from	Trabajador t
where	t.situacion_trabajador = 'C' and
	t.codigo_unico not in (select codigo_unico from Pase_cesados_contabilidad ) and
	t.codigo_unico <> '000000000' and
	t.compania = @compania
order by 3



SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_columnado_ivd')
BEGIN
  DROP PROCEDURE [dbo].[sp_columnado_ivd]
END
GO

-- sp_columnado_ivd '09', 'USER01', '10-MENSUAL', '', '', '', '','','','','','','','','','','','','','','','','',''
-- select * from Filtro_proceso

CREATE PROCEDURE dbo.sp_columnado_ivd
(
 @compania_usuario 	char(02),
 @usuario		char(10),
 @proceso		char(20),
 @estacion_id		char(30),
 @codigo_planilla  	char(02),
 @compania		char(02),
 @codigo_periodo 	char(02),
 @ano_periodo		char(04),
 @codigo_base_concepto  char(02),
 @tipo_trabajador	char(01),

 @sueldo_mes	        char(04),
 @asig_familiar         char(04),
 @dias_trabajados       char(04),
 @vacaciones		char(04), 
 @gratificacion		char(04),
 @gratificacion_ext	char(04),
 @otros_ing_reporte	char(04),
 @subsidio_maternidad	char(04),
 @subsidio_enfermedad	char(04),
 @dev_renta 		char(04),
 @cts_liquidacion	char(04),
 @vac_pendientes 	char(04),
 @vac_truncas		char(04),
 @grati_trunca 		char(04),
 @total_ingreso		char(04),

 @aporte_afp		char(04),
 @poliza_seguro		char(04),
 @comision_afp		char(04),
 @snp			char(04),
 @retencion_5ta		char(04),
 @retencion_judicial	char(04),
 @adelanto_remun	char(04),
 @otros_desc_reporte	char(04),
 @adelanto_grati	char(04),
 @faltas 		char(04),
 @essalud_vida		char(04),
 @descuento_adelanto	char(04),
 @total_descuento       char(04),

 @neto_pagar		char(04),
 @neto_dolar		char(04),

 @a_essalud		char(04),
 @a_sctr_salud		char(04),
 @a_sctr_pension	char(04),
 @vida_ley		char(04),
 @total_aporte  	char(04),

 @seguro_vehiculo	char(04),
 @compra_vehiculo	char(04),
 @compra_mercaderia	char(04),
 @dscto_uniforme	char(04),
 @resp_mercaderia	char(04),
 @resp_efectivo		char(04),
 @dscto_seg_convenio	char(04),
 @dscto_telefono	char(04),
 @prest_escolar		char(04),
 @prest_personal	char(04),
 @pago_exceso		char(04),
 @total_prestamo	char(04)
 )
AS

declare @ano_vigente char(04)
declare @mes_vigente char(02)
declare @fec_cierre	datetime
declare @fec_apertura	datetime

select 	@ano_vigente = ano_periodo,
	@mes_vigente = codigo_periodo,
       	@fec_cierre = fecha_cierre, 
       	@fec_apertura = fecha_apertura 
from 	Periodo_vigente_planilla
where 	tipo_trabajador = @tipo_trabajador and
	codigo_compania = @compania

if  convert(int, @ano_periodo) = 0
	select @ano_periodo = @ano_vigente

if  convert(int, @codigo_periodo) = 0
	select @codigo_periodo = @mes_vigente

if (@ano_vigente = @ano_periodo ) and ( @mes_vigente = @codigo_periodo)
SELECT  @codigo_periodo as CMes, @ano_periodo CAno ,
	t.matricula,
	rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno) + ', ' +rtrim(nombre) as nombre,
	(select rtrim(descripcion_puesto)
	 from Tbl_puesto_compania
	 where 	puesto = t.puesto_organica and
		compania = t.compania ) as puesto,
	t.fecha_ingreso_compania,
	t.codigo_unico,
	t.fecha_retiro,
	t.sueldo_basico,

        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @sueldo_mes          , 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as sueldo_mes ,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @asig_familiar   , 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as asig_familiar ,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @dias_trabajados   , 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as dias_trabajados ,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @vacaciones		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as vacaciones		,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @gratificacion		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as gratificacion		,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @gratificacion_ext	, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as gratificacion_ext	,

        dbo.sf_obtiene_importe_suma    ('MES',t.codigo_unico , @otros_ing_reporte		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as otros_ing_reporte	,

        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @subsidio_maternidad	, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as subsidio_maternidad	,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @subsidio_enfermedad	, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as subsidio_enfermedad	,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @dev_renta		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as dev_renta		,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @cts_liquidacion		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as cts_liquidacion	,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @vac_pendientes		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as vac_pendientes	,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @vac_truncas		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as vac_truncas	,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @grati_trunca		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as grati_trunca	,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @total_ingreso		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as total_ingreso		,

        dbo.sf_obtiene_importe_suma('MES',t.codigo_unico , @aporte_afp		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as aporte_afp		,
        dbo.sf_obtiene_importe_suma('MES',t.codigo_unico , @poliza_seguro		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as poliza_seguro		,
        dbo.sf_obtiene_importe_suma('MES',t.codigo_unico , @comision_afp		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as comision_afp		,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @snp		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as snp			,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @retencion_5ta		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as retencion_5ta		,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @retencion_judicial	, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as retencion_judicial	,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @adelanto_remun		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as adelanto_remun		,
        dbo.sf_obtiene_importe_suma    ('MES',t.codigo_unico , @otros_desc_reporte	, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as otros_desc_reporte	,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @adelanto_grati		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as adelanto_grati		,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @faltas			, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as faltas			,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @essalud_vida		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as essalud_vida		,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @descuento_adelanto	, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as descuento_adelanto	,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @total_descuento		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as total_descuento	,

        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @neto_pagar		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as neto_pagar		,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @neto_dolar		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as neto_dolar		,

        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @a_essalud		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as a_essalud		,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @a_sctr_salud		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as a_sctr_salud		,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @a_sctr_pension		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as a_sctr_pension		,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @vida_ley		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as vida_ley		,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @total_aporte		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as total_aporte		,

        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @seguro_vehiculo		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as seguro_vehiculo	,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @compra_vehiculo		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as compra_vehiculo	,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @compra_mercaderia		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as compra_merca		,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @dscto_uniforme		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as dscto_uniforme		,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @resp_mercaderia		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as resp_merca		,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @resp_efectivo		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as resp_efectivo		,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @dscto_seg_convenio		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as dscto_convenio		,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @dscto_telefono		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as dscto_telefono		,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @prest_escolar		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as prest_escolar		,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @prest_personal		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as prest_personal		,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @pago_exceso		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as pago_exceso		,
        dbo.sf_obtiene_importe_concepto('MES',t.codigo_unico , @total_prestamo		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as total_prestamo		

from Trabajador t, Filtro_proceso f
where 	t.codigo_unico = f.codigo_unico and
	t.tipo_trabajador = @tipo_trabajador and
	f.compania = @compania_usuario and
	f.usuario = @usuario and
	f.codigo_proceso = @proceso and
	f.estacion_id = @estacion_id
ORDER BY  nombre

else


SELECT  @codigo_periodo as CMes, @ano_periodo CAno ,
	t.matricula,
	rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno) + ', ' +rtrim(nombre) as nombre,
	(select rtrim(descripcion_puesto)
	 from Tbl_puesto_compania
	 where 	puesto = t.puesto_organico and
		compania = t.codigo_compania ) as puesto,
	t.fecha_ingreso_compania,
	t.codigo_unico,
	t.fecha_retiro,
	t.sueldo_basico,

        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @sueldo_mes          , 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as sueldo_mes ,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @asig_familiar   , 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as asig_familiar ,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @dias_trabajados   , 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as dias_trabajados ,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @vacaciones		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as vacaciones		,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @gratificacion		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as gratificacion		,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @gratificacion_ext	, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as gratificacion_ext	,
        dbo.sf_obtiene_importe_suma    ('HIS',t.codigo_unico , @otros_ing_reporte		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as otros_ing_reporte	,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @subsidio_maternidad	, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as subsidio_maternidad	,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @subsidio_enfermedad	, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as subsidio_enfermedad	,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @dev_renta		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as dev_renta		,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @cts_liquidacion		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as cts_liquidacion	,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @vac_pendientes		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as vac_pendientes	,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @vac_truncas		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as vac_truncas	,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @grati_trunca		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as grati_trunca	,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @total_ingreso		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as total_ingreso		,

        dbo.sf_obtiene_importe_suma('HIS',t.codigo_unico , @aporte_afp		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as aporte_afp		,
   dbo.sf_obtiene_importe_suma('HIS',t.codigo_unico , @poliza_seguro		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as poliza_seguro		,
        dbo.sf_obtiene_importe_suma('HIS',t.codigo_unico , @comision_afp		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as comision_afp		,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @snp		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as snp			,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @retencion_5ta		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as retencion_5ta		,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @retencion_judicial	, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as retencion_judicial	,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @adelanto_remun		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as adelanto_remun		,
        dbo.sf_obtiene_importe_suma    ('HIS',t.codigo_unico , @otros_desc_reporte	, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as otros_desc_reporte	,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @adelanto_grati		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as adelanto_grati		,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @faltas			, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as faltas			,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @essalud_vida		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as essalud_vida		,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @descuento_adelanto	, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as descuento_adelanto	,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @total_descuento		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as total_descuento	,

        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @neto_pagar		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as neto_pagar		,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @neto_dolar		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as neto_dolar		,

        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @a_essalud		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as a_essalud		,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @a_sctr_salud		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as a_sctr_salud		,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @a_sctr_pension		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as a_sctr_pension		,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @vida_ley		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as vida_ley		,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @total_aporte		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as total_aporte		,

        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @seguro_vehiculo		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as seguro_vehiculo	,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @compra_vehiculo		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as compra_vehiculo	,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @compra_mercaderia		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as compra_merca		,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @dscto_uniforme		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as dscto_uniforme		,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @resp_mercaderia		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as resp_merca		,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @resp_efectivo		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as resp_efectivo		,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @dscto_seg_convenio		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as dscto_convenio		,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @dscto_telefono		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as dscto_telefono		,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @prest_escolar		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as prest_escolar		,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @prest_personal		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as prest_personal		,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @pago_exceso		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as pago_exceso		,
        dbo.sf_obtiene_importe_concepto('HIS',t.codigo_unico , @total_prestamo		, 
          @codigo_planilla , @codigo_periodo , @ano_periodo  , @tipo_trabajador , @compania ) as total_prestamo		

from Historico_boleta_id t
where 	
	t.tipo_trabajador = @tipo_trabajador and
	t.indicador_estado_boleta = '1' and
	t.codigo_periodo = @codigo_periodo and
	t.ano_periodo = @ano_periodo and
	t.codigo_compania = @compania
ORDER BY  t.ubicacion_fisica , 1

RETURN

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_c_genera_abono_bbva_premium')
BEGIN
  DROP PROCEDURE [dbo].[sp_c_genera_abono_bbva_premium]
END
GO

CREATE  PROCEDURE dbo.sp_c_genera_abono_bbva_premium
(
@compania_usuario char(02),
@usuario		char(10),
@codigo_proceso	varchar(20),
@estacion_id	varchar(30),
@codigo_cia		char(02),
@tipo_trabajador char(01),
@codigo_concepto char(04),
@codigo_planilla char(02),
@numero_cuenta_cargo char(20),
@codigo_banco	char(02),
@tipo_abono		char(01),             --S(soles) D(dolares)
@valida			char(1),				--S(si) N(no)
@fecha_proceso	char(8)
)
AS
--sp_c_genera_abono_bbva_premium ' ',' ',' ',' ','01','L','7380','11','15','05','2011','01191077000100006917','02','S'

DECLARE
@codigo_periodo char(02),
@ano_periodo	char(04),
@importes		money,
@cantidad		int


select 
@ano_periodo = ano_periodo,
@codigo_periodo = codigo_periodo 
from Periodo_vigente_planilla
where tipo_trabajador = @tipo_trabajador and
		codigo_compania = @codigo_cia


select	@importes = sum(i.importe_concepto),
		@cantidad = count(*)
from	Trabajador t, Importe_id i
where	t.codigo_unico = i.codigo_unico and
		t.tipo_trabajador = i.tipo_trabajador and	
		t.compania = @codigo_cia and
		t.tipo_trabajador = @tipo_trabajador and
		t.indicador_planilla  = '1' and
		t.codigo_banco_abono = @codigo_banco and
		t.moneda_cuenta_abono = @tipo_abono and
		i.codigo_concepto = @codigo_concepto   and
		i.codigo_planilla = @codigo_planilla and
		i.ano_periodo = @ano_periodo and
		i.codigo_periodo = @codigo_periodo and
		i.importe_concepto > 0 

--OBTENIENDO DATOS DE LOS TRABAJADORES
select 
	'700'+ 
	@numero_cuenta_cargo  +
	(case
		when @tipo_abono = 'S' then 'PEN'
		else 'USD'
	end) +
	SUBSTRING(REPLICATE('0',15 - DATALENGTH(CONVERT(varchar(12), CONVERT(int,@importes*100)))) +
    CONVERT(varchar(12), CONVERT(int,@importes*100)),1,15 ) + 
	'A' + 
	@fecha_proceso + 
	' ' + 
	replicate(' ',25) + 
	replicate('0',6 - DATALENGTH(convert(varchar(6),@cantidad))) + convert(varchar(6),@cantidad) + 
	@valida + 
	replicate(' ',15) + 
	replicate(' ',3) + 
	replicate(' ',30) + 
	replicate(' ',20)
from	Trabajador t, Importe_id i
where	t.codigo_unico = i.codigo_unico and
		t.tipo_trabajador = i.tipo_trabajador and	
		t.compania = @codigo_cia and
		t.tipo_trabajador = @tipo_trabajador and
		t.indicador_planilla  = '1' and
		t.codigo_banco_abono = @codigo_banco and
		t.moneda_cuenta_abono = @tipo_abono and
		i.codigo_concepto = @codigo_concepto   and
		i.codigo_planilla = @codigo_planilla and
		i.ano_periodo = @ano_periodo and
		i.codigo_periodo = @codigo_periodo and
		i.importe_concepto > 0 
union
select 
	'002' + 
	(case
		when t.tipo_documento = '01' or t.tipo_documento = '1'  then 'L'
		when t.tipo_documento = '04' or t.tipo_documento = '4'  then 'E'
		else 'L'
	end ) + 
	rtrim(t.numero_documento ) + replicate(' ',12- datalength(rtrim(t.numero_documento ))) + 
	'P' + 
	rtrim(t.numero_cuenta_abono) + replicate(' ',20 - datalength(rtrim(t.numero_cuenta_abono))) +
	rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno)+ ' ' + rtrim(t.nombre) + 
	replicate(' ',40 - datalength(rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno)+ ' ' + rtrim(t.nombre))) + 
	SUBSTRING(REPLICATE('0',15 - DATALENGTH(CONVERT(varchar(12), CONVERT(int,i.importe_concepto*100)))) +
    	CONVERT(varchar(12), CONVERT(int,i.importe_concepto*100)),1,15 ) + 
	replicate(' ',40) + 
	replicate(' ',1) + 
	replicate(' ',50) + 
	replicate(' ',2) + 
	replicate(' ',30) + 
    replicate(' ',18) 
from	Trabajador t, Importe_id i
where	t.codigo_unico = i.codigo_unico and
		t.tipo_trabajador = i.tipo_trabajador and	
		t.compania = @codigo_cia and
		t.tipo_trabajador = @tipo_trabajador and
		t.indicador_planilla  = '1' and
		t.codigo_banco_abono = @codigo_banco and
		t.moneda_cuenta_abono = @tipo_abono and
		i.codigo_concepto = @codigo_concepto   and
		i.codigo_planilla = @codigo_planilla and
		i.ano_periodo = @ano_periodo and
		i.codigo_periodo = @codigo_periodo and
		i.importe_concepto > 0 
order by 1 desc

/*   
CREATE  PROCEDURE dbo.sp_c_genera_abono_bbva_premium    
(    
@compania_usuario char(02),    
@usuario  char(10),    
@codigo_proceso varchar(20),    
@estacion_id varchar(30),    
@codigo_cia  char(02),    
@tipo_trabajador char(01),    
@codigo_concepto char(04),    
@codigo_planilla char(02),    
@numero_cuenta_cargo char(20),    
@codigo_banco char(02),    
@tipo_abono  char(01),             --S(soles) D(dolares)    
@valida   char(1),    --S(si) N(no)    
@fecha_proceso char(8),  
@codigo_periodo char(02),    
@ano_periodo char(04)    
)    
AS    
--exec sp_c_genera_abono_bbva_premium ' ',' ',' ',' ','01','E','1200','01','01191077000100006917','11','S','1','01012012','02','2012'   
    
DECLARE    
@codigo_periodo_vigente char(02),    
@ano_periodo_vigente char(04),    
@importes  money,    
@cantidad  int    
    
    
select     
  @ano_periodo_vigente = ano_periodo,    
  @codigo_periodo_vigente = codigo_periodo     
from Periodo_vigente_planilla    
where tipo_trabajador = @tipo_trabajador and    
  codigo_compania = @codigo_cia    
    
  
IF @codigo_periodo = '00'                      
 select @codigo_periodo = @codigo_periodo_vigente                      
IF @ano_periodo = '0000'                      
 select @ano_periodo = @ano_periodo_vigente      
  
--select @codigo_periodo , @ano_periodo, @codigo_periodo_vigente , @ano_periodo_vigente    
IF @codigo_periodo + @ano_periodo = @codigo_periodo_vigente + @ano_periodo_vigente    
begin  
  
select @importes = sum(i.importe_concepto),    
  @cantidad = count(*)    
from Trabajador t inner join Importe_id i    
on  t.codigo_unico = i.codigo_unico and    
  t.tipo_trabajador = i.tipo_trabajador    
  inner join Filtro_proceso f   
  on f.codigo_unico = t.codigo_unico   
where     
  t.compania = @codigo_cia and    
  t.tipo_trabajador = @tipo_trabajador and    
  t.indicador_planilla  = '1' and    
  t.codigo_banco_abono = @codigo_banco and    
  t.numero_cuenta_abono is not null and    
  rtrim(t.numero_cuenta_abono) <> '' and    
  t.moneda_cuenta_abono = @tipo_abono and    
  i.codigo_concepto = @codigo_concepto   and    
  i.codigo_planilla = @codigo_planilla and    
  i.ano_periodo = @ano_periodo and    
  i.codigo_periodo = @codigo_periodo and    
  i.importe_concepto > 0  and  
  f.usuario = @usuario and  
  f.codigo_proceso = @codigo_proceso and  
  f.estacion_id = @estacion_id and  
  f.compania = @compania_usuario      
    
--OBTENIENDO DATOS DE LOS TRABAJADORES    
select     
 '700'+     
 @numero_cuenta_cargo  +    
 (case    
  when @tipo_abono = 'S' then 'PEN'    
  else 'USD'    
 end) +    
 SUBSTRING(REPLICATE('0',15 - DATALENGTH(CONVERT(varchar(12), CONVERT(int,@importes*100)))) +    
    CONVERT(varchar(12), CONVERT(int,@importes*100)),1,15 ) +     
 'A' +     
 @fecha_proceso +     
 ' ' +     
 replicate(' ',25) +     
 replicate('0',6 - DATALENGTH(convert(varchar(6),@cantidad))) + convert(varchar(6),@cantidad) +     
 @valida +     
 replicate(' ',15) +     
 replicate(' ',3) +     
 replicate(' ',30) +     
 replicate(' ',20) + '@'    
from Trabajador t inner join Importe_id i    
on  t.codigo_unico = i.codigo_unico and    
  t.tipo_trabajador = i.tipo_trabajador   
    inner join Filtro_proceso f   
  on f.codigo_unico = t.codigo_unico     
where     
  t.compania = @codigo_cia and    
  t.tipo_trabajador = @tipo_trabajador and    
  t.indicador_planilla  = '1' and    
  t.codigo_banco_abono = @codigo_banco and    
  t.numero_cuenta_abono is not null and    
  rtrim(t.numero_cuenta_abono) <> '' and    
  t.moneda_cuenta_abono = @tipo_abono and    
  i.codigo_concepto = @codigo_concepto   and    
  i.codigo_planilla = @codigo_planilla and    
  i.ano_periodo = @ano_periodo and    
  i.codigo_periodo = @codigo_periodo and    
  i.importe_concepto > 0  and  
  f.usuario = @usuario and  
  f.codigo_proceso = @codigo_proceso and  
  f.estacion_id = @estacion_id and  
  f.compania = @compania_usuario      
union    
select     
 '002' +     
 (case    
  when t.tipo_documento = '01' or t.tipo_documento = '1'  then 'L'    
  when t.tipo_documento = '04' or t.tipo_documento = '4'  then 'E'    
  else 'L'    
 end ) +     
 rtrim(t.numero_documento ) + replicate(' ',12- datalength(rtrim(t.numero_documento ))) +     
 'P' +     
 rtrim(t.numero_cuenta_abono) + replicate(' ',20 - datalength(rtrim(t.numero_cuenta_abono))) +    
 rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno)+ ' ' + rtrim(t.nombre) +     
 replicate(' ',40 - datalength(rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno)+ ' ' + rtrim(t.nombre))) +     
 SUBSTRING(REPLICATE('0',15 - DATALENGTH(CONVERT(varchar(12), CONVERT(int,i.importe_concepto*100)))) +    
     CONVERT(varchar(12), CONVERT(int,i.importe_concepto*100)),1,15 ) +     
 replicate(' ',40) +     
 replicate(' ',1) +     
 replicate(' ',50) +     
 replicate(' ',2) +     
 replicate(' ',30) +     
    replicate(' ',18) + '@'    
from Trabajador t inner join Importe_id i    
on  t.codigo_unico = i.codigo_unico and    
  t.tipo_trabajador = i.tipo_trabajador   
    inner join Filtro_proceso f   
  on f.codigo_unico = t.codigo_unico     
where     
  t.compania = @codigo_cia and    
  t.tipo_trabajador = @tipo_trabajador and    
  t.indicador_planilla  = '1' and    
  t.codigo_banco_abono = @codigo_banco and    
  t.numero_cuenta_abono is not null and    
  rtrim(t.numero_cuenta_abono) <> '' and    
  t.moneda_cuenta_abono = @tipo_abono and    
  i.codigo_concepto = @codigo_concepto   and    
  i.codigo_planilla = @codigo_planilla and    
  i.ano_periodo = @ano_periodo and    
  i.codigo_periodo = @codigo_periodo and    
  i.importe_concepto > 0 and  
  f.usuario = @usuario and  
  f.codigo_proceso = @codigo_proceso and  
  f.estacion_id = @estacion_id and  
  f.compania = @compania_usuario     
order by 1 desc    
end  
  
else  
  
begin  
  
  
select @importes = sum(i.importe_concepto),    
  @cantidad = count(*)    
from Historico_boleta_id t inner join Historico_importe_id i    
on  t.codigo_unico = i.codigo_unico and    
  t.tipo_trabajador = i.tipo_trabajador and  
  t.codigo_periodo = i.codigo_periodo and   
  t.ano_periodo = i.ano_periodo     
where     
  t.codigo_compania = @codigo_cia and    
  t.tipo_trabajador = @tipo_trabajador and    
  t.indicador_planilla  = '1' and    
  t.codigo_banco_abono = @codigo_banco and    
  t.numero_cuenta_abono is not null and    
  rtrim(t.numero_cuenta_abono) <> '' and    
  t.moneda_cuenta_abono = @tipo_abono and    
  i.codigo_concepto = @codigo_concepto   and    
  i.codigo_planilla = @codigo_planilla and    
  i.ano_periodo = @ano_periodo and    
  i.codigo_periodo = @codigo_periodo and    
  i.importe_concepto > 0     
    
--OBTENIENDO DATOS DE LOS TRABAJADORES    
select     
 '700'+     
 @numero_cuenta_cargo  +    
 (case    
  when @tipo_abono = 'S' then 'PEN'    
  else 'USD'    
 end) +    
 SUBSTRING(REPLICATE('0',15 - DATALENGTH(CONVERT(varchar(12), CONVERT(int,@importes*100)))) +    
    CONVERT(varchar(12), CONVERT(int,@importes*100)),1,15 ) +     
 'A' +     
 @fecha_proceso +     
 ' ' +     
 replicate(' ',25) +     
 replicate('0',6 - DATALENGTH(convert(varchar(6),@cantidad))) + convert(varchar(6),@cantidad) +     
 @valida +     
 replicate(' ',15) +     
 replicate(' ',3) +     
 replicate(' ',30) +     
 replicate(' ',20) + '@'    
from Historico_boleta_id t inner join Historico_importe_id i    
on  t.codigo_unico = i.codigo_unico and    
  t.tipo_trabajador = i.tipo_trabajador and  
  t.codigo_periodo = i.codigo_periodo and   
  t.ano_periodo = i.ano_periodo       
where     
  t.codigo_compania = @codigo_cia and    
  t.tipo_trabajador = @tipo_trabajador and    
  t.indicador_planilla  = '1' and    
  t.codigo_banco_abono = @codigo_banco and    
  t.numero_cuenta_abono is not null and    
  rtrim(t.numero_cuenta_abono) <> '' and    
  t.moneda_cuenta_abono = @tipo_abono and    
  i.codigo_concepto = @codigo_concepto   and    
  i.codigo_planilla = @codigo_planilla and    
  i.ano_periodo = @ano_periodo and    
  i.codigo_periodo = @codigo_periodo and    
  i.importe_concepto > 0     
union    
select     
 '002' +     
 (case    
  when t.tipo_documento = '01' or t.tipo_documento = '1'  then 'L'    
  when t.tipo_documento = '04' or t.tipo_documento = '4'  then 'E'    
  else 'L'    
 end ) +     
 rtrim(t.numero_documento ) + replicate(' ',12- datalength(rtrim(t.numero_documento ))) +     
 'P' +     
 rtrim(t.numero_cuenta_abono) + replicate(' ',20 - datalength(rtrim(t.numero_cuenta_abono))) +    
 rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno)+ ' ' + rtrim(t.nombre) +     
 replicate(' ',40 - datalength(rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno)+ ' ' + rtrim(t.nombre))) +     
 SUBSTRING(REPLICATE('0',15 - DATALENGTH(CONVERT(varchar(12), CONVERT(int,i.importe_concepto*100)))) +    
     CONVERT(varchar(12), CONVERT(int,i.importe_concepto*100)),1,15 ) +     
 replicate(' ',40) +     
 replicate(' ',1) +     
 replicate(' ',50) +     
 replicate(' ',2) +     
 replicate(' ',30) +     
    replicate(' ',18) + '@'    
from historico_boleta_id t inner join Historico_importe_id i    
on  t.codigo_unico = i.codigo_unico and    
  t.tipo_trabajador = i.tipo_trabajador and  
  t.codigo_periodo = i.codigo_periodo and   
  t.ano_periodo = i.ano_periodo     
where     
  t.codigo_compania = @codigo_cia and    
  t.tipo_trabajador = @tipo_trabajador and    
  t.indicador_planilla  = '1' and    
  t.codigo_banco_abono = @codigo_banco and    
  t.numero_cuenta_abono is not null and    
  rtrim(t.numero_cuenta_abono) <> '' and    
  t.moneda_cuenta_abono = @tipo_abono and    
  i.codigo_concepto = @codigo_concepto   and    
  i.codigo_planilla = @codigo_planilla and    
  i.ano_periodo = @ano_periodo and    
  i.codigo_periodo = @codigo_periodo and    
  i.importe_concepto > 0     
order by 1 desc    
    
end  
*/ 

  
    

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_c_genera_abono_cts_bbva_premium')
BEGIN
  DROP PROCEDURE [dbo].[sp_c_genera_abono_cts_bbva_premium]
END
GO


CREATE PROCEDURE [dbo].[sp_c_genera_abono_cts_bbva_premium]
(
@compania_usuario char(02),
@usuario		char(10),
@codigo_proceso	varchar(20),
@estacion_id	varchar(30),
@codigo_cia		char(02),
@tipo_trabajador char(01),
@codigo_concepto char(04),
@codigo_planilla char(02),
@numero_cuenta_cargo char(20),
@codigo_banco	char(02),
@tipo_cts		char(01),             --S(soles) D(dolares)
@valida			char(1),				--S(si) N(no)
@fecha_proceso	char(8)
)
AS
--sp_c_genera_abono_cts_bbva_premium ' ',' ',' ',' ','01','L','7380','11','15','05','2011','01191077000100006917','02','S'

DECLARE
@codigo_periodo char(02),
@ano_periodo	char(04),
@importes		money,
@cantidad		int


select 
@ano_periodo = ano_periodo,
@codigo_periodo = codigo_periodo 
from Periodo_vigente_planilla
where tipo_trabajador = @tipo_trabajador and
		codigo_compania = @codigo_cia


select	@importes = sum(i.importe_concepto),
		@cantidad = count(*)
from	Trabajador t, Importe_id i
where	t.codigo_unico = i.codigo_unico and
		t.tipo_trabajador = i.tipo_trabajador and	
		t.compania = @codigo_cia and
		t.tipo_trabajador = @tipo_trabajador and
		t.indicador_planilla  = '1' and
		t.institucion_financiera = @codigo_banco and
		t.tipo_cuenta_cts = @tipo_cts and
		i.codigo_concepto = @codigo_concepto   and
		i.codigo_planilla = @codigo_planilla and
		i.ano_periodo = @ano_periodo and
		i.codigo_periodo = @codigo_periodo and
		i.importe_concepto > 0 

--OBTENIENDO DATOS DE LOS TRABAJADORES
select 
	(case
		when @tipo_cts = 'S' then '600'
		else '610'
	end) + 
	@numero_cuenta_cargo  +
	(case
		when @tipo_cts = 'S' then 'PEN'
		else 'USD'
	end) +
	SUBSTRING(REPLICATE('0',15 - DATALENGTH(CONVERT(varchar(12), CONVERT(int,@importes*100)))) +
    CONVERT(varchar(12), CONVERT(int,@importes*100)),1,15 ) + 
	'F' + 
	@fecha_proceso + 
	'D' + 
	replicate(' ',25) + 
	replicate('0',6 - DATALENGTH(convert(varchar(6),@cantidad))) + convert(varchar(6),@cantidad) + 
	@valida + 
	replicate(' ',15) + 
	replicate(' ',3) + 
	replicate(' ',30) + 
	replicate(' ',20)
from	Trabajador t, Importe_id i
where	t.codigo_unico = i.codigo_unico and
		t.tipo_trabajador = i.tipo_trabajador and	
		t.compania = @codigo_cia and
		t.tipo_trabajador = @tipo_trabajador and
		t.indicador_planilla  = '1' and
		t.institucion_financiera = @codigo_banco and
		t.tipo_cuenta_cts = @tipo_cts and
		i.codigo_concepto = @codigo_concepto   and
		i.codigo_planilla = @codigo_planilla and
		i.ano_periodo = @ano_periodo and
		i.codigo_periodo = @codigo_periodo and
		i.importe_concepto > 0 
union
select 
	'002' + 
	(case
		when t.tipo_documento = '01'  or t.tipo_documento = '1'  then 'L'
		when t.tipo_documento = '04'  or t.tipo_documento = '4'  then 'E'
		else 'L'
	end ) + 
	rtrim(t.numero_documento ) + replicate(' ',12- datalength(rtrim(t.numero_documento ))) + 
	'P' + 
	( case
		when @tipo_cts = 'S' then rtrim(t.numero_cuenta_cts) + replicate(' ',20 - datalength(rtrim(t.numero_cuenta_cts)))
		when @tipo_cts = 'D' then rtrim(t.numero_cuenta_cts_dolar) + replicate(' ',20 - datalength(rtrim(t.numero_cuenta_cts_dolar)))
		else replicate(' ',20)
	 end) +
	rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno)+ ' ' + rtrim(t.nombre) + 
	replicate(' ',40 - datalength(rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno)+ ' ' + rtrim(t.nombre))) + 
	SUBSTRING(REPLICATE('0',15 - DATALENGTH(CONVERT(varchar(12), CONVERT(int,i.importe_concepto*100)))) +
    CONVERT(varchar(12), CONVERT(int,i.importe_concepto*100)),1,15 ) + 
	replicate(' ',40) + 
	replicate(' ',1) + 
	replicate(' ',50) + 
	replicate(' ',2) + 
	replicate(' ',30) + 
    replicate(' ',18) 
from	Trabajador t, Importe_id i
where	t.codigo_unico = i.codigo_unico and
		t.tipo_trabajador = i.tipo_trabajador and	
		t.compania = @codigo_cia and
		t.tipo_trabajador = @tipo_trabajador and
		t.indicador_planilla  = '1' and
		t.institucion_financiera = @codigo_banco and
		t.tipo_cuenta_cts = @tipo_cts and
		i.codigo_concepto = @codigo_concepto   and
		i.codigo_planilla = @codigo_planilla and
		i.ano_periodo = @ano_periodo and
		i.codigo_periodo = @codigo_periodo and
		i.importe_concepto > 0 
order by 1 desc

/*
--SP_HELPTEXT sp_c_genera_abono_cts_bbva_premium  
--sp_c_genera_abono_cts_bbva_premium ' ',' ',' ',' ','01','E','8990','01','01191077000100006917','11','S','S','20121115','00','0000'   2926  
  
CREATE  PROCEDURE dbo.sp_c_genera_abono_cts_bbva_premium    
(    
@compania_usuario char(02),    
@usuario  char(10),    
@codigo_proceso varchar(20),    
@estacion_id varchar(30),    
@codigo_cia  char(02),    
@tipo_trabajador char(01),    
@codigo_concepto char(04),    
@codigo_planilla char(02),    
@numero_cuenta_cargo char(20),    
@codigo_banco char(02),    
@tipo_cts  char(01),             --S(soles) D(dolares)    
@valida   char(1),    --S(si) N(no)    
@fecha_proceso char(8),  
@codigo_periodo char(02),    
@ano_periodo char(04)   
)    
AS    
    
DECLARE    
@codigo_periodo_vigente char(02),    
@ano_periodo_vigente char(04),    
@importes  money,    
@cantidad  int    
    
    
select     
@ano_periodo_vigente = ano_periodo,    
@codigo_periodo_vigente = codigo_periodo     
from Periodo_vigente_planilla    
where tipo_trabajador = @tipo_trabajador and    
  codigo_compania = @codigo_cia    
  
IF @codigo_periodo = '00'                      
 select @codigo_periodo = @codigo_periodo_vigente                      
IF @ano_periodo = '0000'                      
 select @ano_periodo = @ano_periodo_vigente      
   
  
  
IF @codigo_periodo + @ano_periodo = @codigo_periodo_vigente + @ano_periodo_vigente   
begin  
  
  
  
select @importes = sum(i.importe_concepto),    
  @cantidad = count(*)    
from Trabajador t, Importe_id i ,filtro_proceso f  
where t.codigo_unico = i.codigo_unico and    
  t.tipo_trabajador = i.tipo_trabajador and     
  t.compania = @codigo_cia and    
  t.tipo_trabajador = @tipo_trabajador and    
  t.indicador_planilla  = '1' and    
  t.institucion_financiera = @codigo_banco and    
  t.tipo_cuenta_cts = @tipo_cts and    
  i.codigo_concepto = @codigo_concepto   and    
  i.codigo_planilla = @codigo_planilla and    
  i.ano_periodo = @ano_periodo and    
  i.codigo_periodo = @codigo_periodo and   
  ( t.codigo_unico = f.codigo_unico) and  
  ( f.usuario   = @usuario )        AND                      
  ( f.codigo_proceso  = @codigo_proceso)   AND                      
  ( f.estacion_id   = @estacion_id)     AND                      
  ( f.compania   = @compania_usuario) and    
  i.importe_concepto > 0     
    
--OBTENIENDO DATOS DE LOS TRABAJADORES    
select     
 (case    
  when @tipo_cts = 'S' then '600'    
  else '610'    
 end) +     
 @numero_cuenta_cargo  +    
 (case    
  when @tipo_cts = 'S' then 'PEN'    
  else 'USD'    
 end) +    
 SUBSTRING(REPLICATE('0',15 - DATALENGTH(CONVERT(varchar(12), CONVERT(int,@importes*100)))) +    
    CONVERT(varchar(12), CONVERT(int,@importes*100)),1,15 ) +     
 'F' +     
 @fecha_proceso +     
 'D' +     
 replicate(' ',25) +     
 replicate('0',6 - DATALENGTH(convert(varchar(6),@cantidad))) + convert(varchar(6),@cantidad) +     
 @valida +     
 replicate(' ',15) +     
 replicate(' ',3) +     
 replicate(' ',30) +     
 replicate(' ',20)    
from Trabajador t, Importe_id i  ,Filtro_proceso f  
where t.codigo_unico = i.codigo_unico and    
  t.tipo_trabajador = i.tipo_trabajador and     
  t.compania = @codigo_cia and    
  t.tipo_trabajador = @tipo_trabajador and    
  t.indicador_planilla  = '1' and    
  t.institucion_financiera = @codigo_banco and    
  t.tipo_cuenta_cts = @tipo_cts and    
  i.codigo_concepto = @codigo_concepto   and    
  i.codigo_planilla = @codigo_planilla and    
  i.ano_periodo = @ano_periodo and    
  i.codigo_periodo = @codigo_periodo and   
  ( t.codigo_unico = f.codigo_unico) and  
  ( f.usuario   = @usuario )        AND                      
  ( f.codigo_proceso  = @codigo_proceso)   AND                      
  ( f.estacion_id   = @estacion_id)     AND                      
  ( f.compania   = @compania_usuario) and     
  i.importe_concepto > 0     
union    
select     
 '002' +     
 (case    
  when t.tipo_documento = '01'  or t.tipo_documento = '1'  then 'L'    
  when t.tipo_documento = '04'  or t.tipo_documento = '4'  then 'E'    
  else 'L'    
 end ) +     
 rtrim(t.numero_documento ) + replicate(' ',12- datalength(rtrim(t.numero_documento ))) +     
 'P' +     
 ( case    
  when @tipo_cts = 'S' then rtrim(t.numero_cuenta_cts) + replicate(' ',20 - datalength(rtrim(t.numero_cuenta_cts)))    
  when @tipo_cts = 'D' then rtrim(t.numero_cuenta_cts_dolar) + replicate(' ',20 - datalength(rtrim(t.numero_cuenta_cts_dolar)))    
  else replicate(' ',20)    
  end) +    
 rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno)+ ' ' + rtrim(t.nombre) +     
 replicate(' ',40 - datalength(rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno)+ ' ' + rtrim(t.nombre))) +     
 SUBSTRING(REPLICATE('0',15 - DATALENGTH(CONVERT(varchar(12), CONVERT(int,i.importe_concepto*100)))) +    
    CONVERT(varchar(12), CONVERT(int,i.importe_concepto*100)),1,15 ) +     
 replicate(' ',40) +     
 replicate(' ',1) +     
 replicate(' ',50) +     
 replicate(' ',2) +     
 replicate(' ',30) +     
    replicate(' ',18)     
from Trabajador t, Importe_id i , Filtro_proceso f  
where t.codigo_unico = i.codigo_unico and    
  t.tipo_trabajador = i.tipo_trabajador and     
  t.compania = @codigo_cia and    
  t.tipo_trabajador = @tipo_trabajador and    
  t.indicador_planilla  = '1' and    
  t.institucion_financiera = @codigo_banco and    
  t.tipo_cuenta_cts = @tipo_cts and    
  i.codigo_concepto = @codigo_concepto   and    
  i.codigo_planilla = @codigo_planilla and    
  i.ano_periodo = @ano_periodo and    
  i.codigo_periodo = @codigo_periodo and   
  ( t.codigo_unico = f.codigo_unico) and  
  ( f.usuario   = @usuario )        AND                      
  ( f.codigo_proceso  = @codigo_proceso)   AND                      
  ( f.estacion_id   = @estacion_id)     AND                      
  ( f.compania   = @compania_usuario) and     
  i.importe_concepto > 0     
order by 1 desc    
    
end  
    
else  
  
begin  
  
select @importes = sum(i.importe_concepto),    
  @cantidad = count(*)    
from Historico_boleta_id t, Historico_importe_id i    
where t.codigo_unico = i.codigo_unico and    
  t.tipo_trabajador = i.tipo_trabajador and     
  t.codigo_compania = @codigo_cia and    
  t.tipo_trabajador = @tipo_trabajador and    
  t.indicador_planilla  = '1' and    
  t.institucion_financiera = @codigo_banco and    
  t.tipo_cuenta_cts = @tipo_cts and    
  i.codigo_concepto = @codigo_concepto   and    
  i.codigo_planilla = @codigo_planilla and    
  i.ano_periodo = t.ano_periodo and    
  i.codigo_periodo = t.codigo_periodo and    
  i.ano_periodo = @ano_periodo and    
  i.codigo_periodo = @codigo_periodo and    
  i.importe_concepto > 0     
    
--OBTENIENDO DATOS DE LOS TRABAJADORES    
select     
 (case    
  when @tipo_cts = 'S' then '600'    
  else '610'    
 end) +     
 @numero_cuenta_cargo  +    
 (case    
  when @tipo_cts = 'S' then 'PEN'    
  else 'USD'    
 end) +    
 SUBSTRING(REPLICATE('0',15 - DATALENGTH(CONVERT(varchar(12), CONVERT(int,@importes*100)))) +    
    CONVERT(varchar(12), CONVERT(int,@importes*100)),1,15 ) +     
 'F' +     
 @fecha_proceso +     
 'D' +     
 replicate(' ',25) +     
 replicate('0',6 - DATALENGTH(convert(varchar(6),@cantidad))) + convert(varchar(6),@cantidad) +     
 @valida +     
 replicate(' ',15) +     
 replicate(' ',3) +     
 replicate(' ',30) +     
 replicate(' ',20)    
from Historico_boleta_id t, Historico_importe_id i    
where t.codigo_unico = i.codigo_unico and    
  t.tipo_trabajador = i.tipo_trabajador and     
  t.codigo_compania = @codigo_cia and    
  t.tipo_trabajador = @tipo_trabajador and    
  t.indicador_planilla  = '1' and    
  t.institucion_financiera = @codigo_banco and    
  t.tipo_cuenta_cts = @tipo_cts and    
  i.codigo_concepto = @codigo_concepto   and    
  i.codigo_planilla = @codigo_planilla and   
  i.ano_periodo = t.ano_periodo and    
  i.codigo_periodo = t.codigo_periodo and     
  i.ano_periodo = @ano_periodo and    
  i.codigo_periodo = @codigo_periodo and    
  i.importe_concepto > 0     
union    
select     
 '002' +     
 (case    
  when t.tipo_documento = '01'  or t.tipo_documento = '1'  then 'L'    
  when t.tipo_documento = '04'  or t.tipo_documento = '4'  then 'E'    
  else 'L'    
 end ) +     
 rtrim(t.numero_documento ) + replicate(' ',12- datalength(rtrim(t.numero_documento ))) +     
 'P' +     
 ( case    
  when @tipo_cts = 'S' then rtrim(t.numero_cuenta_cts) + replicate(' ',20 - datalength(rtrim(t.numero_cuenta_cts)))    
  when @tipo_cts = 'D' then rtrim(t.numero_cuenta_cts_dolar) + replicate(' ',20 - datalength(rtrim(t.numero_cuenta_cts_dolar)))    
  else replicate(' ',20)    
  end) +    
 rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno)+ ' ' + rtrim(t.nombre) +     
 replicate(' ',40 - datalength(rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno)+ ' ' + rtrim(t.nombre))) +     
 SUBSTRING(REPLICATE('0',15 - DATALENGTH(CONVERT(varchar(12), CONVERT(int,i.importe_concepto*100)))) +    
    CONVERT(varchar(12), CONVERT(int,i.importe_concepto*100)),1,15 ) +     
 replicate(' ',40) +     
 replicate(' ',1) +     
 replicate(' ',50) +     
 replicate(' ',2) +     
 replicate(' ',30) +     
    replicate(' ',18)     
from Historico_boleta_id t, Historico_importe_id i    
where t.codigo_unico = i.codigo_unico and    
  t.tipo_trabajador = i.tipo_trabajador and     
  t.codigo_compania = @codigo_cia and    
  t.tipo_trabajador = @tipo_trabajador and    
  t.indicador_planilla  = '1' and    
  t.institucion_financiera = @codigo_banco and    
  t.tipo_cuenta_cts = @tipo_cts and    
  i.codigo_concepto = @codigo_concepto   and    
  i.codigo_planilla = @codigo_planilla and  
  i.ano_periodo = t.ano_periodo and    
  i.codigo_periodo = t.codigo_periodo and     
  i.ano_periodo = @ano_periodo and    
  i.codigo_periodo = @codigo_periodo and    
  i.importe_concepto > 0     
order by 1 desc    
  
end  
*/

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_fer_infoxpress')
BEGIN
  DROP PROCEDURE [dbo].[sp_fer_infoxpress]
END
GO

CREATE PROCEDURE sp_fer_infoxpress
(
@compania_usuario char(02),
@usuario char(10),
@codigo_proceso	varchar(20),
@estacion_id varchar(30),
@compania    char(02), 
@tipo_trabajador char(01), 
@codigo_planilla char(02),
@codigo_concepto char(04),
@moneda char(02),
@num_cta_cargo char(13),
@tipo_cargo char (01),
@tipo_pago char (01),
@subtipo_pago char (01),
@nota_cargo char (01),
@flag_IDC char (01),
@fecha_procesar char(08),
@banco_abono char(02)
) as

declare
@suma_26 decimal,
@suma_4 decimal,
@checksum decimal,
@sum_cta decimal

If @codigo_planilla = '09'
   Select @codigo_proceso = 'w_utilidad'


Select t.codigo_unico, 
            numero_cuenta_abono, tipo_cuenta_abono,
           apellido_paterno, apellido_materno, nombre,
           tipo_documento, numero_documento
Into #temp_filtro
From Filtro_proceso f, Trabajador  t
Where  t.codigo_unico   = f.codigo_unico  AND 
             t.codigo_banco_abono = @banco_abono and 
             t.tipo_trabajador=@tipo_trabajador and 
             t.compania = @compania and 
             f.usuario    = @usuario  AND  
             f.codigo_proceso   = @codigo_proceso  AND  
             f.estacion_id   = @estacion_id   AND
             f.compania   = @compania


Select @suma_26 = convert(decimal,sum(convert(money,'0'+substring(numero_cuenta_abono,4,11))))
  FROM  Importe_id i, #temp_filtro t
 WHERE t.codigo_unico = i.codigo_unico  and                                                                         
	i.codigo_concepto = @codigo_concepto   and
	i.codigo_planilla = @codigo_planilla and
/*	SUBSTRING(Trabajador.numero_cuenta_abono,4,9)<>(null) and */
	t.tipo_cuenta_abono in ('2', '4' , '6') 

/*
Select @suma_4 = convert(decimal,sum(convert(money,'0'+substring(numero_cuenta_abono,4,11))))
From   #temp_filtro
where tipo_cuenta_abono='4'
*/

Select @sum_cta = convert(decimal,'00' + substring(@num_cta_cargo,4,11))

Select @checksum =  @suma_26 + @sum_cta

 SELECT 

 CONVERT(varchar(137),
	' '+ '2' + 	case t.tipo_cuenta_abono
			when '2' then 'C'
			when '4' then 'A'
			when '6' then 'M'
			end   + 
	substring(t.numero_cuenta_abono,1,3) +
             replicate('0',11 - datalength(substring(t.numero_cuenta_abono,4,11))) +
             substring(t.numero_cuenta_abono,4,11) +  '      ' +
             convert(varchar(40), rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno)  + ' ' +  rtrim(t.nombre)) +
             replicate(' ',40 - datalength(convert(varchar(40), rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno)  + ' ' +  rtrim(t.nombre) ))) +  
	@moneda + 
             SUBSTRING(REPLICATE('0',15 - DATALENGTH(CONVERT(varchar(15), CONVERT(integer,i.importe_concepto*100))))  +
	CONVERT(varchar(15), CONVERT(integer,i.importe_concepto*100)),1,15) +
	'                                        ' +
	'0'+
              Case t.tipo_documento
                  when 'LE' then 'DNI'
                  when 'CE' then 'CE '
                  when 'PP' then 'PP '
                  else 'CI '
              End +
	CONVERT(varchar(12), rtrim(t.numero_documento)) +   replicate(' ',12 - datalength(CONVERT(varchar(12), rtrim(t.numero_documento)))) +            
             @flag_IDC), '2'+t.apellido_paterno + t.apellido_materno 
  FROM  Importe_id i, #temp_filtro t
 WHERE	t.codigo_unico = i.codigo_unico and	i.codigo_concepto = @codigo_concepto   and
	i.codigo_planilla = @codigo_planilla and
/*	SUBSTRING(Trabajador.numero_cuenta_abono,4,9)<>(null)  and */
	t.tipo_cuenta_abono in ( '2','4','6')  and 	i.importe_concepto <> 0

UNION

 SELECT 
DISTINCT
 CONVERT(varchar(107),
	'#'+'1' + @tipo_pago + @tipo_cargo + SUBSTRING(@num_cta_cargo,1,3) + REPLICATE('0',1) +
	RTRIM(SUBSTRING(@num_cta_cargo,4,datalength(@num_cta_cargo)- 3)) + '      ' +  
	@moneda + 
	(CONVERT(varchar(15),replicate('0',15 - DATALENGTH(CONVERT(varchar(15), CONVERT(integer, SUM(i.importe_concepto*100))))) + 
	CONVERT(varchar(15), CONVERT(integer, SUM(i.importe_concepto*100))))) +
	@fecha_procesar +  '                    '  + 		
	replicate('0',15 - datalength(rtrim(convert(varchar(15),@checksum)))) + 
	rtrim(convert(varchar(15),@checksum)) +	
	replicate('0',6 - datalength(rtrim(convert(varchar(06),(count(t.codigo_unico)))))) + 
	rtrim(convert(varchar(06),(count(t.codigo_unico)))) +
	@subtipo_pago + 
	'               ' + @nota_cargo),
             '1'
  FROM  Importe_id i, #temp_filtro t
 WHERE t.codigo_unico = i.codigo_unico  and                                                                         
	i.codigo_concepto = @codigo_concepto   and
	i.codigo_planilla = @codigo_planilla and
/*	SUBSTRING(Trabajador.numero_cuenta_abono,4,9)<>(null) and */
	t.tipo_cuenta_abono in ('2', '4' , '6') 
Order by 2
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_IMPLEMENTOS')
BEGIN
  DROP PROCEDURE [dbo].[SP_IMPLEMENTOS]
END
GO


CREATE PROCEDURE [DBO].[SP_IMPLEMENTOS]
(	@COMPANIA CHAR(2)
)
AS
	DECLARE	@DESCRIPCION_CIA	VARCHAR(50)
	EXECUTE	SP_FILTRO_RESTRICCION 'RPT_IMPLE'
	
	SET @DESCRIPCION_CIA	=	DBO.SF_OBTENER_DATOS_CIA(@COMPANIA,'0')

	
	SELECT	T.MATRICULA,
				UPPER(	LTRIM(RTRIM(T.APELLIDO_PATERNO))	+	' '	+
							LTRIM(RTRIM(T.APELLIDO_MATERNO))	+	',	'	+
							LTRIM(RTRIM(T.NOMBRE				))	)											AS	NOMBRES			,
				DBO.SF_OBTENER_TABLA_DETALLE		('0501',I.CODIGO_IMPLEMENTO)					AS	IMPLEMENTO		,
				I.CANTIDAD																						AS	CANTIDAD			,
				I.FLAG_PROPIO																					AS	FLAG_PROPIO		,
				I.OBSERVACION																					AS	OBSERVACION		,
				@DESCRIPCION_CIA																				AS	NOMBRE_COMPANIA,
				(	SELECT	COUNT(TABLA.CODIGO_UNICO)
					FROM	(	SELECT I.CODIGO_UNICO
								FROM	TBL_IMPLEMENTO I
								INNER JOIN	TRABAJADOR				T1	ON	(	I.CODIGO_UNICO	=	T1.CODIGO_UNICO	AND
																						I.COMPANIA		=	T1.COMPANIA			)
								INNER JOIN	FILTRO_RESTRICCION	FR ON	(	I.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
								WHERE	T1.COMPANIA					=	@COMPANIA		AND
										T1.INDICADOR_PLANILLA	=	'1'				AND
										FR.ID_REPORTE				=	'RPT_IMPLE'	AND
										FR.SPID						=	@@SPID
								GROUP BY	I.CODIGO_UNICO ) TABLA	)									AS	TOTAL
	FROM	TRABAJADOR T
	INNER JOIN TBL_IMPLEMENTO			I	ON	(	T.CODIGO_UNICO	=	I.CODIGO_UNICO	AND
															T.COMPANIA		=	I.COMPANIA		)
	INNER JOIN	FILTRO_RESTRICCION	FR ON	(	I.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
	WHERE	T.COMPANIA				=	@COMPANIA	AND
			FR.ID_REPORTE			=	'RPT_IMPLE'	AND
			FR.SPID					=	@@SPID
	ORDER BY 2

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_LIQ_ANUAL_AFP')
BEGIN
  DROP PROCEDURE [dbo].[SP_LIQ_ANUAL_AFP]
END
GO



/*

EXEC SP_LIQ_ANUAL_AFP '01','USER01','42-LIQUIDACIONES','00000007','01','10','2012','0000000007','3016','3017','3018','31/01/2015'


*/   
CREATE PROCEDURE [DBO].[SP_LIQ_ANUAL_AFP]
(	@COMPANIA_USUARIO				CHAR(02),
	@USUARIO							CHAR(10),
	@CODIGO_PROCESO				CHAR(30),
	@ESTACION_ID					CHAR(20),
	
	@COMPANIA						CHAR(02),
	@CODIGO_PLANILLA				CHAR(02),
	@ANO_PERIODO					CHAR(04),
	@MATRICULA_REPRESENTANTE	CHAR(10),
	@CONCEPTO1						CHAR(04),
	@CONCEPTO2						CHAR(04),
	@CONCEPTO3						CHAR(04),
	@FECHA							CHAR(10)
)
AS
	DECLARE	@NOMBRE_REPRESENTANTE	VARCHAR(110),
				@NUMERO_DOCUMENTO			VARCHAR(20)	,
				@CARGO_REPRESENTANTE		VARCHAR(80)	,
				@CODIGO_AFP_HIS			CHAR(02)		,
				@APELLIDO_PATERNO			VARCHAR(30)	,
				@APELLIDO_MATERNO			VARCHAR(30)	,
				@NOMBRE						VARCHAR(50)	,
				@CODIGO_UNICO				CHAR(09)		,
				@DOMICILIO_CIA				VARCHAR(80)	,
				@RUC_CIA						VARCHAR(15)	,
				@NOMBRE_CIA					VARCHAR(50)	,
				@TELEFONO_CIA				VARCHAR(10)	,
				@CODIGO_SPP					VARCHAR(15)	,
				@FECHA_CESE					DATETIME
	
				
	SELECT	@NOMBRE_REPRESENTANTE	=	UPPER(LTRIM(RTRIM(	LTRIM(RTRIM(APELLIDO_PATERNO))	+ ' '  +
																				LTRIM(RTRIM(APELLIDO_MATERNO))	+ ', ' + 
																				LTRIM(RTRIM(NOMBRE))					))),
				@NUMERO_DOCUMENTO			=	LTRIM(RTRIM( NUMERO_DOCUMENTO ))	,
				@CARGO_REPRESENTANTE		=	[DBO].[SF_OBTENER_PUESTO_COMPANIA](COMPANIA,PUESTO_ORGANICA,'0')
	FROM TRABAJADOR
	WHERE	MATRICULA				=	@MATRICULA_REPRESENTANTE	AND
			COMPANIA					=	@COMPANIA						AND
			SITUACION_TRABAJADOR	=	'A'
	
	SELECT	@DOMICILIO_CIA	=	LTRIM(RTRIM(DOMICILIO_FISCAL_CIA)),
				@RUC_CIA			=	LTRIM(RTRIM(NUMERO_RUC_CIA)),
				@NOMBRE_CIA		=	LTRIM(RTRIM(NOMBRE_CIA)),
				@TELEFONO_CIA	=	LTRIM(RTRIM(TELEFONO_CIA))
	FROM TBL_COMPANIA
	WHERE	CODIGO_CIA	=	@COMPANIA
	
	SELECT	@NOMBRE_CIA					AS	NOMBRE_CIA					,
				@DOMICILIO_CIA				AS	DOMICILIO_CIA				,
				@RUC_CIA						AS	RUC_CIA						,
				@TELEFONO_CIA				AS	TELEFONO_CIA				,
				TMP.CODIGO_SPP				AS	CODIGO_SPP					,
				TMP.APELLIDO_PATERNO		AS	APELLIDO_PATERNO			,
				TMP.APELLIDO_MATERNO		AS	APELLIDO_MATERNO			,
				TMP.NOMBRE					AS	NOMBRE						,
				TMP.IMPORTE_ENERO			AS	IMPORTE_ENERO				,
				TMP.IMPORTE_FEBRERO		AS	IMPORTE_FEBRERO			,
				TMP.IMPORTE_MARZO			AS	IMPORTE_MARZO				,
				TMP.IMPORTE_ABRIL			AS	IMPORTE_ABRIL				,
				TMP.IMPORTE_MAYO			AS	IMPORTE_MAYO				,
				TMP.IMPORTE_JUNIO			AS	IMPORTE_JUNIO				,
				TMP.IMPORTE_JULIO			AS	IMPORTE_JULIO				,
				TMP.IMPORTE_AGOSTO		AS	IMPORTE_AGOSTO				,
				TMP.IMPORTE_SETIEMBRE	AS	IMPORTE_SETIEMBRE			,
				TMP.IMPORTE_OCTUBRE		AS	IMPORTE_OCTUBRE			,
				TMP.IMPORTE_NOVIEMBRE	AS	IMPORTE_NOVIEMBRE			,
				TMP.IMPORTE_DICIEMBRE	AS	IMPORTE_DICIEMBRE			,
				TMP.FECHA_CESE				AS	FECHA_CESE					,
				TMP.CODIGO_AFP				AS	CODIGO_AFP					,
				@NOMBRE_REPRESENTANTE	AS	NOMBRE_REPRESENTANTE		,
				@CARGO_REPRESENTANTE		AS	CARGO_REPRESENTANTE		,
				@NUMERO_DOCUMENTO			AS	DOCUMENTO_REPRESENTANTE	,
				@FECHA						AS	FECHA							,
				@COMPANIA					AS	CODIGO_COMPANIA
	FROM(	SELECT	H.CODIGO_AFP							,
						LTRIM(RTRIM(T.APELLIDO_PATERNO))	AS APELLIDO_PATERNO,
						LTRIM(RTRIM(T.APELLIDO_MATERNO))	AS APELLIDO_MATERNO,
						LTRIM(RTRIM(T.NOMBRE))				AS NOMBRE,
						T.CODIGO_UNICO							,
						T.CODIGO_SPP							,
						ISNULL(T.FECHA_RETIRO,'')			AS	FECHA_CESE,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('01',@ANO_PERIODO,@CONCEPTO1,@CONCEPTO2,@CONCEPTO3,T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_ENERO		,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('02',@ANO_PERIODO,@CONCEPTO1,@CONCEPTO2,@CONCEPTO3,T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_FEBRERO	,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('03',@ANO_PERIODO,@CONCEPTO1,@CONCEPTO2,@CONCEPTO3,T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_MARZO		,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('04',@ANO_PERIODO,@CONCEPTO1,@CONCEPTO2,@CONCEPTO3,T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_ABRIL		,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('05',@ANO_PERIODO,@CONCEPTO1,@CONCEPTO2,@CONCEPTO3,T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_MAYO		,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('06',@ANO_PERIODO,@CONCEPTO1,@CONCEPTO2,@CONCEPTO3,T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_JUNIO		,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('07',@ANO_PERIODO,@CONCEPTO1,@CONCEPTO2,@CONCEPTO3,T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_JULIO		,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('08',@ANO_PERIODO,@CONCEPTO1,@CONCEPTO2,@CONCEPTO3,T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_AGOSTO		,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('09',@ANO_PERIODO,@CONCEPTO1,@CONCEPTO2,@CONCEPTO3,T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_SETIEMBRE	,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('10',@ANO_PERIODO,@CONCEPTO1,@CONCEPTO2,@CONCEPTO3,T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_OCTUBRE	,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('11',@ANO_PERIODO,@CONCEPTO1,@CONCEPTO2,@CONCEPTO3,T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_NOVIEMBRE	,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('12',@ANO_PERIODO,@CONCEPTO1,@CONCEPTO2,@CONCEPTO3,T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_DICIEMBRE
			FROM TRABAJADOR T
			INNER JOIN HISTORICO_BOLETA_ID H ON (	T.CODIGO_UNICO	=	H.CODIGO_UNICO		AND
																T.COMPANIA		=	H.CODIGO_COMPANIA	)
			WHERE	T.COMPANIA									=	@COMPANIA				AND
					T.INDICADOR_INSCRITO_AFP				<>	'0'						AND
					(	(	T.INDICADOR_PLANILLA				=	'1'				)	OR
						(	T.INDICADOR_PLANILLA				=	'0'				AND
							DATEPART(YYYY,T.FECHA_RETIRO) =	@ANO_PERIODO	)	)	AND
					H.CODIGO_AFP								IS NOT NULL
			GROUP BY H.CODIGO_AFP		,
						T.APELLIDO_PATERNO,
						T.APELLIDO_MATERNO,
						T.NOMBRE				,
						T.CODIGO_UNICO		,
						T.CODIGO_SPP		,
						T.FECHA_RETIRO		,
						T.TIPO_TRABAJADOR	)	TMP
	WHERE	TMP.IMPORTE_ENERO			<>	0	OR
			TMP.IMPORTE_FEBRERO		<>	0	OR
			TMP.IMPORTE_MARZO			<>	0	OR
			TMP.IMPORTE_ABRIL			<>	0	OR
			TMP.IMPORTE_MAYO			<>	0	OR
			TMP.IMPORTE_JUNIO			<>	0	OR
			TMP.IMPORTE_JULIO			<>	0	OR
			TMP.IMPORTE_AGOSTO		<>	0	OR
			TMP.IMPORTE_SETIEMBRE	<>	0	OR
			TMP.IMPORTE_OCTUBRE		<>	0	OR
			TMP.IMPORTE_NOVIEMBRE	<>	0	OR
			TMP.IMPORTE_DICIEMBRE	<>	0
	ORDER BY 6,7,8

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_LIQ_ANUAL_ONP')
BEGIN
  DROP PROCEDURE [dbo].[SP_LIQ_ANUAL_ONP]
END
GO



/*

EXEC SP_LIQ_ANUAL_ONP '01','USER01','42-LIQUIDACIONES','00000007','01','10','2012','0000000007','3016','3017','3018','31/01/2015'


*/   
CREATE PROCEDURE [DBO].[SP_LIQ_ANUAL_ONP]
(	@COMPANIA_USUARIO				CHAR(02),
	@USUARIO							CHAR(10),
	@CODIGO_PROCESO				CHAR(30),
	@ESTACION_ID					CHAR(20),
	
	@COMPANIA						CHAR(02),
	@CODIGO_PLANILLA				CHAR(02),
	@ANO_PERIODO					CHAR(04),
	@MATRICULA_REPRESENTANTE	CHAR(10),
	@CONCEPTO1						CHAR(04),
	@FECHA							CHAR(10)
)
AS
	DECLARE	@NOMBRE_REPRESENTANTE	VARCHAR(110),
				@NUMERO_DOCUMENTO			VARCHAR(20)	,
				@CARGO_REPRESENTANTE		VARCHAR(80)	,
				@DOMICILIO_CIA				VARCHAR(80)	,
				@RUC_CIA						VARCHAR(15)	,
				@NOMBRE_CIA					VARCHAR(50)	,
				@TELEFONO_CIA				VARCHAR(10)	,
				@CODIGO_SPP					VARCHAR(15)	,
				@FECHA_CESE					DATETIME
	
				
	SELECT	@NOMBRE_REPRESENTANTE	=	UPPER(LTRIM(RTRIM(	LTRIM(RTRIM(APELLIDO_PATERNO))	+ ' '  +
																				LTRIM(RTRIM(APELLIDO_MATERNO))	+ ', ' + 
																				LTRIM(RTRIM(NOMBRE))					))),
				@NUMERO_DOCUMENTO			=	LTRIM(RTRIM( NUMERO_DOCUMENTO ))	,
				@CARGO_REPRESENTANTE		=	[DBO].[SF_OBTENER_PUESTO_COMPANIA](COMPANIA,PUESTO_ORGANICA,'0')
	FROM TRABAJADOR
	WHERE	MATRICULA				=	@MATRICULA_REPRESENTANTE	AND
			COMPANIA					=	@COMPANIA						AND
			SITUACION_TRABAJADOR	=	'A'
	
	SELECT	@DOMICILIO_CIA	=	LTRIM(RTRIM(DOMICILIO_FISCAL_CIA)),
				@RUC_CIA			=	LTRIM(RTRIM(NUMERO_RUC_CIA)),
				@NOMBRE_CIA		=	LTRIM(RTRIM(NOMBRE_CIA)),
				@TELEFONO_CIA	=	LTRIM(RTRIM(TELEFONO_CIA))
	FROM TBL_COMPANIA
	WHERE	CODIGO_CIA	=	@COMPANIA
	
	SELECT	@NOMBRE_CIA					AS	NOMBRE_CIA					,
				@DOMICILIO_CIA				AS	DOMICILIO_CIA				,
				@RUC_CIA						AS	RUC_CIA						,
				@TELEFONO_CIA				AS	TELEFONO_CIA				,
				TMP.APELLIDO_PATERNO		AS	APELLIDO_PATERNO			,
				TMP.APELLIDO_MATERNO		AS	APELLIDO_MATERNO			,
				TMP.NOMBRE					AS	NOMBRE						,
				TMP.IMPORTE_ENERO			AS	IMPORTE_ENERO				,
				TMP.IMPORTE_FEBRERO		AS	IMPORTE_FEBRERO			,
				TMP.IMPORTE_MARZO			AS	IMPORTE_MARZO				,
				TMP.IMPORTE_ABRIL			AS	IMPORTE_ABRIL				,
				TMP.IMPORTE_MAYO			AS	IMPORTE_MAYO				,
				TMP.IMPORTE_JUNIO			AS	IMPORTE_JUNIO				,
				TMP.IMPORTE_JULIO			AS	IMPORTE_JULIO				,
				TMP.IMPORTE_AGOSTO		AS	IMPORTE_AGOSTO				,
				TMP.IMPORTE_SETIEMBRE	AS	IMPORTE_SETIEMBRE			,
				TMP.IMPORTE_OCTUBRE		AS	IMPORTE_OCTUBRE			,
				TMP.IMPORTE_NOVIEMBRE	AS	IMPORTE_NOVIEMBRE			,
				TMP.IMPORTE_DICIEMBRE	AS	IMPORTE_DICIEMBRE			,
				TMP.FECHA_CESE				AS	FECHA_CESE					,
				@NOMBRE_REPRESENTANTE	AS	NOMBRE_REPRESENTANTE		,
				@CARGO_REPRESENTANTE		AS	CARGO_REPRESENTANTE		,
				@NUMERO_DOCUMENTO			AS	DOCUMENTO_REPRESENTANTE	,
				@FECHA						AS	FECHA							,
				@COMPANIA					AS	CODIGO_COMPANIA
	FROM(	SELECT	LTRIM(RTRIM(T.APELLIDO_PATERNO))	AS APELLIDO_PATERNO,
						LTRIM(RTRIM(T.APELLIDO_MATERNO))	AS APELLIDO_MATERNO,
						LTRIM(RTRIM(T.NOMBRE))				AS NOMBRE,
						T.CODIGO_UNICO							,
						ISNULL(T.FECHA_RETIRO,'')			AS	FECHA_CESE,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('01',@ANO_PERIODO,@CONCEPTO1,'','',T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_ENERO		,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('02',@ANO_PERIODO,@CONCEPTO1,'','',T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_FEBRERO	,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('03',@ANO_PERIODO,@CONCEPTO1,'','',T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_MARZO		,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('04',@ANO_PERIODO,@CONCEPTO1,'','',T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_ABRIL		,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('05',@ANO_PERIODO,@CONCEPTO1,'','',T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_MAYO		,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('06',@ANO_PERIODO,@CONCEPTO1,'','',T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_JUNIO		,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('07',@ANO_PERIODO,@CONCEPTO1,'','',T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_JULIO		,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('08',@ANO_PERIODO,@CONCEPTO1,'','',T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_AGOSTO		,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('09',@ANO_PERIODO,@CONCEPTO1,'','',T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_SETIEMBRE	,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('10',@ANO_PERIODO,@CONCEPTO1,'','',T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_OCTUBRE	,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('11',@ANO_PERIODO,@CONCEPTO1,'','',T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_NOVIEMBRE	,
						ISNULL([DBO].[SF_OBTENER_MONTOS_MESES] ('12',@ANO_PERIODO,@CONCEPTO1,'','',T.CODIGO_UNICO,@CODIGO_PLANILLA,@COMPANIA,T.TIPO_TRABAJADOR	),0)	AS IMPORTE_DICIEMBRE
			FROM TRABAJADOR T
			INNER JOIN HISTORICO_BOLETA_ID H ON (	T.CODIGO_UNICO	=	H.CODIGO_UNICO		AND
																T.COMPANIA		=	H.CODIGO_COMPANIA	)
			WHERE	T.COMPANIA									=	@COMPANIA				AND
					T.INDICADOR_INSCRITO_AFP				=	'0'						AND
					(	(	T.INDICADOR_PLANILLA				=	'1'				)	OR
						(	T.INDICADOR_PLANILLA				=	'0'				AND
							DATEPART(YYYY,T.FECHA_RETIRO) =	@ANO_PERIODO	)	)
			GROUP BY T.APELLIDO_PATERNO,
						T.APELLIDO_MATERNO,
						T.NOMBRE				,
						T.CODIGO_UNICO		,
						T.CODIGO_SPP		,
						T.FECHA_RETIRO		,
						T.TIPO_TRABAJADOR	)	TMP
	WHERE	TMP.IMPORTE_ENERO			<>	0	OR
			TMP.IMPORTE_FEBRERO		<>	0	OR
			TMP.IMPORTE_MARZO			<>	0	OR
			TMP.IMPORTE_ABRIL			<>	0	OR
			TMP.IMPORTE_MAYO			<>	0	OR
			TMP.IMPORTE_JUNIO			<>	0	OR
			TMP.IMPORTE_JULIO			<>	0	OR
			TMP.IMPORTE_AGOSTO		<>	0	OR
			TMP.IMPORTE_SETIEMBRE	<>	0	OR
			TMP.IMPORTE_OCTUBRE		<>	0	OR
			TMP.IMPORTE_NOVIEMBRE	<>	0	OR
			TMP.IMPORTE_DICIEMBRE	<>	0
	ORDER BY 6,7,8

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_PER_RPT_CRONO_PAGO')
BEGIN
  DROP PROCEDURE [dbo].[SP_PER_RPT_CRONO_PAGO]
END
GO


/*
[DBO].[SP_PER_RPT_CRONO_PAGO]	'01','%','%','01','2014','12','2014'
*/
CREATE PROCEDURE [DBO].[SP_PER_RPT_CRONO_PAGO]
(	@COMPANIA				CHAR(02)		,
	@TIPO_TRABAJADOR		CHAR(01)		,
	@CENTRO_COSTO			VARCHAR(08)	,
	@CODIGO_PERIODO_INI	CHAR(02)		,
	@ANO_PERIODO_INI		CHAR(04)		,
	@CODIGO_PERIODO_FIN	CHAR(02)		,
	@ANO_PERIODO_FIN		CHAR(04),
	@IND_SUBUNIDAD CHAR(1) = 'S'
)
AS

	DECLARE	@DESCRIPCION_CIA	VARCHAR(50)
	
	SELECT	@DESCRIPCION_CIA	=	DBO.SF_OBTENER_DATOS_CIA(@COMPANIA,'0')
	SELECT	@CENTRO_COSTO		=	LTRIM(RTRIM(@CENTRO_COSTO))
	
	EXECUTE sp_filtro_restriccion 'RPTPRESTAMOCRONO'
	
	SELECT	T.MATRICULA																						AS	MATRICULA							,
				UPPER	(	LTRIM(RTRIM(	LTRIM(RTRIM(T.APELLIDO_PATERNO))	+	' '	+
												LTRIM(RTRIM(T.APELLIDO_MATERNO))	+	' '	+
												LTRIM(RTRIM(T.NOMBRE)))))									AS	NOMBRE								,
				P.AMORTIZACION_EXTRAORDINARIA																AS	AMORTIZACION_EXTRAORDINARIA	,
				P.MONTO_AMORTIZACION																			AS	MONTO_AMORTIZACION				,
				P.SALDO_PRESTAMO																				AS	SALDO_PRESTAMO						,	
				P.SECUENCIA_TIPO_PRESTAMO																	AS	SECUENCIA_TIPO_PRESTAMO			,
				P.ANO_PERIODO																					AS	ANO_PERIODO							,
				P.CODIGO_PERIODO																				AS	CODIGO_PERIODO						,
				P.NUMERO_CUOTA																					AS	NUMERO_CUOTA						,
				P.TIPO_PRESTAMO																				AS	TIPO_PRESTAMO						, 
				P.SECUENCIA_PRESTAMO																			AS	SECUENCIA_PRESTAMO				,
				P.INDICADOR_PAGO																				AS	INDICADOR_PAGO						,
				P.SITUACION_PLAN_PAGO																		AS	SITUACION_PLAN_PAGO				,
				P.MONTO_INTERES																				AS	MONTO_INTERES						,
				P.MONTO_DESCUENTO_MENSUAL																	AS	MONTO_DESCUENTO_MENSUAL			,
				P.MONTO_DESCUENTO_GRATIFICACION															AS	MONTO_DESCUENTO_GRATIFICACION	,
				P.MONTO_DESCUENTO_ENERO																		AS	MONTO_DESCUENTO_ENERO			,
				P.MONTO_INTERES_PENDIENTE																	AS	MONTO_INTERES_PENDIENTE			,
				P.TASA_INTERES																					AS	TASA_INTERES						,
				P.MONTO_INTERES_GRATI																		AS	MONTO_INTERES_GRATI				,
				PR.MOTIVO_PRESTAMO																			AS	MOTIVO_PRESTAMO					,
				PR.FECHA_SOLICITUD																			AS	FECHA_SOLICITUD					,
				PR.MONTO_SOLICITADO																			AS	MONTO_SOLICITADO					,
				PR.CODIGO_INICIO_PAGO																		AS	CODIGO_INICIO_PAGO				, 
				PR.ANO_INICIO_PAGO																			AS	ANO_INICIO_PAGO					, 
				PR.COMENTARIO_INICIAL																		AS	COMENTARIO_INICIAL				,
				PR.COMENTARIO_VERIFICACION																	AS	COMENTARIO_VERIFICACION			,
				PR.MONTO_APROBADO																				AS	MONTO_APROBADO						, 
				PR.TASA_INTERES																				AS	TASA_INTERES						,	
				T.UNIDAD_FUNCIONAL_ORGANICA																AS	UNIDAD_FUNCIONAL_ORGANICA		,
				DBO.SF_OBTENER_UNIDAD_FUNCIONAL(T.COMPANIA,T.UNIDAD_FUNCIONAL_ORGANICA)		AS	CENTRO_COSTO						,
				RTRIM(LTRIM((	SELECT DESCRIPCION_TIPO_PRESTAMO
									FROM TBL_TIPO_PRESTAMO
									WHERE	TIPO_PRESTAMO	= PR.TIPO_PRESTAMO	AND
											COMPANIA			=	T.COMPANIA			)))					AS	DSC_TIPO_PRESTAMO					,
				@DESCRIPCION_CIA																				AS	NM_COMPANIA
	FROM	PLAN_PAGO P
	INNER JOIN	TRABAJADOR				T	ON	(	P.CODIGO_UNICO			=	T.CODIGO_UNICO				)
	INNER JOIN	PRESTAMO					PR	ON	(	T.CODIGO_UNICO			=	PR.CODIGO_UNICO			AND
															P.SECUENCIA_PRESTAMO	=	PR.SECUENCIA_PRESTAMO	AND
															P.TIPO_PRESTAMO		=	PR.TIPO_PRESTAMO			)
	INNER	JOIN	FILTRO_RESTRICCION	FR	ON	(	T.CODIGO_UNICO			=	FR.CODIGO_UNICO			)
	,		(SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @CENTRO_COSTO, @IND_SUBUNIDAD )) AS UN 
	WHERE	T.COMPANIA							=		@COMPANIA										AND
			T.TIPO_TRABAJADOR					LIKE	@TIPO_TRABAJADOR								AND	
			/*T.UNIDAD_FUNCIONAL_ORGANICA	LIKE	@CENTRO_COSTO									AND*/
			(	(	YEAR	(PR.FECHA_APROBADO)	=	CONVERT(INT,@ANO_PERIODO_INI)		AND
					MONTH	(PR.FECHA_APROBADO)	>=	CONVERT(INT,@CODIGO_PERIODO_INI)	)	OR 
				(	YEAR	(PR.FECHA_APROBADO)	>	CONVERT(INT,@ANO_PERIODO_INI)		)	)	AND
			(	(	YEAR	(PR.FECHA_APROBADO)	=	CONVERT(INT,@ANO_PERIODO_FIN)		AND
					MONTH	(PR.FECHA_APROBADO)	<=	CONVERT(INT,@CODIGO_PERIODO_FIN)	)	OR
				(	YEAR	(PR.FECHA_APROBADO)	<	CONVERT(INT,@ANO_PERIODO_FIN)		)	)	AND
			FR.ID_REPORTE						=		'RPTPRESTAMOCRONO'							AND
			FR.SPID								=		@@SPID
			AND 			ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL
	ORDER BY	2, 
				P.SECUENCIA_PRESTAMO, 
				P.NUMERO_CUOTA
				



SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_PER_RPT_DETALLE_SALDO_PRESTAMO')
BEGIN
  DROP PROCEDURE [dbo].[SP_PER_RPT_DETALLE_SALDO_PRESTAMO]
END
GO


/*
SP_PER_RPT_DETALLE_SALDO_PRESTAMO '01','A', '07', '2015','00000000','1'
*/
CREATE PROCEDURE [dbo].[SP_PER_RPT_DETALLE_SALDO_PRESTAMO]
(	@COMPANIA			CHAR(02),  
	@SITUACION_TRABAJADOR	CHAR(01)	,
	@CODIGO_PERIODO	CHAR(02),
	@ANO_PERIODO		CHAR(04),
	@UNIDAD_FUNCIONAL CHAR(8),
	@IND_SUBUNIDAD CHAR(1) = 'S' 
)
AS	
	EXECUTE SP_FILTRO_RESTRICCION 'RPT_DETSALPRESTXT'
	DECLARE	@DESCRIPCION_CIA	VARCHAR(50)
	SELECT	@DESCRIPCION_CIA	=	DBO.SF_OBTENER_DATOS_CIA(@COMPANIA,'0')

	SELECT	T.MATRICULA																												AS	MATRICULA				,
				LTRIM(RTRIM(T.APELLIDO_PATERNO)) + ' ' + 
				LTRIM(RTRIM(T.APELLIDO_MATERNO)) + ', ' + 
				LTRIM(RTRIM(T.NOMBRE))																								AS	NOMBRE					,
				T.TIPO_TRABAJADOR																										AS	TIPO_TRABAJADOR		,
				DBO.SF_OBTENER_NOMBRE_TIPO_TRABAJADOR	(T.TIPO_TRABAJADOR,T.COMPANIA,'A')							AS	NOMBRE_TTRABAJADOR	,
				(	CASE	T.SITUACION_TRABAJADOR
						WHEN 'A' THEN 'ACT - ACTIVO'
						ELSE 'CES - CESADO'
					END	)																												AS	SITUACION_TRABAJADOR	,
				P.SECUENCIA_PRESTAMO																									AS	SECUENCIA_PRESTAMO	,
				LTRIM(RTRIM((	SELECT DESCRIPCION_TIPO_PRESTAMO
									FROM TBL_TIPO_PRESTAMO
									WHERE TIPO_PRESTAMO	= P.TIPO_PRESTAMO	AND
											COMPANIA			=	T.COMPANIA)))														AS	PRESTAMO					, 
				RIGHT('000' + CONVERT(VARCHAR(3),NUMERO_CUOTA),3)															AS	NUMERO_CUOTA			,
				P.MONTO_AMORTIZACION																									AS	MONTO_AMORTIZACION	,
				(	CASE
						WHEN	(ANO_PERIODO+CODIGO_PERIODO	>	@ANO_PERIODO+@CODIGO_PERIODO)	THEN	0
		 				ELSE	-1*MONTO_AMORTIZACION
					END	)																												AS	AMORTIZACION			,
				P.CODIGO_PERIODO																										AS	MES_PERIODO				,
				P.ANO_PERIODO																											AS	ANIO_PERIODO			,
				P.FECHA_REGISTRO_USUARIO																							AS	FECHA_REGISTRO			,
				(	CASE
						WHEN	(ANO_PERIODO+CODIGO_PERIODO	>	@ANO_PERIODO+@CODIGO_PERIODO)	THEN SPACE(10)
						ELSE	(	SELECT	CONVERT(VARCHAR(10),FECHA_FIN,103)
									FROM PERIODO_PLANILLA
									WHERE	CODIGO_PERIODO			=	P.CODIGO_PERIODO	AND
											ANO_PERIODO				=	P.ANO_PERIODO		AND
											CODIGO_BASE_CONCEPTO	=	'01'	)
					END	)																												AS	FECHA_PLANILLA			,
				@DESCRIPCION_CIA																										AS	NOMBRE_COMPANIA
	FROM	PLAN_PAGO P
	INNER	JOIN	TRABAJADOR				T	ON	(	P.CODIGO_UNICO	=	T.CODIGO_UNICO		)
	INNER	JOIN	FILTRO_RESTRICCION	FR	ON	(	P.CODIGO_UNICO	=	FR.CODIGO_UNICO	) 
	,		(SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )) AS UN 
	WHERE	T.COMPANIA																=	@COMPANIA																		AND
			P.CODIGO_UNICO+CONVERT(VARCHAR(4),P.SECUENCIA_PRESTAMO)	IN	(	SELECT	CODIGO_UNICO+CONVERT(VARCHAR(4),SECUENCIA_PRESTAMO)
																								FROM	PLAN_PAGO
																								WHERE	CODIGO_UNICO	=	P.CODIGO_UNICO		AND
																										CODIGO_PERIODO	=	@CODIGO_PERIODO	AND
																										ANO_PERIODO		=	@ANO_PERIODO		)								AND
			FR.ID_REPORTE															=		'RPT_DETSALPRESTXT'															AND
			FR.SPID																	=		@@SPID
			AND 			ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL
ORDER BY 2, 6







SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_PER_RPT_DETALLE_SALDO_PRESTAMO_SUCURSAL')
BEGIN
  DROP PROCEDURE [dbo].[SP_PER_RPT_DETALLE_SALDO_PRESTAMO_SUCURSAL]
END
GO


/*
SP_PER_RPT_DETALLE_SALDO_PRESTAMO_SUCURSAL '01', '12', '2014', '%'
*/
CREATE PROCEDURE [DBO].[SP_PER_RPT_DETALLE_SALDO_PRESTAMO_SUCURSAL]
(	@COMPANIA			CHAR(02),
	@CODIGO_PERIODO	CHAR(02),
	@ANO_PERIODO		CHAR(04),
	@SUCURSAL			VARCHAR(03)
)
AS	
	EXECUTE SP_FILTRO_RESTRICCION 'RPT_DETSALPRESTXT'
	DECLARE	@DESCRIPCION_CIA	VARCHAR(50)
	SELECT	@DESCRIPCION_CIA	=	DBO.SF_OBTENER_DATOS_CIA(@COMPANIA,'0')
	SELECT	@SUCURSAL			=	RTRIM(LTRIM(@SUCURSAL))

	SELECT	T.MATRICULA																												AS	MATRICULA				,
				LTRIM(RTRIM(T.APELLIDO_PATERNO)) + ' ' + 
				LTRIM(RTRIM(T.APELLIDO_MATERNO)) + ', ' + 
				LTRIM(RTRIM(T.NOMBRE))																								AS	NOMBRE					,
				T.TIPO_TRABAJADOR,
				(	CASE	T.SITUACION_TRABAJADOR
						WHEN 'A' THEN 'ACT - ACTIVO'
						ELSE 'CES - CESADO'
					END	)																												AS	SITUACION_TRABAJADOR	,
				P.SECUENCIA_PRESTAMO																									AS	SECUENCIA_PRESTAMO	,
				LTRIM(RTRIM((	SELECT DESCRIPCION_TIPO_PRESTAMO
									FROM TBL_TIPO_PRESTAMO
									WHERE TIPO_PRESTAMO	= P.TIPO_PRESTAMO	AND
											COMPANIA			=	T.COMPANIA)))														AS	PRESTAMO					, 
				RIGHT('000' + CONVERT(VARCHAR(3),NUMERO_CUOTA),3)															AS	NUMERO_CUOTA			,
				P.MONTO_AMORTIZACION																									AS	MONTO_AMORTIZACION	,
				(	CASE
						WHEN	(ANO_PERIODO+CODIGO_PERIODO	>	@ANO_PERIODO+@CODIGO_PERIODO)	THEN	0
		 				ELSE	-1*MONTO_AMORTIZACION
					END	)																												AS	AMORTIZACION			,
				P.CODIGO_PERIODO																										AS	MES_PERIODO				,
				P.ANO_PERIODO																											AS	ANIO_PERIODO			,
				P.FECHA_REGISTRO_USUARIO																							AS	FECHA_REGISTRO			,
				(	CASE
						WHEN	(ANO_PERIODO+CODIGO_PERIODO	>	@ANO_PERIODO+@CODIGO_PERIODO)	THEN SPACE(10)
						ELSE	(	SELECT	CONVERT(VARCHAR(10),FECHA_FIN,103)
									FROM PERIODO_PLANILLA
									WHERE	CODIGO_PERIODO			=	P.CODIGO_PERIODO	AND
											ANO_PERIODO				=	P.ANO_PERIODO		AND
											CODIGO_BASE_CONCEPTO	=	'01'	)
					END	)																												AS	FECHA_PLANILLA			,
				@DESCRIPCION_CIA																										AS	NOMBRE_COMPANIA		,
				T.SUCURSAL																												AS	SUCURSAL				,
				DBO.SF_OBTENER_SUCURSAL				(T.COMPANIA,T.SUCURSAL,'0')											AS	NOMBRE_SUCURSAL
	FROM	PLAN_PAGO P
	INNER	JOIN	TRABAJADOR				T	ON	(	P.CODIGO_UNICO	=	T.CODIGO_UNICO		)
	INNER	JOIN	FILTRO_RESTRICCION	FR	ON	(	P.CODIGO_UNICO	=	FR.CODIGO_UNICO	) 
	WHERE	T.COMPANIA																=		@COMPANIA																			AND
			T.SUCURSAL																LIKE	@SUCURSAL																			AND
			P.CODIGO_UNICO+CONVERT(VARCHAR(4),P.SECUENCIA_PRESTAMO)	IN		(	SELECT	CODIGO_UNICO+CONVERT(VARCHAR(4),SECUENCIA_PRESTAMO)
																									FROM	PLAN_PAGO
																									WHERE	CODIGO_UNICO	=	P.CODIGO_UNICO		AND
																											CODIGO_PERIODO	=	@CODIGO_PERIODO	AND
																											ANO_PERIODO		=	@ANO_PERIODO		)							AND
			FR.ID_REPORTE															=		'RPT_DETSALPRESTXT'																AND
			FR.SPID																	=		@@SPID
	ORDER BY 2, 6





SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_PER_RPT_ESTUDIOS_EXTERNOS')
BEGIN
  DROP PROCEDURE [dbo].[SP_PER_RPT_ESTUDIOS_EXTERNOS]
END
GO

/*
SP_PER_RPT_ESTUDIOS_EXTERNOS '01'
*/

CREATE PROCEDURE [DBO].[SP_PER_RPT_ESTUDIOS_EXTERNOS]
(	@COMPANIA		CHAR(02),
	@UNIDAD_FUNCIONAL CHAR(8),
	@IND_SUBUNIDAD CHAR(1) = 'S'
)
AS
	DECLARE	@DESCRIPCION_CIA	VARCHAR(50)
	EXECUTE	SP_FILTRO_RESTRICCION 'RPT_EST_EXT'
	
	SET @DESCRIPCION_CIA	=	DBO.SF_OBTENER_DATOS_CIA(@COMPANIA,'0')
	
	SELECT	T.MATRICULA																					AS	MATRICULA					,
				UPPER(	LTRIM(RTRIM(T.APELLIDO_PATERNO))	+	' '	+
							LTRIM(RTRIM(T.APELLIDO_MATERNO))	+	',	'	+
							LTRIM(RTRIM(T.NOMBRE				))	)										AS	NOMBRES						,
				DBO.SF_OBTENER_UNIDAD_FUNCIONAL(T.COMPANIA,T.UNIDAD_FUNCIONAL_ORGANICA)	AS	NOMBRE_UNIDAD				,
				DBO.SF_OBTENER_PUESTO_COMPANIA(T.COMPANIA,T.PUESTO_ORGANICA,'0')			AS	PUESTO						,
				G.CODIGO_CURSO		,
				DBO.SF_OBTENER_TABLA_DETALLE		('0089',G.CODIGO_CURSO)						AS	NOMBRE_CURSO				,
				G.FECHA_INICIO					,
				G.FECHA_TERMINO				,
				G.INSTITUCION_DONDE_ESTUDIO,
				DBO.SF_OBTENER_TABLA_DETALLE		('0004',G.GRADO_OBTENIDO)					AS	GRADO_OBTENIDO				,				
				@DESCRIPCION_CIA																			AS	COMPANIA						,
				(	SELECT	COUNT(TABLA.CODIGO_UNICO)
					FROM	(	SELECT O.CODIGO_UNICO
								FROM	OTRO_ESTUDIO O
								INNER JOIN	TRABAJADOR				T1	ON	(	O.CODIGO_UNICO	=	T1.CODIGO_UNICO	)
								INNER JOIN	FILTRO_RESTRICCION	FR ON	(	O.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
								WHERE	T1.COMPANIA					=	@COMPANIA		AND
										T1.INDICADOR_PLANILLA	=	'1'				AND
										FR.ID_REPORTE				=	'RPT_EST_EXT'	AND
										FR.SPID						=	@@SPID
								GROUP BY	O.CODIGO_UNICO ) TABLA	)									AS	TOTAL
	FROM	TRABAJADOR T
	INNER JOIN	OTRO_ESTUDIO			G	ON	(	T.CODIGO_UNICO	=	G.CODIGO_UNICO		)
	INNER JOIN	FILTRO_RESTRICCION	FR ON	(	T.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
	,		(SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )) AS UN 
	WHERE		T.COMPANIA				=	@COMPANIA		AND
				T.INDICADOR_PLANILLA	=	'1'				AND
				FR.ID_REPORTE			=	'RPT_EST_EXT'	AND
				FR.SPID					=	@@SPID
				AND 			ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL
	ORDER BY 2





SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_PER_RPT_ESTUDIOS_INTERNOS')
BEGIN
  DROP PROCEDURE [dbo].[SP_PER_RPT_ESTUDIOS_INTERNOS]
END
GO


/*
SP_PER_RPT_ESTUDIOS_INTERNOS '01'
*/

CREATE PROCEDURE [DBO].[SP_PER_RPT_ESTUDIOS_INTERNOS]
(	@COMPANIA		CHAR(02),
	@UNIDAD_FUNCIONAL CHAR(8),
	@IND_SUBUNIDAD CHAR(1) = 'S'
)
AS
	DECLARE	@DESCRIPCION_CIA	VARCHAR(50)
	EXECUTE	SP_FILTRO_RESTRICCION 'RPT_EST_INT'
	
	SET @DESCRIPCION_CIA	=	DBO.SF_OBTENER_DATOS_CIA(@COMPANIA,'0')

	SELECT	T.MATRICULA,
				UPPER(	LTRIM(RTRIM(T.APELLIDO_PATERNO))	+	' '	+
							LTRIM(RTRIM(T.APELLIDO_MATERNO))	+	',	'	+
							LTRIM(RTRIM(T.NOMBRE				))	)										AS	NOMBRES						,
				DBO.SF_OBTENER_TABLA_DETALLE		('0005',E.ORIGEN_ESTUDIO)					AS	ORIGEN_ESTUDIO				,
				DBO.SF_OBTENER_TABLA_DETALLE		('0089',E.CODIGO_CURSO)						AS	NOMBRE_CURSO				,
				E.FECHA_INICIO																				AS	FECHA_INICIO				,
				E.FECHA_TERMINO																			AS	FECHA_TERMINO				,
				E.DURACION																					AS	DURACION						,
				DBO.SF_OBTENER_TABLA_DETALLE		('0003',E.TIPO_DURACION)					AS	TIPO_DURACION				,
				E.PORCENTAJE_ASISTENCIA																	AS	PORCENTAJE_ASISTENCIA	,
				DBO.SF_OBTENER_TABLA_DETALLE		('0002',E.TIPO_CALIFICACION)				AS	TIPO_CALIFICACION			,
				E.CALIFICACION_OBTENIDA																	AS	CALIFICACION_OBTENIDA	,
				E.COSTO_CURSO																				AS	COSTO_CURSO					,
				(	CASE	RTRIM(E.MONEDA_CURSO)
						WHEN	'S'	THEN	'SOLES'
						WHEN	'D'	THEN	'DOLARES'
					END	)																					AS	MONEDA_CURSO				,
				E.MONTO_VIATICOS	,
				(	CASE	RTRIM(E.MONEDA_VIATICOS)
						WHEN	'S'	THEN	'SOLES'
						WHEN	'D'	THEN	'DOLARES'
					END	)																					AS	MONEDA_VIATICOS			,
				(	SELECT	UPPER(LTRIM(RTRIM(LTRIM(RTRIM(APELLIDO_PATERNO)) + '  ' +
														LTRIM(RTRIM(APELLIDO_MATERNO)) + ', ' +
														LTRIM(RTRIM(NOMBRE)))))
					FROM TBL_INSTRUCTOR
					WHERE	CODIGO_INSTRUCTOR	=	E.CODIGO_INSTRUCTOR	)							AS	INSTRUCTOR					,
				@DESCRIPCION_CIA																			AS	COMPANIA						,
				(	SELECT	COUNT(TABLA.CODIGO_UNICO)
					FROM	(	SELECT O.CODIGO_UNICO
								FROM	ESTUDIO O
								INNER JOIN	TRABAJADOR				T1	ON	(	O.CODIGO_UNICO	=	T1.CODIGO_UNICO	)
								INNER JOIN	FILTRO_RESTRICCION	FR ON	(	O.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
								WHERE	T1.COMPANIA					=	@COMPANIA		AND
										T1.INDICADOR_PLANILLA	=	'1'				AND
										FR.ID_REPORTE				=	'RPT_EST_INT'	AND
										FR.SPID						=	@@SPID
								GROUP BY	O.CODIGO_UNICO ) TABLA	)									AS	TOTAL
	FROM	TRABAJADOR T
	INNER JOIN ESTUDIO					E	ON	(	T.CODIGO_UNICO	=	E.CODIGO_UNICO	)
	INNER JOIN	FILTRO_RESTRICCION	FR ON	(	T.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
	,(SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )) AS UN 
	WHERE		T.COMPANIA				=	@COMPANIA		AND
				T.INDICADOR_PLANILLA	=	'1'				AND
				FR.ID_REPORTE			=	'RPT_EST_INT'	AND
				FR.SPID					=	@@SPID
				AND ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL

	ORDER BY 2




SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_PER_RPT_EXPERIENCIA_EXTERNA')
BEGIN
  DROP PROCEDURE [dbo].[SP_PER_RPT_EXPERIENCIA_EXTERNA]
END
GO

/*
EXEC SP_PER_RPT_EXPERIENCIA_EXTERNA '01'
*/
CREATE PROCEDURE [DBO].[SP_PER_RPT_EXPERIENCIA_EXTERNA]
(	@COMPANIA	CHAR(02),
	@UNIDAD_FUNCIONAL CHAR(8),
	@IND_SUBUNIDAD CHAR(1) = 'S' 
)
AS
	DECLARE	@DESCRIPCION_CIA	VARCHAR(50)
	SET @DESCRIPCION_CIA	=	DBO.SF_OBTENER_DATOS_CIA(@COMPANIA,'0')	
	
	EXECUTE SP_FILTRO_RESTRICCION 'RPT_EXP_EXT'
	
	SELECT	T.MATRICULA,
				UPPER(	LTRIM(RTRIM(T.APELLIDO_PATERNO))	+	' '	+
							LTRIM(RTRIM(T.APELLIDO_MATERNO))	+	',	'	+
							LTRIM(RTRIM(T.NOMBRE				))	)											AS	NOMBRES							,
				DBO.SF_OBTENER_TABLA_DETALLE		('0091',E.PUESTO_DESEMPENADO)					AS	PUESTO							,
				E.NOMBRE_INSTITUCION																			AS	NOMBRE_INSTITUCION			,
				E.FECHA_INICIO_PUESTO																		AS	FECHA_INICIO_PUESTO			,
				E.FECHA_TERMINO_PUESTO																		AS	FECHA_TERMINO_PUESTO			,
				E.NOMBRE_PERSONA_REFERENCIA																AS	NOMBRE_PERSONA_REFERENCIA	,
				RTRIM(E.TELEFONO_PERSONA_CONTACTO)														AS	TELEFONO_CONTACTO				,
				@DESCRIPCION_CIA																				AS	COMPANIA							,
				(	SELECT	COUNT(TABLA.CODIGO_UNICO)
					FROM	(	SELECT O.CODIGO_UNICO
								FROM	EXPERIENCIA_NO_COORPORACION O
								INNER JOIN	TRABAJADOR				T1	ON	(	O.CODIGO_UNICO	=	T1.CODIGO_UNICO	)
								INNER JOIN	FILTRO_RESTRICCION	FR ON	(	O.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
								WHERE	T1.COMPANIA					=	@COMPANIA		AND
										T1.INDICADOR_PLANILLA	=	'1'				AND
										FR.ID_REPORTE				=	'RPT_EXP_EXT'	AND
										FR.SPID						=	@@SPID
								GROUP BY	O.CODIGO_UNICO ) AS TABLA	)									AS TOTAL
	FROM	TRABAJADOR T
	INNER JOIN	EXPERIENCIA_NO_COORPORACION	E	ON	(	T.CODIGO_UNICO	=	E.CODIGO_UNICO		)
	INNER JOIN	FILTRO_RESTRICCION				FR ON	(	T.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
	,(SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )) AS UN
	WHERE		T.COMPANIA				=	@COMPANIA		AND
				T.INDICADOR_PLANILLA	=	'1'				AND
				FR.ID_REPORTE			=	'RPT_EXP_EXT'	AND
				FR.SPID					=	@@SPID
				AND ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL
	ORDER BY 2



SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_PER_RPT_GRADOS_SALARIALES')
BEGIN
  DROP PROCEDURE [dbo].[SP_PER_RPT_GRADOS_SALARIALES]
END
GO

/*
SP_PER_RPT_GRADOS_SALARIALES	'01','%'
*/

CREATE PROCEDURE [DBO].[SP_PER_RPT_GRADOS_SALARIALES]
(	@COMPANIA			CHAR(02),
	@GRADO_SALARIAL	VARCHAR(03),
	@UNIDAD_FUNCIONAL CHAR(8),
	@IND_SUBUNIDAD CHAR(1) = 'S' 

)
AS
	DECLARE	@DESCRIPCION_CIA	VARCHAR(50)	

	EXEC SP_FILTRO_RESTRICCION 'RPT_GRAD_SALAR'
	
	SET @DESCRIPCION_CIA		=	DBO.SF_OBTENER_DATOS_CIA(@COMPANIA,'0')
	SET	@GRADO_SALARIAL	=	RTRIM(LTRIM(@GRADO_SALARIAL))
	
	SELECT	T.MATRICULA																							AS	MATRICULA						,
				UPPER(	LTRIM(RTRIM(T.APELLIDO_PATERNO))	+	' '	+
							LTRIM(RTRIM(T.APELLIDO_MATERNO))	+	',	'	+
							LTRIM(RTRIM(T.NOMBRE))					)											AS	NOMBRES							,
				DBO.SF_OBTENER_UNIDAD_FUNCIONAL	(T.COMPANIA,T.UNIDAD_FUNCIONAL_ORGANICA)		AS	NOMBRE_UNIDAD					,
				DBO.SF_OBTENER_PUESTO_COMPANIA	(T.COMPANIA,T.PUESTO_ORGANICA,'0')				AS	NOMBRE_PUESTO					,
				DBO.SF_OBTENER_GRADO_SALARIAL		(T.COMPANIA,T.GRADO_SALARIAL_ORGANICA,'0')	AS	DESCRIPCION_GRADO_SALARIAL	,
				@DESCRIPCION_CIA																					AS	NOMBRE_COMPANIA,
				T.GRADO_SALARIAL_ORGANICA 
	FROM 	TRABAJADOR T
	INNER JOIN	FILTRO_RESTRICCION FR	ON	(	T.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
	,		(SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )) AS UN
	WHERE	T.COMPANIA						=		@COMPANIA			AND
			T.GRADO_SALARIAL_ORGANICA	LIKE	@GRADO_SALARIAL	AND
			T.INDICADOR_PLANILLA			=		'1'					AND
			FR.ID_REPORTE					=		'RPT_GRAD_SALAR'	AND
			FR.SPID							=		@@SPID
			AND 			ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL
	ORDER BY 2


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_PER_RPT_GRUPO_FUNCIONAL')
BEGIN
  DROP PROCEDURE [dbo].[SP_PER_RPT_GRUPO_FUNCIONAL]
END
GO


/*
SP_PER_RPT_GRUPO_FUNCIONAL	'01','%','%'
*/

CREATE PROCEDURE [DBO].[SP_PER_RPT_GRUPO_FUNCIONAL]
(	@COMPANIA			CHAR(02),
	@PUESTO				VARCHAR(08),
	@GRUPO_FUNCIONAL	VARCHAR(04),
	@UNIDAD_FUNCIONAL CHAR(8),
	@IND_SUBUNIDAD CHAR(1) = 'S' 
)
AS
	DECLARE	@DESCRIPCION_CIA	VARCHAR(50)	

	EXEC SP_FILTRO_RESTRICCION 'RPT_GRUPO_FUN'
	
	SELECT	@PUESTO				=	RTRIM(LTRIM(@PUESTO)),
				@GRUPO_FUNCIONAL	=	RTRIM(LTRIM(@GRUPO_FUNCIONAL))
				
	SET	@DESCRIPCION_CIA		=	DBO.SF_OBTENER_DATOS_CIA(@COMPANIA,'0')
	
	SELECT	T.MATRICULA																						AS	MATRICULA					,
				UPPER(	LTRIM(RTRIM(T.APELLIDO_PATERNO))	+	' '	+
							LTRIM(RTRIM(T.APELLIDO_MATERNO))	+	',	'	+
							LTRIM(RTRIM(T.NOMBRE))					)										AS	NOMBRES						,
				DBO.SF_OBTENER_UNIDAD_FUNCIONAL	(T.COMPANIA,T.UNIDAD_FUNCIONAL_ORGANICA)	AS	NOMBRE_UNIDAD				,
				LTRIM(RTRIM(P.DESCRIPCION_PUESTO))														AS	NOMBRE_PUESTO				,
				LTRIM(RTRIM(G.DESCRIPCION_GRUPO_FUNCIONAL))											AS	NOMBRE_GRUPO_FUNCIONAL	,
				@DESCRIPCION_CIA																				AS	NOMBRE_COMPANIA
	FROM 	TRABAJADOR T
	INNER	JOIN	TBL_PUESTO_COMPANIA	P	ON	(	T.PUESTO_ORGANICA	=	P.PUESTO				)
	INNER	JOIN	TBL_GRUPO_FUNCIONAL	G	ON	(	P.GRUPO_FUNCIONAL	=	G.GRUPO_FUNCIONAL	)
	INNER JOIN	FILTRO_RESTRICCION	FR	ON	(	T.CODIGO_UNICO		=	FR.CODIGO_UNICO	)
	,		(SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )) AS UN 
	WHERE	T.COMPANIA				=		@COMPANIA			AND
			T.INDICADOR_PLANILLA	=		'1'					AND
			T.PUESTO_ORGANICA		LIKE	@PUESTO				AND
			P.GRUPO_FUNCIONAL		LIKE	@GRUPO_FUNCIONAL	AND
			FR.ID_REPORTE			=		'RPT_GRUPO_FUN'	AND
			FR.SPID					=		@@SPID 
			AND 			ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL
	ORDER BY 2


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_PER_RPT_HABILIDADES')
BEGIN
  DROP PROCEDURE [dbo].[SP_PER_RPT_HABILIDADES]
END
GO


/*
SP_PER_RPT_HABILIDADES '01'
*/

CREATE PROCEDURE [DBO].[SP_PER_RPT_HABILIDADES]
(	@COMPANIA		CHAR(02),
	@UNIDAD_FUNCIONAL CHAR(8),
	@IND_SUBUNIDAD CHAR(1) = 'S' 

)
AS
	DECLARE	@DESCRIPCION_CIA	VARCHAR(50)
	EXECUTE	SP_FILTRO_RESTRICCION 'RPT_HAB'
	
	SET @DESCRIPCION_CIA	=	DBO.SF_OBTENER_DATOS_CIA(@COMPANIA,'0')
	
	SELECT	T.MATRICULA																					AS	MATRICULA				,
				UPPER(	LTRIM(RTRIM(T.APELLIDO_PATERNO))	+	' '	+
							LTRIM(RTRIM(T.APELLIDO_MATERNO))	+	',	'	+
							LTRIM(RTRIM(T.NOMBRE				))	)										AS	NOMBRE_COMPLETO		,
				DBO.SF_OBTENER_TABLA_DETALLE		('0128',H.HABILIDAD)							AS	HABILIDAD				,
				DBO.SF_OBTENER_TABLA_DETALLE		('0028',H.NIVEL_HABILIDAD)					AS	NIVEL_HABILIDAD		,
				DBO.SF_OBTENER_TABLA_DETALLE		('0048',H.ORIGEN_HABILIDAD)				AS	ORIGEN_HABILIDAD		,
				(	SELECT	COUNT(TABLA.CODIGO_UNICO)
					FROM	(	SELECT H.CODIGO_UNICO
								FROM	HABILIDAD H
								INNER JOIN	TRABAJADOR				T1	ON	(	H.CODIGO_UNICO	=	T1.CODIGO_UNICO	)
								INNER JOIN	FILTRO_RESTRICCION	FR ON	(	H.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
								WHERE	T1.COMPANIA					=	@COMPANIA	AND
										FR.ID_REPORTE				=	'RPT_HAB'	AND
										FR.SPID						=	@@SPID
								GROUP BY	H.CODIGO_UNICO ) TABLA	)									AS	TOTAL						,
				@DESCRIPCION_CIA																			AS	NOMBRE_COMPANIA
	FROM	TRABAJADOR T
	INNER JOIN	HABILIDAD				H	ON	(	T.CODIGO_UNICO	=	H.CODIGO_UNICO		)
	INNER JOIN	FILTRO_RESTRICCION	FR ON	(	T.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
	,(SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )) AS UN 
	WHERE		T.COMPANIA				=	@COMPANIA	AND
				FR.ID_REPORTE			=	'RPT_HAB'	AND
				FR.SPID					=	@@SPID
				AND ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL
	ORDER BY 2

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_PER_RPT_historial_ceses')
BEGIN
  DROP PROCEDURE [dbo].[sp_PER_RPT_historial_ceses]
END
GO

---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/*
exec sp_PER_RPT_historial_ceses '01','','01/01/2013','01/06/2013'
exec sp_PER_RPT_historial_ceses '01','0000001007','',''
*/
CREATE procedure [dbo].[sp_PER_RPT_historial_ceses]
(	@compania		char(02)		,
	@codigo_unico	char(10)		,
	@fch_inicio		varchar(10)	,
	@fch_fin			varchar(10)
)
AS
	
	DECLARE	@fecha_inicio	datetime,
				@fecha_termino	datetime
	
	EXECUTE sp_filtro_restriccion 'RPT_HIST_CESE','T'
	
	IF	@fch_inicio		<>	''	SELECT	@fecha_inicio	=	CONVERT(datetime,@fch_inicio,	103)
	IF	@fch_fin			<>	''	SELECT	@fecha_termino	=	CONVERT(datetime,@fch_fin,		103)
	IF	@codigo_unico	=	''	SELECT	@codigo_unico	=	'%'
	
	
	IF	IsNull(@fch_inicio,'') =	''	AND	IsNull(@fch_fin,'')	=	''
	BEGIN
		SELECT	t.matricula,
					nombre_completo	=	LTRIM(	UPPER(	RTRIM(t.apellido_paterno)	+	' '	+
																		RTRIM(t.apellido_materno)	+	' '	+
																		RTRIM(t.nombre)	)),
					h.fecha_ingreso_compania	,
					h.fecha_retiro					,
					descripcion_cese				=	RTRIM((	SELECT descripcion_cese
																		FROM	Tbl_motivo_cese
																		WHERE	codigo_cese	=	h.tipo_retiro	))	,
					codigo_unidad					=	h.unidad_funcional_organica	,
					unidad_funcional				=	RTRIM((	SELECT nombre_unidad_funcional
																		FROM	Tbl_unidad_funcional
																		WHERE	unidad_funcional	=	h.unidad_funcional_organica	AND
																				compania				=	t.compania							)),
					codigo_sucursal				=	h.sucursal						,
					sucursal							=	RTRIM((	SELECT nombre_sucursal
																		FROM Tbl_sucursal
																		WHERE	sucursal	=	h.sucursal	AND
																				codigo_cia	=	t.compania	))	,
					h.sueldo_basico				,
					nm_compania						=	UPPER(	LTRIM(RTRIM((	SELECT	nombre_cia
																							FROM	Tbl_compania
																							WHERE	codigo_cia	=	t.compania	)))),
					total								=	(	SELECT	count(tabla.codigo_unico)
																FROM	(	SELECT o.codigo_unico
																			FROM	Historico_ceses o
																			INNER JOIN	Trabajador				t1	ON	(	o.codigo_unico	=	t1.codigo_unico	)
																			INNER JOIN	filtro_restriccion	FR ON	(	o.codigo_unico	=	fr.codigo_unico	)
																			WHERE	(	CASE	@codigo_unico
																							WHEN '%'	THEN	t1.codigo_unico
																							ELSE	@codigo_unico
																						END	)					=	t1.codigo_unico	AND
																					t1.compania					=	@compania			AND
																					t1.indicador_planilla	=	'1'					AND
																					fr.id_reporte				=	'RPT_HIST_CESE'	AND
																					fr.spid						=	@@SPID
																			GROUP BY	o.codigo_unico ) as tabla	)
		FROM	Trabajador t
		INNER JOIN	Historico_ceses		h	ON	(	t.codigo_unico	=	h.codigo_unico		)
		INNER JOIN	filtro_restriccion	FR ON	(	t.codigo_unico	=	fr.codigo_unico	)
		WHERE	(	CASE	@codigo_unico
						WHEN '%'	THEN	t.codigo_unico
						ELSE	@codigo_unico
					END	)				=	t.codigo_unico		AND
				t.compania				=	@compania			AND
				fr.id_reporte			=	'RPT_HIST_CESE'	AND
				fr.spid					=	@@SPID
		ORDER BY 2
	END
	ELSE
	BEGIN
		SELECT	t.matricula,
					nombre_completo	=	LTRIM(	UPPER(	RTRIM(t.apellido_paterno)	+	' '	+
																		RTRIM(t.apellido_materno)	+	' '	+
																		RTRIM(t.nombre)	)),
					h.fecha_ingreso_compania	,
					h.fecha_retiro					,
					descripcion_cese				=	RTRIM((	SELECT descripcion_cese
																		FROM	Tbl_motivo_cese
																		WHERE	codigo_cese	=	h.tipo_retiro	))	,
					codigo_unidad					=	h.unidad_funcional_organica	,
					unidad_funcional				=	RTRIM((	SELECT nombre_unidad_funcional
																		FROM	Tbl_unidad_funcional
																		WHERE	unidad_funcional	=	h.unidad_funcional_organica	AND
																				compania				=	t.compania							)),
					codigo_sucursal				=	h.sucursal						,
					sucursal							=	RTRIM((	SELECT nombre_sucursal
																		FROM Tbl_sucursal
																		WHERE	sucursal	=	h.sucursal	AND
																				codigo_cia	=	t.compania	))	,
					h.sueldo_basico				,
					nm_compania						=	UPPER(	LTRIM(RTRIM((	SELECT	nombre_cia
																							FROM	Tbl_compania
																							WHERE	codigo_cia	=	t.compania	)))),
					total								=	(	SELECT	count(tabla.codigo_unico)
																FROM	(	SELECT o.codigo_unico
																			FROM	Historico_ceses o
																			INNER JOIN	Trabajador				t1	ON	(	o.codigo_unico	=	t1.codigo_unico	)
																			INNER JOIN	filtro_restriccion	FR ON	(	o.codigo_unico	=	fr.codigo_unico	)
																			WHERE	(	CASE	@codigo_unico
																							WHEN '%'	THEN	t1.codigo_unico
																							ELSE	@codigo_unico
																						END	)						=	t1.codigo_unico	AND
																					t1.compania						=	@compania			AND
																					t1.indicador_planilla		=	'1'					AND
																					o.fecha_ingreso_compania	>=	@fecha_inicio		AND
																					o.fecha_retiro					<=	@fecha_termino		AND
																					fr.id_reporte					=	'RPT_HIST_CESE'	AND
																					fr.spid							=	@@SPID
																			GROUP BY	o.codigo_unico ) as tabla	)
		FROM	Trabajador t
		INNER JOIN	Historico_ceses		h	ON	(	t.codigo_unico	=	h.codigo_unico		)
		INNER JOIN	filtro_restriccion	FR ON	(	t.codigo_unico	=	fr.codigo_unico	)
		WHERE	(	CASE	@codigo_unico
						WHEN '%'	THEN	t.codigo_unico
						ELSE	@codigo_unico
					END	)						=	t.codigo_unico		AND
				t.compania						=	@compania			AND
				h.fecha_ingreso_compania	>=	@fecha_inicio		AND
				h.fecha_retiro					<=	@fecha_termino		AND
				fr.id_reporte					=	'RPT_HIST_CESE'	AND
				fr.spid							=	@@SPID
		ORDER BY 2
	END




SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_PER_RPT_IDIOMAS')
BEGIN
  DROP PROCEDURE [dbo].[SP_PER_RPT_IDIOMAS]
END
GO

/*
SP_PER_RPT_IDIOMAS '01'
*/


CREATE PROCEDURE [DBO].[SP_PER_RPT_IDIOMAS]
(	@COMPANIA		CHAR(02),
	@UNIDAD_FUNCIONAL CHAR(8),
	@IND_SUBUNIDAD CHAR(1) = 'S' 

)
AS
	DECLARE	@DESCRIPCION_CIA	VARCHAR(50)
	EXECUTE	SP_FILTRO_RESTRICCION 'RPT_IDOMA'
	
	SET @DESCRIPCION_CIA	=	DBO.SF_OBTENER_DATOS_CIA(@COMPANIA,'0')

	SELECT	T.MATRICULA,
				UPPER(	LTRIM(RTRIM(T.APELLIDO_PATERNO))	+	' '	+
							LTRIM(RTRIM(T.APELLIDO_MATERNO))	+	',	'	+
							LTRIM(RTRIM(T.NOMBRE				))	)											AS	NOMBRES							,
				DBO.SF_OBTENER_UNIDAD_FUNCIONAL	(T.COMPANIA,T.UNIDAD_FUNCIONAL_ORGANICA)	AS	UNIDAD_FUNCIONAL				,
				DBO.SF_OBTENER_PUESTO_COMPANIA	(T.COMPANIA,T.PUESTO_ORGANICA,'0')			AS	PUESTO							,
				I.IDIOMA																							AS	IDIOMA							,
				DBO.SF_OBTENER_TABLA_DETALLE		('0017',I.IDIOMA)									AS	NOMBRE_IDIOMA					,
				I.NIVEL_LECTURA																				AS	NIVEL_LECTURA					,
				DBO.SF_OBTENER_TABLA_DETALLE		('0029',I.NIVEL_LECTURA)						AS	NOMBRE_NIVEL_LECTURA			,
				I.NIVEL_ESCRITURA																				AS	NIVEL_ESCRITURA				,
				DBO.SF_OBTENER_TABLA_DETALLE		('0029',I.NIVEL_ESCRITURA)						AS	NOMBRE_NIVEL_ESCRITURA		,
				I.NIVEL_CONVERSACION																			AS	NIVEL_CONVERSACION			,
				DBO.SF_OBTENER_TABLA_DETALLE		('0029',I.NIVEL_CONVERSACION)					AS	NOMBRE_NIVEL_CONVERSACION	,
				LTRIM(RTRIM(I.INSTITUCION))																AS	INSTITUCION						,
				@DESCRIPCION_CIA																				AS	NOMBRE_COMPANIA				,
				(	SELECT	COUNT(TABLA.CODIGO_UNICO)
					FROM	(	SELECT I.CODIGO_UNICO
								FROM	IDIOMA I
								INNER JOIN	TRABAJADOR				T1	ON	(	I.CODIGO_UNICO	=	T1.CODIGO_UNICO	)
								INNER JOIN	FILTRO_RESTRICCION	FR ON	(	I.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
								WHERE	T1.COMPANIA					=	@COMPANIA		AND
										T1.INDICADOR_PLANILLA	=	'1'				AND
										FR.ID_REPORTE				=	'RPT_IDOMA'	AND
										FR.SPID						=	@@SPID
								GROUP BY	I.CODIGO_UNICO ) TABLA	)									AS	TOTAL
	FROM	TRABAJADOR T
	INNER JOIN	IDIOMA					I	ON	(	T.CODIGO_UNICO	=	I.CODIGO_UNICO	)
	INNER JOIN	FILTRO_RESTRICCION	FR ON	(	T.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
	,		(SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )) AS UN 
	WHERE		T.COMPANIA				=	@COMPANIA		AND
				T.INDICADOR_PLANILLA	=	'1'				AND
				FR.ID_REPORTE			=	'RPT_IDOMA'	AND
				FR.SPID					=	@@SPID
				AND 			ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL
	ORDER BY 2




SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_PER_RPT_IMPLEMENTOS')
BEGIN
  DROP PROCEDURE [dbo].[SP_PER_RPT_IMPLEMENTOS]
END
GO


CREATE PROCEDURE [dbo].[SP_PER_RPT_IMPLEMENTOS]
(	@COMPANIA CHAR(2),
	@UNIDAD_FUNCIONAL CHAR(8),
	@IND_SUBUNIDAD CHAR(1) = 'S' 
)
AS
	DECLARE	@DESCRIPCION_CIA	VARCHAR(50)
	EXECUTE	SP_FILTRO_RESTRICCION 'RPT_IMPLE'
	
	SET @DESCRIPCION_CIA	=	DBO.SF_OBTENER_DATOS_CIA(@COMPANIA,'0')

	
	SELECT	T.MATRICULA,
				UPPER(	LTRIM(RTRIM(T.APELLIDO_PATERNO))	+	' '	+
							LTRIM(RTRIM(T.APELLIDO_MATERNO))	+	',	'	+
							LTRIM(RTRIM(T.NOMBRE				))	)											AS	NOMBRES			,
				DBO.SF_OBTENER_TABLA_DETALLE		('0501',I.CODIGO_IMPLEMENTO)					AS	IMPLEMENTO		,
				I.CANTIDAD																						AS	CANTIDAD			,
				I.FLAG_PROPIO																					AS	FLAG_PROPIO		,
				I.OBSERVACION																					AS	OBSERVACION		,
				@DESCRIPCION_CIA																				AS	NOMBRE_COMPANIA,
			    I.fecha_inicio,
				I.fecha_fin,
				I.estado,
      		(	SELECT	COUNT(TABLA.CODIGO_UNICO)
					FROM	(	SELECT I.CODIGO_UNICO
								FROM	TBL_IMPLEMENTO I
								INNER JOIN	TRABAJADOR				T1	ON	(	I.CODIGO_UNICO	=	T1.CODIGO_UNICO	AND
																						I.COMPANIA		=	T1.COMPANIA			)
								INNER JOIN	FILTRO_RESTRICCION	FR ON	(	I.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
								WHERE	T1.COMPANIA					=	@COMPANIA		AND
										T1.INDICADOR_PLANILLA	=	'1'				AND
										FR.ID_REPORTE				=	'RPT_IMPLE'	AND
										FR.SPID						=	@@SPID
								GROUP BY	I.CODIGO_UNICO ) TABLA	)									AS	TOTAL 
	FROM	TRABAJADOR T
	INNER JOIN TBL_IMPLEMENTO			I	ON	(	T.CODIGO_UNICO	=	I.CODIGO_UNICO	AND
															T.COMPANIA		=	I.COMPANIA		)
	INNER JOIN	FILTRO_RESTRICCION	FR ON	(	I.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
	,(SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )) AS UN 
	WHERE	T.COMPANIA				=	@COMPANIA	AND
			FR.ID_REPORTE			=	'RPT_IMPLE'	AND
			FR.SPID					=	@@SPID
			AND ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL
	ORDER BY 2



SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_PER_RPT_LISTA_NEGRA')
BEGIN
  DROP PROCEDURE [dbo].[SP_PER_RPT_LISTA_NEGRA]
END
GO


CREATE PROCEDURE [DBO].[SP_PER_RPT_LISTA_NEGRA]
(	@FECHA_INICIO	DATETIME,
	@FECHA_TERMINO	DATETIME,
	@COMPANIA		CHAR(2)
)
AS
	DECLARE	@DESCRIPCION_CIA	VARCHAR(50)
	EXECUTE SP_FILTRO_RESTRICCION 'RPT_LISTA_NEGRA'
	
	SET @DESCRIPCION_CIA	=	DBO.SF_OBTENER_DATOS_CIA(@COMPANIA,'0')
	
	SELECT	T.MATRICULA															AS	MATRICULA			,
				UPPER(	LTRIM(RTRIM(T.APELLIDO_PATERNO))	+	' '	+
							LTRIM(RTRIM(T.APELLIDO_MATERNO))	+	',	'	+
							LTRIM(RTRIM(T.NOMBRE				))	)				AS	NOMBRES				,
				LTRIM(RTRIM(T.NUMERO_DOCUMENTO))								AS	NUMERO_DOCUMENTO	,
				LTRIM(RTRIM(L.OBSERVACION		))								AS	OBSERVACION			,
				L.FECHA_CESE														AS	FECHA_CESE			,
				@DESCRIPCION_CIA													AS	NOMBRE_COMPANIA
	FROM	LISTA_NEGRA	L
	INNER JOIN	TRABAJADOR				T	ON	(	L.CODIGO_UNICO	=	T.CODIGO_UNICO		AND
															L.COD_COMPANIA	=	T.COMPANIA			)
	INNER JOIN	FILTRO_RESTRICCION	FR ON	(	T.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
	WHERE		T.COMPANIA			=	@COMPANIA			AND
				L.FECHA_CESE		>=	@FECHA_INICIO		AND
				L.FECHA_CESE		<=	@FECHA_TERMINO		AND
				FR.ID_REPORTE		=	'RPT_LISTA_NEGRA'	AND
				FR.SPID				=	@@SPID
	ORDER BY 2

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_PER_RPT_prestamos')
BEGIN
  DROP PROCEDURE [dbo].[sp_PER_RPT_prestamos]
END
GO

/*
sp_PER_RPT_prestamos	'01','01','2014'
*/
CREATE PROCEDURE [dbo].[sp_PER_RPT_prestamos]
(	@compania		char(2),
	@mes_periodo	char(2),
	@ano_periodo	char(4),
	@UNIDAD_FUNCIONAL CHAR(8),
	@IND_SUBUNIDAD CHAR(1) = 'S' 
)
AS

	EXECUTE sp_filtro_restriccion 'RPT_PRESTAMO'
	
	DECLARE	@tipo_cambio	money
	
	SELECT	@tipo_cambio	=	importe_valor_variable
	FROM	Valor_variable_calculo
	WHERE	codigo_variable		=	'ITCM'		AND
			compania					=	@compania	AND
			indicador_activo		=	'1'			AND
			codigo_base_variable	=	'01'
		
	SELECT	t.codigo_unico			,   
				t.matricula				,   
				nombre_completo		=	UPPER(	LTRIM(RTRIM(t.apellido_paterno))	+	' '	+
															LTRIM(RTRIM(t.apellido_materno))	+	', '	+
															LTRIM(RTRIM(t.nombre))	)	,
				p.fecha_solicitud		,   
				p.monto_solicitado	,   
				pp.monto_amortizacion,
				pp.saldo_prestamo		,
				tipo_prestamo			=	UPPER(	LTRIM(RTRIM((	SELECT descripcion_tipo_prestamo  
																				FROM Tbl_tipo_prestamo  
																				WHERE	tipo_prestamo		=	p.tipo_prestamo	AND  
																						compania				=	t.compania			)))) ,
				tipo_moneda				=	UPPER(	LTRIM(RTRIM((	SELECT descripcion_registro 
																				FROM	Tbl_detalle_tabla 
																				WHERE	codigo_registro	=	p.tipo_moneda		AND
																						codigo_tabla		=	'0063'				)))) ,
				pp.numero_cuota		,
				p.secuencia_prestamo	, 
				importe_soles			=	(	CASE	p.tipo_moneda
														WHEN	'D'	THEN	pp.monto_amortizacion * @tipo_cambio 
														WHEN	'S'	THEN	pp.monto_amortizacion
														ELSE	0
													END	),
				nm_compania				=	UPPER(	LTRIM(RTRIM((	SELECT	nombre_cia
																				FROM	Tbl_compania
																				WHERE	codigo_cia	=	t.compania	))))
	FROM	Prestamo	p   
	INNER JOIN	Trabajador				t	ON	(	p.codigo_unico			=	t.codigo_unico				)
	INNER JOIN	Plan_pago				pp	ON	(	t.codigo_unico			=	pp.codigo_unico			AND
															p.secuencia_prestamo	=	pp.secuencia_prestamo	AND
															p.tipo_prestamo		=	pp.tipo_prestamo			)
	INNER JOIN	filtro_restriccion	fr	ON	(	t.codigo_unico			=	fr.codigo_unico			)
	,(SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )) AS UN 
	WHERE	t.compania			=	@compania		AND
			pp.ano_periodo 	=	@ano_periodo	AND
			pp.codigo_periodo	=	@mes_periodo	AND
			fr.id_reporte		=	'RPT_PRESTAMO'	AND
			fr.spid				=	@@SPID
			AND ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL
	ORDER BY 3


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_PER_RPT_VEHICULO')
BEGIN
  DROP PROCEDURE [dbo].[SP_PER_RPT_VEHICULO]
END
GO

CREATE PROCEDURE [DBO].[SP_PER_RPT_VEHICULO]
(	@COMPANIA	CHAR(02),
	@UNIDAD_FUNCIONAL CHAR(8),
	@IND_SUBUNIDAD CHAR(1) = 'S' 

)
AS
	DECLARE	@DESCRIPCION_CIA	VARCHAR(50)
	EXECUTE SP_FILTRO_RESTRICCION 'RPT_VEHICULOS'
	
	SET @DESCRIPCION_CIA	=	DBO.SF_OBTENER_DATOS_CIA(@COMPANIA,'0')
	
	SELECT	T.MATRICULA															AS	MATRICULA				,
				UPPER(	LTRIM(RTRIM(T.APELLIDO_PATERNO))	+	' '	+
							LTRIM(RTRIM(T.APELLIDO_MATERNO))	+	',	'	+
							LTRIM(RTRIM(T.NOMBRE				))	)				AS	NOMBRES					, 
				LTRIM(RTRIM(V.MARCA_VEHICULO))								AS	MARCA_VEHICULO			,   
				LTRIM(RTRIM(V.PLACA_VEHICULO))								AS	PLACA_VEHICULO			,   
				V.FLAG_ESTACIONAMIENTO											AS	FLAG_ESTACIONAMIENTO	,
				@DESCRIPCION_CIA													AS	COMPANIA	 
	FROM VEHICULOS V
	INNER JOIN TRABAJADOR				T	ON	(	T.CODIGO_UNICO	=	V.CODIGO_UNICO	)
	INNER JOIN	FILTRO_RESTRICCION	FR ON	(	T.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
	,		(SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )) AS UN 
	WHERE		T.COMPANIA				=	@COMPANIA			AND
				T.INDICADOR_PLANILLA	=	'1'					AND
				FR.ID_REPORTE			=	'RPT_VEHICULOS'	AND
				FR.SPID					=	@@SPID
				AND 			ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL

	ORDER BY 2


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_planilla_consolidada_borrador')
BEGIN
  DROP PROCEDURE [dbo].[sp_planilla_consolidada_borrador]
END
GO



/*
	EXEC	sp_planilla_consolidada	'01','USER01','14-MENSUAL','00000007','01','E','0000','00','01'
	EXEC	sp_planilla_consolidada	'01','USER01','14-MENSUAL','00000007','01','E','2014','09','01'
	EXEC	sp_planilla_consolidada_borrador	'01','USER01','14-MENSUAL','00000007','01','E','0000','00','01'
	EXEC	sp_planilla_consolidada_borrador	'01','USER01','14-MENSUAL','00000007','01','E','2014','10','01'
*/

CREATE PROCEDURE [dbo].[sp_planilla_consolidada_borrador]
(	@compania_usuario	char(02),
	@usuario				char(10),
	@proceso				char(20),
	@estacion			char(30),
	
	@compania			char(02),
	@tipo_trabajador	char(01),
	@ano_periodo		char(04),
	@codigo_periodo	char(02),
	@codigo_planilla	char(02)    
)    
AS    
	DECLARE	@ano_vigente   char(04)		,
				@mes_vigente   char(02)
	
	DECLARE	@V_ANO_VIGENTE		CHAR(04),
				@V_MES_VIGENTE		CHAR(02),
				@V_ANO_PERIODO		CHAR(04),
				@V_MES_PERIODO		CHAR(02),
				@V_NOMBRE_CIA		VARCHAR(50),
				@V_BASE_CONCEPTO	CHAR(02),
				@V_DSC_TIPO_TRAB	VARCHAR(30)
				
	SELECT	@V_MES_VIGENTE	=	[DBO].[SF_OBTENER_PERIODO_VIGENTE](@COMPANIA,@TIPO_TRABAJADOR,'0'),
				@V_ANO_VIGENTE	=	[DBO].[SF_OBTENER_PERIODO_VIGENTE](@COMPANIA,@TIPO_TRABAJADOR,'1')
	
	SELECT	@V_MES_PERIODO		=	(	CASE	CONVERT(INT,@CODIGO_PERIODO)
													WHEN	0	THEN	@V_MES_VIGENTE
													ELSE	@CODIGO_PERIODO
												END	),
				@V_ANO_PERIODO		=	(	CASE	CONVERT(INT,@ANO_PERIODO)
													WHEN	0	THEN	@V_ANO_VIGENTE
													ELSE	@ANO_PERIODO
												END	),
	
				@V_NOMBRE_CIA		=	(	SELECT	RTRIM(LTRIM(NOMBRE_CIA))
												FROM TBL_COMPANIA
												WHERE	CODIGO_CIA	=	@COMPANIA	)
	SELECT	@V_BASE_CONCEPTO	=	CODIGO_BASE_CONCEPTO,
				@V_DSC_TIPO_TRAB	=	DESCRIPCION_CORTA_TIPO_TRAB
	FROM TBL_TIPO_TRABAJADOR
	WHERE COMPANIA				=	@COMPANIA			AND
			TIPO_TRABAJADOR	=	@TIPO_TRABAJADOR
	
	IF @V_ANO_PERIODO+@V_MES_PERIODO	=	@V_ANO_VIGENTE+@V_MES_VIGENTE
	BEGIN
		SELECT	@COMPANIA																														AS	CODIGO_COMPANIA		,
					@V_NOMBRE_CIA																													AS	NOMBRE_COMPANIA		,
					@V_DSC_TIPO_TRAB																												AS DSC_TIPO_TRABAJADOR	,
					T.CODIGO_UNICO																													AS	CODIGO_UNICO			,
					T.MATRICULA																														AS	MATRICULA				,
					RTRIM(LTRIM(T.APELLIDO_PATERNO))+' ' +
					RTRIM(LTRIM(T.APELLIDO_MATERNO))+', '+
					RTRIM(LTRIM(T.NOMBRE))																										AS	NOMBRE_COMPLETO		,
					@V_ANO_PERIODO																													AS	ANO_REPORTE				,
					@V_MES_PERIODO																													AS	MES_REPORTE				,
					T.UNIDAD_FUNCIONAL_ORGANICA																								AS	UNIDAD_FUNCIONAL		,
					DBO.SF_OBTENER_UNIDAD_FUNCIONAL	(	@COMPANIA,T.UNIDAD_FUNCIONAL_ORGANICA)									AS	NOMBRE_UF				,
					DBO.SF_OBTENER_CCENTRO_COSTO		(	@COMPANIA,T.CODIGO_UNICO,T.UNIDAD_FUNCIONAL_ORGANICA,'C','N')	AS	CENTRO_COSTO
		FROM	TRABAJADOR	T
		INNER JOIN	IMPORTE_ID				I	ON	(	T.CODIGO_UNICO				=	I.CODIGO_UNICO				AND
																T.COMPANIA					=	I.CODIGO_COMPANIA			AND
																T.TIPO_TRABAJADOR			=	I.TIPO_TRABAJADOR			)
		INNER	JOIN	CONCEPTO					C	ON	(	I.CODIGO_CONCEPTO			=	C.CODIGO_CONCEPTO			)
		INNER	JOIN	CONCEPTO_PLANILLA		CP	ON	(	I.CODIGO_PLANILLA			=	CP.CODIGO_PLANILLA		AND
																C.CODIGO_CONCEPTO			=	CP.CODIGO_CONCEPTO		AND
																C.CODIGO_BASE_CONCEPTO	=	CP.CODIGO_BASE_CONCEPTO	)
		INNER	JOIN	FILTRO_PROCESO			F	ON	(	T.CODIGO_UNICO				=	F.CODIGO_UNICO				)
		WHERE	T.COMPANIA						=	@COMPANIA			AND
				T.TIPO_TRABAJADOR				=	@TIPO_TRABAJADOR	AND
				I.CODIGO_PERIODO				=	@V_MES_PERIODO		AND
				I.ANO_PERIODO					=	@V_ANO_PERIODO		AND
				I.CODIGO_PLANILLA				=	@CODIGO_PLANILLA	AND
				I.IMPORTE_CONCEPTO			<>	0						AND
				C.CODIGO_BASE_CONCEPTO		=	@V_BASE_CONCEPTO	AND
				(	C.CODIGO_TIPO_CONCEPTO	=	'1'	OR
					C.CODIGO_TIPO_CONCEPTO	=	'2'	OR
					C.CODIGO_TIPO_CONCEPTO	=	'3'	OR
					C.CODIGO_TIPO_CONCEPTO	=	'4'	OR
					C.CODIGO_TIPO_CONCEPTO	=	'5'	)				AND
				CP.INDICADOR_FIGURA_BOLETA	=	'1'					AND
				F.CODIGO_PROCESO				=	@PROCESO				AND
				F.USUARIO						=	@USUARIO				AND
				F.ESTACION_ID					=	@ESTACION			AND
				F.COMPANIA						=	@COMPANIA_USUARIO
      GROUP BY	T.CODIGO_UNICO					,
					T.MATRICULA						,
					T.APELLIDO_PATERNO			,
					T.APELLIDO_MATERNO			,
					T.NOMBRE							,
					T.UNIDAD_FUNCIONAL_ORGANICA
		ORDER BY 6					
	END
	ELSE
	BEGIN
		SELECT	@COMPANIA																														AS	CODIGO_COMPANIA		,
					@V_NOMBRE_CIA																													AS	NOMBRE_COMPANIA		,
					@V_DSC_TIPO_TRAB																												AS DSC_TIPO_TRABAJADOR	,
					T.CODIGO_UNICO																													AS	CODIGO_UNICO			,
					T.MATRICULA																														AS	MATRICULA				,
					RTRIM(LTRIM(T.APELLIDO_PATERNO))+' ' +
					RTRIM(LTRIM(T.APELLIDO_MATERNO))+', '+
					RTRIM(LTRIM(T.NOMBRE))																										AS	NOMBRE_COMPLETO		,
					@V_ANO_PERIODO																													AS	ANO_REPORTE				,
					@V_MES_PERIODO																													AS	MES_REPORTE				,
					T.UNIDAD_FUNCIONAL_ORGANICA																								AS	UNIDAD_FUNCIONAL		,
					DBO.SF_OBTENER_UNIDAD_FUNCIONAL	(	@COMPANIA,T.UNIDAD_FUNCIONAL_ORGANICA)									AS	NOMBRE_UF				,
					DBO.SF_OBTENER_CCENTRO_COSTO		(	@COMPANIA,T.CODIGO_UNICO,T.UNIDAD_FUNCIONAL_ORGANICA,'C','N')	AS	CENTRO_COSTO
		FROM	HISTORICO_BOLETA_ID	T
		INNER JOIN	HISTORICO_IMPORTE_ID	I	ON	(	T.CODIGO_UNICO				=	I.CODIGO_UNICO				AND
																T.CODIGO_PERIODO			=	I.CODIGO_PERIODO			AND
																T.ANO_PERIODO				=	I.ANO_PERIODO				AND
																T.TIPO_TRABAJADOR			=	I.TIPO_TRABAJADOR			AND
																T.CODIGO_COMPANIA			=	I.CODIGO_COMPANIA			)
		INNER	JOIN	CONCEPTO					C	ON	(	I.CODIGO_CONCEPTO			=	C.CODIGO_CONCEPTO			)
		INNER	JOIN	CONCEPTO_PLANILLA		CP	ON	(	I.CODIGO_PLANILLA			=	CP.CODIGO_PLANILLA		AND
																C.CODIGO_CONCEPTO			=	CP.CODIGO_CONCEPTO		AND
																C.CODIGO_BASE_CONCEPTO	=	CP.CODIGO_BASE_CONCEPTO	)
		WHERE	T.CODIGO_PERIODO				=	@V_MES_PERIODO		AND
				T.ANO_PERIODO					=	@V_ANO_PERIODO		AND
				T.TIPO_TRABAJADOR				=	@TIPO_TRABAJADOR	AND
				T.CODIGO_COMPANIA				=	@COMPANIA			AND
				I.CODIGO_PLANILLA				=	@CODIGO_PLANILLA	AND
				I.IMPORTE_CONCEPTO			<>	0						AND
				C.CODIGO_BASE_CONCEPTO		=	@V_BASE_CONCEPTO	AND
				(	C.CODIGO_TIPO_CONCEPTO	=	'1'	OR
					C.CODIGO_TIPO_CONCEPTO	=	'2'	OR
					C.CODIGO_TIPO_CONCEPTO	=	'3'	OR
					C.CODIGO_TIPO_CONCEPTO	=	'4'	OR
					C.CODIGO_TIPO_CONCEPTO	=	'5'	)				AND
				CP.INDICADOR_FIGURA_BOLETA	=	'1'
      GROUP BY	T.CODIGO_UNICO					,
					T.MATRICULA						,
					T.APELLIDO_PATERNO			,
					T.APELLIDO_MATERNO			,
					T.NOMBRE							,
					T.UNIDAD_FUNCIONAL_ORGANICA
		ORDER BY 6
	END

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_relacion_concepto_planilla_consolidada')
BEGIN
  DROP PROCEDURE [dbo].[sp_relacion_concepto_planilla_consolidada]
END
GO

CREATE PROCEDURE [dbo].[sp_relacion_concepto_planilla_consolidada]    
/*  
M001 20120131 EPalomares  
Control de Collation  
*/  
(    
  @compania_usuario  char(02),    
  @usuario           char(10),    
  @proceso   char(20),    
  @estacion         char(30),     
      
  @compania          char(80),    
  @tipo_trabajador   char(20),    
  @ano_periodo      char(04),    
  @codigo_periodo    char(02),    
  @codigo_planilla   char(02)    
)    
    
/*SELECT  @compania        = '01,02,03',    
        @tipo_trabajador = 'E,B,C',    
        @ano_periodo    = '2011',    
        @codigo_periodo  = '01',    
        @codigo_planilla = '01'    
*/    
AS    
declare @base_concepto  char(02)    
declare @ano_vigente   char(04)    
declare @mes_vigente   char(02)    
declare @temp           varchar(100)     
declare @reg            varchar(10)
declare @cont         integer 
declare @tipo   char(01)
declare @compa   char(02)    
/* CREAR TABLA DE COMPANIAS Y TIPO TRABAJADOR DE LA SELECCION */    
--M001 D002    
--create table #tab_tipo_trabajador ( tipo_trabajador       char(1))    
--create table #tab_compania        ( compania              char(2))    
    
--M001 A002    
create table #tab_tipo_trabajador ( tipo_trabajador       char(1) COLLATE SQL_Latin1_General_CP1_CI_AS )    
create table #tab_compania        ( compania              char(2) COLLATE SQL_Latin1_General_CP1_CI_AS )    
  
   
    
IF (@tipo_trabajador is not null) And (Rtrim(@tipo_trabajador) <> '')    
  Begin    
  Set @temp = Rtrim(@tipo_trabajador)
  set @cont = 0    
    While charindex(',',@temp) <> 0    
   Begin
  
        Set @reg  = substring(@temp ,1,charindex(',',@temp)-1)    
        Set @temp = substring(@temp ,charindex(',',@temp)+1,datalength(@temp))    
        insert into #tab_tipo_trabajador select @reg 
        
        set @cont = @cont + 1
        if @cont = 1 
        begin
        set @tipo = @reg
        end  
           
    End     
       
      if charindex(',',Rtrim(@tipo_trabajador)) = 0
      begin   
      insert into #tab_tipo_trabajador select @temp 
      set @tipo = @temp
      end     
 End    
    
IF (@compania is not null) And (Rtrim(@compania) <> '')    
  Begin    
  Set @temp = Rtrim(@compania)
  set @cont = 0        
    While charindex(',',@temp) <> 0    
   Begin    
        Set @reg  = substring(@temp ,1,charindex(',',@temp)-1)    
        Set @temp = substring(@temp ,charindex(',',@temp)+1,datalength(@temp))    
        insert into #tab_compania select @reg  
        
        set @cont = @cont + 1
        if @cont = 1 
        begin
        set @compa = @reg
        end  
          
      End  
      if charindex(',',Rtrim(@compania)) = 0
      begin   
      insert into #tab_compania select @temp 
      set @compa = @temp
      end   
 End    
      
      
SELECT  *    
  into  #tab_tbl_tipo_trabajador    
  from  tbl_tipo_trabajador ttt    
 where  exists ( select * from #tab_compania        tc where tc.compania          = ttt.compania ) and    
        exists ( select * from #tab_tipo_trabajador tt where tt.tipo_trabajador   = ttt.tipo_trabajador )    
            
/* ------------------------------------------------------------ */    
   --select * from #tab_tipo_trabajador 
   --select * from #tab_compania
   --select * from #tab_tbl_tipo_trabajador
    
set nocount off    
    
select @base_concepto = codigo_base_concepto     
from  tbl_tipo_trabajador 
where tipo_trabajador = @tipo and     
      compania        = @compa   
--where tipo_trabajador = @tipo_trabajador and     
--      compania        = @compania    
    
select  @ano_vigente = rtrim(ano_periodo),    
        @mes_vigente = rtrim(codigo_periodo)     
  from Periodo_vigente_planilla 
  where codigo_compania = @compa and   
       tipo_trabajador = @tipo    
 --where codigo_compania = @compania and   
 --      tipo_trabajador = @tipo_trabajador  
         
    
if  convert(int, @ano_periodo) = 0    
   select @ano_periodo = @ano_vigente    
        
if  convert(int, @codigo_periodo) = 0    
   select @codigo_periodo = @mes_vigente    
    
--select * from #tab_tbl_tipo_trabajador
--select @ano_periodo , @codigo_periodo , @ano_vigente , @mes_vigente 
    
if @ano_periodo + @codigo_periodo = @ano_vigente + @mes_vigente    
begin      
        select      rtrim((select nombre_cia    
                             from Tbl_compania tc    
                            where tc.codigo_cia = tt.compania )) compania,    
                    tt.descripcion_corta_tipo_trab tipo_trabajador_nombre,    
                    t.codigo_unico ,    
                    t.matricula,    
                    (select descripcion_corta_tipo_trab     
                       from Tbl_tipo_trabajador     
                      where dbo.Tbl_tipo_trabajador.tipo_trabajador = tt.tipo_trabajador     
                            and dbo.Tbl_tipo_trabajador.compania = tt.compania ) tipo_trabajador ,    
                    h.ano_periodo,    
                    h.codigo_periodo,     
   h.codigo_concepto,    
                    RTRIM(( c.codigo_concepto +' ' +replace (replace (replace (replace (replace (replace (replace (replace (replace (c.nombre_concepto, ' ', ' '),'%',''),'(',''),')',''),'-',''),'/',''),'.',''),'&',''),'=','')    
                                )) nombre_concepto,    
                    h.importe_concepto,    
                    rtrim (t.apellido_paterno) + ' ' + rtrim (t.apellido_materno) + ', '+ rtrim (t.nombre) nombre_completo,    
                    t.unidad_funcional_organica,    
                    (     SELECT nombre_unidad_funcional    
                                FROM Tbl_unidad_funcional    
                                WHERE compania = tt.compania    
                                      AND unidad_funcional = t.unidad_funcional_organica    
                            ) nombre_unidad_funcional_organica,    
                    (     SELECT centro_costo     
                                FROM Tbl_unidad_funcional    
                                WHERE compania = tt.compania    
                                      AND unidad_funcional = t.unidad_funcional_organica    
                            )  centro_costo    
          
          from  Concepto_planilla cp,    
                #tab_tbl_tipo_trabajador tt,    
                importe_id h,    
                trabajador t,    
                concepto   c
        where   cp.codigo_planilla      = @codigo_planilla        and    
                cp.codigo_base_concepto = tt.codigo_base_concepto and    
                cp.codigo_concepto      = h.codigo_concepto       and    
                cp.codigo_planilla      = h.codigo_planilla       and    
                tt.compania             = h.codigo_compania       and    
                tt.tipo_trabajador      = h.tipo_trabajador       and    
                t.codigo_unico          = h.codigo_unico          and    
                c.codigo_concepto       = cp.codigo_concepto      and    
                c.codigo_base_concepto  = cp.codigo_base_concepto and    
                h.codigo_periodo        = @codigo_periodo         and    
                h.ano_periodo           = @ano_periodo            and    
                h.importe_concepto      <> 0                      and    
                cp.indicador_figura_boleta = '1'           
        order by 1,2                
END  
  
else    
begin       
        select      rtrim((select nombre_cia    
                             from Tbl_compania tc    
                            where tc.codigo_cia = tt.compania )) compania,    
                    tt.descripcion_corta_tipo_trab tipo_trabajador_nombre,    
                    t.codigo_unico ,    
                    t.matricula,    
    (select descripcion_corta_tipo_trab     
                       from Tbl_tipo_trabajador     
                      where dbo.Tbl_tipo_trabajador.tipo_trabajador = tt.tipo_trabajador     
                            and dbo.Tbl_tipo_trabajador.compania = tt.compania ) tipo_trabajador ,    
                    h.ano_periodo,    
                    h.codigo_periodo,     
                    h.codigo_concepto,    
                    RTRIM(( c.codigo_concepto +' ' +replace (replace (replace (replace (replace (replace (replace (replace (replace (c.nombre_concepto, ' ', ' '),'%',''),'(',''),')',''),'-',''),'/',''),'.',''),'&',''),'=','')    
                                )) nombre_concepto,    
                    h.importe_concepto,    
                    rtrim (t.apellido_paterno) + ' ' + rtrim (t.apellido_materno) + ', '+ rtrim (t.nombre) nombre_completo,    
                    t.unidad_funcional_organica,    
                    (     SELECT nombre_unidad_funcional    
                                FROM Tbl_unidad_funcional    
                                WHERE compania = tt.compania    
                                      AND unidad_funcional = t.unidad_funcional_organica    
                            ) nombre_unidad_funcional_organica,    
                    (     SELECT centro_costo     
                                FROM Tbl_unidad_funcional    
                                WHERE compania = tt.compania    
                                      AND unidad_funcional = t.unidad_funcional_organica    
                            )  centro_costo    
            
          from  Concepto_planilla cp,    
                #tab_tbl_tipo_trabajador tt,    
                historico_importe_id h,    
                historico_boleta_id t,    
                concepto   c    
        where   cp.codigo_planilla      = @codigo_planilla        and    
                cp.codigo_base_concepto = tt.codigo_base_concepto and    
                cp.codigo_concepto      = h.codigo_concepto       and    
                cp.codigo_planilla      = h.codigo_planilla       and    
                tt.compania             = h.codigo_compania       and    
                tt.tipo_trabajador      = h.tipo_trabajador       and    
                t.codigo_unico          = h.codigo_unico          and    
                c.codigo_concepto       = cp.codigo_concepto      and    
                c.codigo_base_concepto  = cp.codigo_base_concepto and    
                h.codigo_periodo        = @codigo_periodo         and    
                h.ano_periodo           = @ano_periodo            and    
                t.codigo_periodo        = @codigo_periodo         and    
                t.ano_periodo           = @ano_periodo            and    
                h.importe_concepto      <> 0                      and    
                cp.indicador_figura_boleta = '1'                    
        order by 1,2,11    
END     

Drop table #tab_tipo_trabajador     
Drop table #tab_compania            
drop table #tab_tbl_tipo_trabajador
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_relacion_costos_planilla')
BEGIN
  DROP PROCEDURE [dbo].[sp_relacion_costos_planilla]
END
GO

CREATE procedure dbo.sp_relacion_costos_planilla
(
@compania_usuario 	char(02),
@usuario	   	char(10),
@codigo_proceso   	char(20),
@estacion_id	   	char(30),
@compania	char(02),
@planilla	char(02),
@ano_periodo	char(04),
@tipo_cambio_c	char(10)
)
as

declare @tipo_cambio money

select @tipo_cambio = convert(money,@tipo_cambio_c)

select 	1 as orden,
	'Enero' as mes,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '01' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_enero,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '01' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_enero_dolares,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '01' and
		tipo_trabajador = 'E' and 
		indicador_estado_boleta = '1' ) as nro_emp_enero,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '01' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_enero_flj,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '01' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_enero_dolares_flj,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '01' and
		tipo_trabajador = 'L' and 
		indicador_estado_boleta = '1' ) as nro_flj_enero,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '01' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_enero_prac,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '01' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_enero_dolares_prac,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '01' and
		tipo_trabajador = 'P' and 
		indicador_estado_boleta = '1' ) as nro_prac_enero,
		(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '01' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_enero_bec,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '01' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_enero_dolares_bec,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '01' and
		tipo_trabajador = 'B' and 
		indicador_estado_boleta = '1' ) as nro_prac_bec
union
select 	2 as orden,
	'Febrero' as mes,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		t.ano_periodo = i.ano_periodo and
		i.ano_periodo = @ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '02' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_febrero,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '02' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_febrero_dolares,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '02' and
		tipo_trabajador = 'E' and 
		indicador_estado_boleta = '1' ) as nro_emp_febrero,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '02' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_febrero_flj,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '02' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_febrero_dolares_flj,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '02' and
		tipo_trabajador = 'L' and 
		indicador_estado_boleta = '1' ) as nro_flj_febrero,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '02' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_febrero_prac,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '02' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_febrero_dolares_prac,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '02' and
		tipo_trabajador = 'P' and 
		indicador_estado_boleta = '1' ) as nro_prac_febrero,
		(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '02' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_febrero_bec,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '02' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_febrero_dolares_bec,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '02' and
		tipo_trabajador = 'B' and 
		indicador_estado_boleta = '1' ) as nro_bec_febrero
union
select 	3 as orden,
	'Marzo' as mes,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '03' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_marzo,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '03' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_marzo_dolares,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '03' and
		tipo_trabajador = 'E' and 
		indicador_estado_boleta = '1' ) as nro_emp_marzo,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '03' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_marzo_flj,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '03' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_marzo_dolares_flj,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '03' and
		tipo_trabajador = 'L' and 
		indicador_estado_boleta = '1' ) as nro_flj_marzo,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '03' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_marzo_prac,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '03' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_marzo_dolares_prac,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '03' and
		tipo_trabajador = 'P' and 
		indicador_estado_boleta = '1' ) as nro_prac_marzo,
		(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '03' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_marzo_bec,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '03' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_marzo_dolares_bec,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '03' and
		tipo_trabajador = 'B' and 
		indicador_estado_boleta = '1' ) as nro_bec_marzo
union
select 	4 as orden,
	'Abril' as mes,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '04' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_abril,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '04' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_abril_dolares,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '04' and
		tipo_trabajador = 'E' and 
		indicador_estado_boleta = '1' ) as nro_emp_abril,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '04' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_abril_flj,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '04' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_abril_dolares_flj,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '04' and
		tipo_trabajador = 'L' and 
		indicador_estado_boleta = '1' ) as nro_flj_abril,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '04' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_abril_prac,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '04' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_abril_dolares_prac,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '04' and
		tipo_trabajador = 'P' and 
		indicador_estado_boleta = '1' ) as nro_prac_abril,
		(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '04' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_abril_bec,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '04' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_abril_dolares_bec,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '04' and
		tipo_trabajador = 'B' and 
		indicador_estado_boleta = '1' ) as nro_bec_abril
union
select	5 as orden,
	'Mayo' as mes,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '05' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_mayo,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '05' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_mayo_dolares,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '05' and
		tipo_trabajador = 'E' and 
		indicador_estado_boleta = '1' ) as nro_emp_mayo,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '05' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_mayo_flj,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '05' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_mayo_dolares_flj,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '05' and
		tipo_trabajador = 'L' and 
		indicador_estado_boleta = '1' ) as nro_flj_mayo,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '05' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_mayo_prac,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '05' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_mayo_dolares_prac,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '05' and
		tipo_trabajador = 'P' and 
		indicador_estado_boleta = '1' ) as nro_prac_mayo,
		(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '05' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_mayo_bec,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '05' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_mayo_dolares_bec,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '05' and
		tipo_trabajador = 'B' and 
		indicador_estado_boleta = '1' ) as nro_bec_mayo
union
select	6 as orden,
	'Junio' as mes,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '06' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_junio,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '06' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_junio_dolares,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '06' and
		tipo_trabajador = 'E' and 
		indicador_estado_boleta = '1' ) as nro_emp_junio,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '06' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_junio_flj,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '06' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_junio_dolares_flj,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '06' and
		tipo_trabajador = 'L' and 
		indicador_estado_boleta = '1' ) as nro_flj_junio,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '06' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_junio_prac,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '06' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_junio_dolares_prac,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '06' and
		tipo_trabajador = 'P' and 
		indicador_estado_boleta = '1' ) as nro_prac_junio,
		(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '06' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_junio_bec,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '06' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_junio_dolares_bec,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '06' and
		tipo_trabajador = 'B' and 
		indicador_estado_boleta = '1' ) as nro_bec_junio
union
select	7 as orden,
	'Julio' as mes,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '07' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_julio,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.ano_periodo = @ano_periodo and
		i.codigo_periodo = '07' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_julio_dolares,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '07' and
		tipo_trabajador = 'E' and 
		indicador_estado_boleta = '1' ) as nro_emp_julio,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '07' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_julio_flj,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '07' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_julio_dolares_flj,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '07' and
		tipo_trabajador = 'L' and 
		indicador_estado_boleta = '1' ) as nro_flj_julio,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '07' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_julio_prac,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '07' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_julio_dolares_prac,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '07' and
		tipo_trabajador = 'P' and 
		indicador_estado_boleta = '1' ) as nro_prac_julio,
		(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '07' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_julio_bec,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '07' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_julio_dolares_bec,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '07' and
		tipo_trabajador = 'B' and 
		indicador_estado_boleta = '1' ) as nro_bec_julio
union
select 	8 as orden,
	'Agosto' as mes,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '08' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_agosto,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '08' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_agosto_dolares,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and 
	       	ano_periodo = @ano_periodo and   codigo_periodo = '08' and
		tipo_trabajador = 'E' and 
		indicador_estado_boleta = '1' ) as nro_emp_agosto,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '08' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_agosto_flj,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '08' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_agosto_dolares_flj,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '08' and
		tipo_trabajador = 'L' and 
		indicador_estado_boleta = '1' ) as nro_flj_agosto,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '08' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_agosto_prac,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '08' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_agosto_dolares_prac,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '08' and
		tipo_trabajador = 'P' and 
		indicador_estado_boleta = '1' ) as nro_prac_agosto,
		(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '08' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_agosto_bec,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '08' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_agosto_dolares_bec,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '08' and
		tipo_trabajador = 'B' and 
		indicador_estado_boleta = '1' ) as nro_bec_agosto
union
select 	9 as orden,
	'Setiembre' as mes,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		i.codigo_periodo = '09' and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_setiembre,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '09' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_setiembre_dolares,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '09' and
		tipo_trabajador = 'E' and 
		indicador_estado_boleta = '1' ) as nro_emp_setiembre,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '09' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_setiembre_flj,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '09' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_setiembre_dolares_flj,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '09' and
		tipo_trabajador = 'L' and 
		indicador_estado_boleta = '1' ) as nro_flj_setiembre,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '09' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_setiembre_prac,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '09' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_setiembre_dolares_prac,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '09' and
		tipo_trabajador = 'P' and 
		indicador_estado_boleta = '1' ) as nro_prac_setiembre,
		(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '09' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_setiembre_bec,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '09' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_setiembre_dolares_bec,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '09' and
		tipo_trabajador = 'B' and 
		indicador_estado_boleta = '1' ) as nro_bec_setiembre
union
select	10 as orden,
	'Octubre' as mes,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '10' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_octubre,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '10' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_octubre_dolares,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '10' and
		tipo_trabajador = 'E' and 
		indicador_estado_boleta = '1' ) as nro_emp_octubre,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '10' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_octubre_flj,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '10' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_octubre_dolares_flj,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '10' and
		tipo_trabajador = 'L' and 
		indicador_estado_boleta = '1' ) as nro_flj_octubre,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '10' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_octubre_prac,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '10' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_octubre_dolares_prac,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '10' and
		tipo_trabajador = 'P' and 
		indicador_estado_boleta = '1' ) as nro_prac_octubre,
		(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '10' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_octubre_bec,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '10' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_octubre_dolares_bec,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '10' and
		tipo_trabajador = 'B' and 
		indicador_estado_boleta = '1' ) as nro_bec_octubre
union
select 	11 as orden,
	'Noviembre' as mes,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '11' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_noviembre,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '11' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_noviembre_dolares,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '11' and
		tipo_trabajador = 'E' and 
		indicador_estado_boleta = '1' ) as nro_emp_noviembre,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '11' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_noviembre_flj,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '11' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_noviembre_dolares_flj,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '11' and
		tipo_trabajador = 'L' and 
		indicador_estado_boleta = '1' ) as nro_flj_noviembre,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '11' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_noviembre_prac,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '11' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_noviembre_dolares_prac,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '11' and
		tipo_trabajador = 'P' and 
		indicador_estado_boleta = '1' ) as nro_prac_noviembre,
		(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '11' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_noviembre_bec,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '11' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_noviembre_dolares_bec,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '11' and
		tipo_trabajador = 'B' and 
		indicador_estado_boleta = '1' ) as nro_bec_noviembre
union
select	12 as orden,
	'Diciembre' as mes,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '12' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_diciembre,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '12' and
		i.tipo_trabajador = 'E' and
		i.codigo_planilla = @planilla and
		i.codigo_concepto in ('8980','5010','5011','7831')) as total_diciembre_dolares,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and 
	       	ano_periodo = @ano_periodo and   codigo_periodo = '12' and
		tipo_trabajador = 'E' and 
		indicador_estado_boleta = '1' ) as nro_emp_diciembre,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '12' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_diciembre_flj,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '12' and
		i.tipo_trabajador = 'L' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_diciembre_dolares_flj,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '12' and
		tipo_trabajador = 'L' and 
		indicador_estado_boleta = '1' ) as nro_flj_diciembre,
	(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '12' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_diciembre_prac,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '12' and
		i.tipo_trabajador = 'P' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_diciembre_dolares_prac,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '12' and
		tipo_trabajador = 'P' and 
		indicador_estado_boleta = '1' ) as nro_prac_diciembre,
		(select sum(importe_concepto)
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '12' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_diciembre_bec,
	(select sum(importe_concepto) / @tipo_cambio
	 from 	Historico_importe_id i, Historico_boleta_id t
	 where 	i.codigo_unico = t.codigo_unico and
		i.ano_periodo = @ano_periodo and
		t.ano_periodo = i.ano_periodo and
		i.codigo_periodo = t.codigo_periodo and
		i.codigo_periodo = '12' and
		i.tipo_trabajador = 'B' and
		i.codigo_planilla = '01' and
		i.codigo_concepto in ('8980')) as total_diciembre_dolares_bec,
	(Select count(distinct(codigo_unico)) 
	 from 	Historico_boleta_id
	 WHERE 	codigo_compania = @compania and  
	       	ano_periodo = @ano_periodo and   codigo_periodo = '11' and
		tipo_trabajador = 'B' and 
		indicador_estado_boleta = '1' ) as nro_bec_diciembre
order by 1	
	


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_REPORTE_AMONESTACIONES')
BEGIN
  DROP PROCEDURE [dbo].[SP_REPORTE_AMONESTACIONES]
END
GO

-- SP_REPORTE_AMONESTACIONES '01'
CREATE PROCEDURE [DBO].[SP_REPORTE_AMONESTACIONES]  
(	@COMPANIA						CHAR(02),
	@UNIDAD_FUNCIONAL CHAR(8),
	@IND_SUBUNIDAD CHAR(1) = 'S' 
)
AS	
	DECLARE @DESCRIPCION_CIA VARCHAR(50)
	EXECUTE SP_FILTRO_RESTRICCION 'RPT_AMONES'
	
	SELECT	@DESCRIPCION_CIA = LTRIM(RTRIM(NOMBRE_CIA))
	FROM TBL_COMPANIA
	WHERE	CODIGO_CIA	=	@COMPANIA
	
	SELECT	T.MATRICULA,
				LTRIM(	UPPER(	RTRIM(T.APELLIDO_PATERNO)	+	' '	+
										RTRIM(T.APELLIDO_MATERNO)	+	', '	+
										RTRIM(T.NOMBRE)	))									AS	NOMBRE_COMPLETO	,				
				DBO.SF_OBTENER_TABLA_DETALLE		('0087',A.TIPO_AMONESTACION)	AS	AMONESTACION		,
				A.FECHA_AMONESTACION			,
				A.COMENTARIO					,
				A.SITUACION_AMONESTACION	,
				(	SELECT	COUNT(TABLA.CODIGO_UNICO)
					FROM	(	SELECT CODIGO_UNICO
								FROM	AMONESTACION
								GROUP BY	CODIGO_UNICO ) AS TABLA	)					AS	TOTAL					,
				T.COMPANIA,
				@DESCRIPCION_CIA															AS	NOMBRE_COMPANIA
	FROM	TRABAJADOR T
	INNER JOIN	AMONESTACION			A	ON	(	T.CODIGO_UNICO	=	A.CODIGO_UNICO	)
	INNER JOIN	FILTRO_RESTRICCION	FR	ON	(	T.CODIGO_UNICO	=	FR.CODIGO_UNICO)
	,(SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )) AS UN 
	WHERE	COMPANIA			=	@COMPANIA		AND
			FR.ID_REPORTE	=	'RPT_AMONES'	AND
			FR.SPID			=	@@SPID
	AND ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL
	ORDER BY 2



SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_reporte_aumento_sueldo_x_motivo')
BEGIN
  DROP PROCEDURE [dbo].[sp_reporte_aumento_sueldo_x_motivo]
END
GO



CREATE PROCEDURE [dbo].[sp_reporte_aumento_sueldo_x_motivo] 
(	@as_compania	char(02) 
)
AS 

	EXECUTE sp_filtro_restriccion 'RPT_AUM_SUEL_X_MOT'

	SELECT	matricula			=	t.matricula			,
				nombre				=	UPPER(	LTRIM(RTRIM(t.apellido_paterno))	+	' '	+
														LTRIM(RTRIM(t.apellido_materno))	+	', '	+
														LTRIM(RTRIM(t.nombre))				)	,
				fecha_aumento		=	h.fecha_aumento	, 
				motivo_aumento		=	h.motivo_aumento	, 
				dsc_motivo			=	(	SELECT	descripcion_registro 
												FROM	Tbl_detalle_tabla 
												WHERE	codigo_tabla		=	'0010'				AND
														codigo_registro	=	h.motivo_aumento	)	,
				monto_ant_basico	=	ISNULL(h.nuevo_basico,0) - ISNULL(h.monto_aumento,0) , 
				monto_aumento		=	ISNULL(h.monto_aumento,0)	,
				monto_new_basico	=	ISNULL(h.nuevo_basico,0)
	FROM Trabajador	t
	INNER JOIN Historia_basico		h	ON	(	t.codigo_unico	=	h.codigo_unico		AND
														t.compania		=	h.codigo_compania	)
	INNER JOIN filtro_restriccion fr	ON	(	t.codigo_unico	=	fr.codigo_unico	)
	WHERE	t.compania			=	@as_compania			AND
			h.monto_aumento	>	0							AND
			fr.id_reporte		=	'RPT_AUM_SUEL_X_MOT'	AND
			fr.spid				=	@@SPID
	ORDER BY 4,2,3



SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_reporte_aumento_sueldo_x_uf')
BEGIN
  DROP PROCEDURE [dbo].[sp_reporte_aumento_sueldo_x_uf]
END
GO



--	exec	sp_reporte_aumento_sueldo_x_uf	'01'

CREATE PROCEDURE [dbo].[sp_reporte_aumento_sueldo_x_uf]   
(	@as_compania char(02)   
)
AS
	EXECUTE sp_filtro_restriccion 'RPT_AUM_SUELDO'
	
	SELECT	matricula				=	matricula							,
				nombre					=	UPPER(	LTRIM(RTRIM(t.apellido_paterno))	+	' '	+
															LTRIM(RTRIM(t.apellido_materno))	+	', '	+
															LTRIM(RTRIM(t.nombre))				),
				fecha_aumento			=	h.fecha_aumento					,
				unidad_funcional		=	t.unidad_funcional_organica	,
				uf_descripcion			=	u.nombre_unidad_funcional		,
				monto_ant_basico		=	ISNULL(h.nuevo_basico,0) - ISNULL(h.monto_aumento,0)	,
				monto_aumento			=	ISNULL(h.monto_aumento,0)		,
				monto_new_basico		=	ISNULL(h.nuevo_basico,0)		,
				puesto					=	t.puesto_organica	,
				puesto_descripcion	=	(	SELECT	p.descripcion_puesto
													FROM	Tbl_puesto_compania p
													WHERE	p.compania	=	t.compania			AND
															p.puesto		=	t.puesto_organica	)	,
				motivo_aumento			=	(	SELECT	descripcion_registro
													FROM Tbl_detalle_tabla
													WHERE	codigo_tabla		=	'0010'				AND
															codigo_registro	=	h.motivo_aumento	)
	FROM	Trabajador	t
	INNER JOIN	Historia_basico		h	ON	(	t.codigo_unico						=	h.codigo_unico			AND
															t.compania							=	h.codigo_compania		)
	INNER JOIN	Tbl_unidad_funcional	u	ON	(	t.unidad_funcional_organica	=	u.unidad_funcional	AND
															t.compania							=	u.compania				)
	INNER JOIN	filtro_restriccion	FR	ON	(	t.codigo_unico						=	FR.codigo_unico		)
	WHERE	t.compania			=	@as_compania		AND
			h.monto_aumento	>	0						AND
			fr.id_reporte		=	'RPT_AUM_SUELDO'	AND
			fr.spid				=	@@SPID
	ORDER BY 2, 3

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_REPORTE_AUSENCIAS')
BEGIN
  DROP PROCEDURE [dbo].[SP_REPORTE_AUSENCIAS]
END
GO


/*
SP_REPORTE_AUSENCIAS '01','2010-01-01','2014-12-31'
*/
CREATE PROCEDURE [DBO].[SP_REPORTE_AUSENCIAS]
(	@COMPANIA		CHAR(02)	,
	@FECHA_INICIO	DATETIME	,
	@FECHA_TERMINO	DATETIME,
	@UNIDAD_FUNCIONAL CHAR(8),
	@IND_SUBUNIDAD CHAR(1) = 'S' 

)
AS 

	DECLARE @DESCRIPCION_CIA VARCHAR(50)
	EXECUTE SP_FILTRO_RESTRICCION 'RPT_AUSENCIAS'
	
	SELECT	@DESCRIPCION_CIA = LTRIM(RTRIM(NOMBRE_CIA))
	FROM TBL_COMPANIA
	WHERE	CODIGO_CIA	=	@COMPANIA
	
	SELECT	A.FECHA_AUSENCIA						,
				A.INDICADOR_PROCESADO_CARTA		, 
				A.INDICADOR_DESCONTADO_PLANILLA	, 
				INDICADOR_AUSENCIA_JUSTIFICADA	,
				T.UNIDAD_FUNCIONAL_ORGANICA		, 
				T.UNIDAD_FUNCIONAL_DIVISION		, 
				T.MATRICULA								, 
				UPPER(	LTRIM(RTRIM(T.APELLIDO_PATERNO))	+	' '	+
							LTRIM(RTRIM(T.APELLIDO_MATERNO))	+	', '	+
							LTRIM(RTRIM(T.NOMBRE))				)											AS	NOMBRE_COMPLETO	,
				DBO.SF_OBTENER_UNIDAD_FUNCIONAL	(T.COMPANIA,T.UNIDAD_FUNCIONAL_ORGANICA)	AS	NOMBRE_UNIDAD		,
				A.OBSERVACIONES						,
				@DESCRIPCION_CIA																				AS	NOMBRE_COMPANIA
	FROM	TRABAJADOR T
	INNER JOIN AUSENCIA				A	ON	(	T.CODIGO_UNICO	=	A.CODIGO_UNICO		AND
														T.COMPANIA		=	A.CODIGO_CIA		)
	INNER JOIN FILTRO_RESTRICCION	FR	ON	(	T.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
	,		(SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )) AS UN 
	WHERE	T.COMPANIA				=	@COMPANIA			AND
			A.SITUACION_AUSENCIA	<>	'E'					AND
			A.FECHA_AUSENCIA		>=	@FECHA_INICIO		AND
			A.FECHA_AUSENCIA		<=	@FECHA_TERMINO		AND
			FR.ID_REPORTE			=	'RPT_AUSENCIAS'	AND
			FR.SPID					=	@@SPID
			AND 			ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL
	ORDER BY 5,1,7






SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_reporte_ausencias_trabajador')
BEGIN
  DROP PROCEDURE [dbo].[sp_reporte_ausencias_trabajador]
END
GO



/*
sp_reporte_ausencias_trabajador '01','2010-01-01','2014-12-31'
*/
CREATE PROCEDURE [dbo].[sp_reporte_ausencias_trabajador]
(	@compania		char(02)	,
	@fecha_inicio	datetime	,
	@fecha_termino	datetime
)
AS 

	EXECUTE sp_filtro_restriccion 'RPT_AUSENCIAS'

	SELECT	a.fecha_ausencia						,
				a.indicador_procesado_carta		, 
				a.indicador_descontado_planilla	, 
				indicador_ausencia_justificada	,
				t.unidad_funcional_organica		, 
				t.unidad_funcional_division		, 
				t.matricula								, 
				nombre_completo						=	UPPER(	LTRIM(RTRIM(t.apellido_paterno))	+	' '	+
																			LTRIM(RTRIM(t.apellido_materno))	+	', '	+
																			LTRIM(RTRIM(t.nombre))				)	,
				nombre_unidad							=	(	SELECT 	rtrim(uf.nombre_unidad_funcional)
																	FROM 	dbo.Tbl_unidad_funcional uf
																	WHERE uf.compania				=	t.compania							AND
																			uf.unidad_funcional	=	t.unidad_funcional_organica	),
				a.observaciones
	FROM	Trabajador t
	INNER JOIN Ausencia				a	ON	(	t.codigo_unico	=	a.codigo_unico		AND
														t.compania		=	a.codigo_cia		)
	INNER JOIN filtro_restriccion	fr	ON	(	t.codigo_unico	=	fr.codigo_unico	)
	WHERE	t.compania				=	@compania			AND
			a.situacion_ausencia	<>	'E'					AND
			a.fecha_ausencia		>=	@fecha_inicio		AND
			a.fecha_ausencia		<=	@fecha_termino		AND
			fr.id_reporte			=	'RPT_AUSENCIAS'	AND
			fr.spid					=	@@SPID
	ORDER BY 5,1,7





SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_REPORTE_CALCULO_SUBSIDIO')
BEGIN
  DROP PROCEDURE [dbo].[SP_REPORTE_CALCULO_SUBSIDIO]
END
GO


 CREATE PROCEDURE [dbo].[SP_REPORTE_CALCULO_SUBSIDIO]  
( @COMPANIA_USUARIO CHAR(02),  
 @USUARIO    CHAR(10),  
 @CODIGO_PROCESO CHAR(20),  
 @ESTACION_ID  CHAR(08),  
 @COMPANIA   CHAR(02),  
 @TIPO_TRABAJADOR CHAR(01),  
 @CODIGO_PERIODO CHAR(02),  
 @ANO_PERIODO  CHAR(04),  
 @CODIGO_PLANILLA CHAR(02)  
)  
AS  
BEGIN
	 DECLARE @BASE_CONCEPTO  CHAR(02) ,  
		@MES_INICIO   CHAR(02) ,  
		@ANO_INICIO   CHAR(04) ,  
		@MES_FIN    CHAR(02) ,  
		@ANO_FIN    CHAR(04) ,  
		@MES_VIGENTE  CHAR(02) ,  
		@ANO_VIGENTE  CHAR(04) ,  
		@MESES_LABORADOS MONEY  ,  
		@NRO_MESES_LAB  INTEGER ,  
		@NRO_MESES_PROM INTEGER ,  
		@CODIGO_UNICO  CHAR(09) ,  
		@FECHA    DATETIME  
		,@MESES_MIN_CAL INTEGER = 6	
		,@MESES_MIN_CAL_cur INTEGER = 0	
		,@V_FechaFinalPeriod DateTime =null 
   
	 SELECT @BASE_CONCEPTO = CODIGO_BASE_CONCEPTO  
	 FROM TBL_TIPO_TRABAJADOR  
	 WHERE TIPO_TRABAJADOR = @TIPO_TRABAJADOR AND  
	   COMPANIA    = @COMPANIA  
     
     
	 SELECT 	
		@V_FechaFinalPeriod = fecha_cierre,
		@MES_VIGENTE = CODIGO_PERIODO ,  
		@ANO_VIGENTE = ANO_PERIODO  
	 FROM PERIODO_VIGENTE_PLANILLA  
	 WHERE TIPO_TRABAJADOR = @TIPO_TRABAJADOR AND  
	   CODIGO_COMPANIA = @COMPANIA  
     
	 SELECT @CODIGO_PERIODO = ( CASE @CODIGO_PERIODO WHEN '00'  THEN @MES_VIGENTE ELSE @CODIGO_PERIODO END ),  
		@ANO_PERIODO  = ( CASE @ANO_PERIODO  WHEN '0000' THEN @ANO_VIGENTE ELSE @ANO_PERIODO  END )  
   
	 SELECT @MES_INICIO = ( CASE @CODIGO_PERIODO WHEN '01' THEN '12' ELSE RIGHT('00'+CONVERT(VARCHAR(02),CONVERT(INT,@CODIGO_PERIODO)-1),2) END )  
	 SELECT @ANO_INICIO = ( CASE @CODIGO_PERIODO WHEN '01' THEN CONVERT(VARCHAR(04),CONVERT(INT,@ANO_PERIODO)-1) ELSE @ANO_PERIODO END )  
   
   
	 CREATE TABLE #TMP_CONCEPTO  
	 ( CONCEPTO   VARCHAR(04),  
	  BASE_CONCEPTO VARCHAR(02)  
	 )  
   
	 CREATE TABLE #TMP_TRABAJADORSUB  
	 ( CODIGO_UNICO  CHAR(09)  ,  
	  TIEMPO_LAB_MESES INTEGER  ,  
	  TIEMPO_PROM   INTEGER  ,  
	  CONCEPTO    VARCHAR(04) ,   
	  PERIODO    VARCHAR(09) ,  
	  IMPORTE    MONEY   )  
  
	 DECLARE C_TRABAJADOR CURSOR FOR  
	 SELECT T.CODIGO_UNICO , DATEDIFF(month,T.fecha_ingreso_compania,@V_FechaFinalPeriod) AS MESES_COMP
	 FROM TRABAJADOR T  
	 INNER JOIN FILTRO_PROCESO F ON ( T.CODIGO_UNICO = F.CODIGO_UNICO )  
	 WHERE F.CODIGO_PROCESO = @CODIGO_PROCESO AND  
	   F.USUARIO   = @USUARIO    AND  
	   F.ESTACION_ID  = @ESTACION_ID  AND  
	   F.COMPANIA   = @COMPANIA_USUARIO AND  
	   T.COMPANIA   = @COMPANIA  
  
	 OPEN C_TRABAJADOR  
	 FETCH C_TRABAJADOR INTO @CODIGO_UNICO , @MESES_MIN_CAL_cur 
  
	 WHILE @@FETCH_STATUS = 0  
	 BEGIN  
		  DELETE #TMP_CONCEPTO  
    
		  SELECT @MESES_LABORADOS = SUM( ( CASE CODIGO_CONCEPTO WHEN '7704' THEN IMPORTE_CONCEPTO*12 ELSE 0 END )+  
					  ( CASE CODIGO_CONCEPTO WHEN '7705' THEN IMPORTE_CONCEPTO  ELSE 0 END )+  
					  ( CASE CODIGO_CONCEPTO WHEN '7706' THEN IMPORTE_CONCEPTO  ELSE 0 END ))  
		  FROM HISTORICO_IMPORTE_ID  
		  WHERE CODIGO_UNICO  = @CODIGO_UNICO    AND  
			CODIGO_CONCEPTO IN ('7704','7705','7706') AND  
			CODIGO_PLANILLA = @CODIGO_PLANILLA   AND  
			CODIGO_PERIODO  = @MES_INICIO     AND  
			ANO_PERIODO   = @ANO_INICIO     AND  
			TIPO_TRABAJADOR = @TIPO_TRABAJADOR   AND  
			CODIGO_COMPANIA = @COMPANIA  
        
		  SELECT @NRO_MESES_LAB  = CEILING(@MESES_LABORADOS) - 1,  
			 @NRO_MESES_PROM = 12  
            
		  SELECT @NRO_MESES_PROM = ( CASE WHEN @NRO_MESES_LAB >= 12 THEN 12 ELSE @NRO_MESES_LAB END )  
		  SELECT @FECHA    = ( CASE  
					  WHEN @NRO_MESES_LAB >= 12 THEN DATEADD(MM,- 11, CONVERT(DATETIME,'01/'+ @MES_INICIO +'/'+@ANO_INICIO, 103))  
					  ELSE DATEADD(MM,- (@NRO_MESES_PROM - 1), CONVERT(DATETIME,'01/'+ @MES_INICIO +'/'+@ANO_INICIO, 103))  
					 END )  
    
		  SELECT @MES_FIN    = RIGHT('00'+RTRIM(LTRIM(CONVERT(VARCHAR(02),MONTH(@FECHA)))),2),  
			 @ANO_FIN    = CONVERT(VARCHAR(04),YEAR(@FECHA))  
    
		  INSERT INTO #TMP_CONCEPTO  
		 SELECT CONCEPTO   ,  
			 BASE_CONCEPTO  
		  FROM ( SELECT CS.CODIGO_CONCEPTO     AS CONCEPTO   ,  
				CS.CODIGO_BASE_CONCEPTO    AS BASE_CONCEPTO ,  
				I.ANO_PERIODO+I.CODIGO_PERIODO AS PERIODO  
			 FROM CONCEPTO_SUMA CS  
			 INNER JOIN HISTORICO_IMPORTE_ID I ON ( I.CODIGO_CONCEPTO = CS.CODIGO_CONCEPTO )       
			 WHERE CS.CODIGO_SUMA       = '8017'      AND  
			   CS.CODIGO_BASE_CONCEPTO    = @BASE_CONCEPTO    AND  
			   I.CODIGO_COMPANIA      = @COMPANIA     AND  
			   I.TIPO_TRABAJADOR      = @TIPO_TRABAJADOR   AND  
			   I.ANO_PERIODO+I.CODIGO_PERIODO <= @ANO_INICIO+@MES_INICIO AND  
			   I.ANO_PERIODO+I.CODIGO_PERIODO >= @ANO_FIN+@MES_FIN  
			 GROUP BY CS.CODIGO_CONCEPTO  ,  
				CS.CODIGO_BASE_CONCEPTO ,  
				I.ANO_PERIODO    ,  
				I.CODIGO_PERIODO   ) T1  
		  GROUP BY CONCEPTO   ,  
			 BASE_CONCEPTO  
		  HAVING COUNT(PERIODO) > @NRO_MESES_PROM/2  
  
		  --HORAS EXTRAS
		  IF @MESES_MIN_CAL_cur > @MESES_MIN_CAL
		  BEGIN
			  INSERT INTO #TMP_TRABAJADORSUB  
			  SELECT @CODIGO_UNICO  ,  
				 @MESES_LABORADOS ,  
				 @NRO_MESES_PROM ,  
				 T.CONCEPTO   ,  
				 PERIODO    ,  
				 SUM(IMPORTE) AS IMPORTE  
			  FROM (  
			   SELECT C.CONCEPTO AS CONCEPTO ,  
				  P.ANO_PERIODO+P.CODIGO_PERIODO  AS PERIODO,  
					SUM ( ISNULL(DBO.SF_OBTIENE_IMPORTE_CONCEPTO_PRINCIPAL ( @CODIGO_UNICO   ,C.CONCEPTO   ,  
										 @CODIGO_PLANILLA  ,P.CODIGO_PERIODO ,  
										 P.ANO_PERIODO   ,@COMPANIA   ,  
										 @BASE_CONCEPTO   ,@TIPO_TRABAJADOR ),0)+  
					   ISNULL(DBO.SF_OBTIENE_IMPORTE_CONCEPTO_REINTEGRO ( @CODIGO_UNICO   ,C.CONCEPTO   ,  
										 @CODIGO_PLANILLA  ,P.CODIGO_PERIODO ,  
										 P.ANO_PERIODO   ,@COMPANIA   ,  
										 @BASE_CONCEPTO   ,@TIPO_TRABAJADOR ),0) ) AS IMPORTE-- / ( CASE WHEN ISNULL(@NRO_MESES_PROM,0)>0 THEN @NRO_MESES_PROM ELSE 1 END ) AS IMPORTE  
				 FROM #TMP_CONCEPTO C  
				 INNER JOIN PERIODO_PLANILLA P ON ( C.BASE_CONCEPTO = P.CODIGO_BASE_CONCEPTO )  
				 WHERE P.ANO_PERIODO+P.CODIGO_PERIODO <= @ANO_INICIO+@MES_INICIO AND  
				   P.ANO_PERIODO+P.CODIGO_PERIODO >= @ANO_FIN+@MES_FIN  
				 GROUP BY C.CONCEPTO   ,  
					P.CODIGO_PERIODO ,  
					P.ANO_PERIODO     
					) T  
			  WHERE IMPORTE > 0  
			  GROUP BY T.CONCEPTO,  
				 T.PERIODO  
			END
    
		  INSERT INTO #TMP_TRABAJADORSUB  
		  SELECT @CODIGO_UNICO  ,  
			 @MESES_LABORADOS ,  
			 @NRO_MESES_PROM ,  
			 T.CONCEPTO   ,  
			 PERIODO    ,  
			 SUM(IMPORTE) AS IMPORTE  
		  FROM ( 
			 SELECT T.CONCEPTO  AS CONCEPTO,  
				T.PERIODO  AS PERIODO,  
				SUM(IMPORTE) AS IMPORTE  
			 FROM ( SELECT C.CODIGO_CONCEPTO  AS CONCEPTO,  
				   P.ANO_PERIODO+P.CODIGO_PERIODO  AS PERIODO,  
				   SUM ( ISNULL(DBO.SF_OBTIENE_IMPORTE_CONCEPTO_PRINCIPAL ( @CODIGO_UNICO   ,C.CODIGO_CONCEPTO,  
										@CODIGO_PLANILLA  ,P.CODIGO_PERIODO ,  
										P.ANO_PERIODO   ,@COMPANIA   ,  
										@BASE_CONCEPTO   ,@TIPO_TRABAJADOR ),0)+  
					  ISNULL(DBO.SF_OBTIENE_IMPORTE_CONCEPTO_REINTEGRO ( @CODIGO_UNICO   ,C.CODIGO_CONCEPTO,  
										@CODIGO_PLANILLA  ,P.CODIGO_PERIODO ,  
										P.ANO_PERIODO   ,@COMPANIA   ,  
										@BASE_CONCEPTO   ,@TIPO_TRABAJADOR ),0) ) AS IMPORTE-- / ( CASE WHEN ISNULL(@NRO_MESES_PROM,0)>0 THEN @NRO_MESES_PROM ELSE 1 END ) AS IMPORTE  
				FROM CONCEPTO_SUMA C  
				INNER JOIN PERIODO_PLANILLA P ON ( P.CODIGO_BASE_CONCEPTO = C.CODIGO_BASE_CONCEPTO )  
				WHERE C.CODIGO_SUMA       = '8019'      AND   
				  C.CODIGO_BASE_CONCEPTO    = @BASE_CONCEPTO    AND  
				  P.ANO_PERIODO+P.CODIGO_PERIODO <= @ANO_INICIO+@MES_INICIO AND  
				  P.ANO_PERIODO+P.CODIGO_PERIODO >= @ANO_FIN+@MES_FIN  
				GROUP BY C.CODIGO_CONCEPTO ,  
				   P.CODIGO_PERIODO ,  
				   P.ANO_PERIODO ) T  
			 GROUP BY T.CONCEPTO ,  
				T.PERIODO ) T  
		  WHERE IMPORTE > 0  
		  GROUP BY T.CONCEPTO,  
			 T.PERIODO  


	  FETCH C_TRABAJADOR INTO @CODIGO_UNICO , @MESES_MIN_CAL_cur 
	 END  
	 CLOSE C_TRABAJADOR  
	 DEALLOCATE C_TRABAJADOR  
   
	 DECLARE @ANO01 VARCHAR(04), @MES01 VARCHAR(02), @ANO02 VARCHAR(04), @MES02 VARCHAR(02),  
		@ANO03 VARCHAR(04), @MES03 VARCHAR(02), @ANO04 VARCHAR(04), @MES04 VARCHAR(02),  
		@ANO05 VARCHAR(04), @MES05 VARCHAR(02), @ANO06 VARCHAR(04), @MES06 VARCHAR(02),  
		@ANO07 VARCHAR(04), @MES07 VARCHAR(02), @ANO08 VARCHAR(04), @MES08 VARCHAR(02),  
		@ANO09 VARCHAR(04), @MES09 VARCHAR(02), @ANO10 VARCHAR(04), @MES10 VARCHAR(02),  
		@ANO11 VARCHAR(04), @MES11 VARCHAR(02), @CADENA VARCHAR(MAX)  
   
	 SELECT @MES11 = ( CASE WHEN @MES_INICIO = '01' THEN '12' ELSE RIGHT('00'+CONVERT(VARCHAR(02),@MES_INICIO-1 ),2) END )  
	 SELECT @ANO11 = ( CASE WHEN @MES_INICIO = '01' THEN CONVERT(VARCHAR(04),@ANO_INICIO-1 ) ELSE @ANO_INICIO   END )  
	 SELECT @MES10 = ( CASE WHEN @MES11  = '01' THEN '12' ELSE RIGHT('00'+CONVERT(VARCHAR(02),@MES11-1  ),2) END )  
	 SELECT @ANO10 = ( CASE WHEN @MES11  = '01' THEN CONVERT(VARCHAR(04),@ANO02-1 )   ELSE @ANO11    END )  
	 SELECT @MES09 = ( CASE WHEN @MES10  = '01' THEN '12' ELSE RIGHT('00'+CONVERT(VARCHAR(02),@MES10-1  ),2) END )  
	 SELECT @ANO09 = ( CASE WHEN @MES10  = '01' THEN CONVERT(VARCHAR(04),@ANO03-1 )   ELSE @ANO10    END )  
	 SELECT @MES08 = ( CASE WHEN @MES09  = '01' THEN '12' ELSE RIGHT('00'+CONVERT(VARCHAR(02),@MES09-1  ),2) END )  
	 SELECT @ANO08 = ( CASE WHEN @MES09  = '01' THEN CONVERT(VARCHAR(04),@ANO04-1 )   ELSE @ANO09    END )  
	 SELECT @MES07 = ( CASE WHEN @MES08  = '01' THEN '12' ELSE RIGHT('00'+CONVERT(VARCHAR(02),@MES08-1  ),2) END )  
	 SELECT @ANO07 = ( CASE WHEN @MES08  = '01' THEN CONVERT(VARCHAR(04),@ANO05-1 )   ELSE @ANO08    END )  
	 SELECT @MES06 = ( CASE WHEN @MES07  = '01' THEN '12' ELSE RIGHT('00'+CONVERT(VARCHAR(02),@MES07-1  ),2) END )  
	 SELECT @ANO06 = ( CASE WHEN @MES07  = '01' THEN CONVERT(VARCHAR(04),@ANO06-1 )   ELSE @ANO07    END )  
	 SELECT @MES05 = ( CASE WHEN @MES06  = '01' THEN '12' ELSE RIGHT('00'+CONVERT(VARCHAR(02),@MES06-1  ),2) END )  
	 SELECT @ANO05 = ( CASE WHEN @MES06  = '01' THEN CONVERT(VARCHAR(04),@ANO07-1 )   ELSE @ANO06    END )  
	 SELECT @MES04 = ( CASE WHEN @MES05  = '01' THEN '12' ELSE RIGHT('00'+CONVERT(VARCHAR(02),@MES05-1  ),2) END )  
	 SELECT @ANO04 = ( CASE WHEN @MES05  = '01' THEN CONVERT(VARCHAR(04),@ANO08-1 )   ELSE @ANO05    END )  
	 SELECT @MES03 = ( CASE WHEN @MES04  = '01' THEN '12' ELSE RIGHT('00'+CONVERT(VARCHAR(02),@MES04-1  ),2) END )  
	 SELECT @ANO03 = ( CASE WHEN @MES04  = '01' THEN CONVERT(VARCHAR(04),@ANO09-1 )   ELSE @ANO04    END )  
	 SELECT @MES02 = ( CASE WHEN @MES03  = '01' THEN '12' ELSE RIGHT('00'+CONVERT(VARCHAR(02),@MES03-1  ),2) END )  
	 SELECT @ANO02 = ( CASE WHEN @MES03  = '01' THEN CONVERT(VARCHAR(04),@ANO10-1 )   ELSE @ANO03    END )  
	 SELECT @MES01 = ( CASE WHEN @MES02  = '01' THEN '12' ELSE RIGHT('00'+CONVERT(VARCHAR(02),@MES02-1  ),2) END )  
	 SELECT @ANO01 = ( CASE WHEN @MES02  = '01' THEN CONVERT(VARCHAR(04),@ANO11-1 )   ELSE @ANO02    END )  
    
	 SELECT T.CODIGO_UNICO ,  
		T.MATRICULA  ,  
		LTRIM(RTRIM(T.APELLIDO_PATERNO)) AS APELLIDO_PATERNO ,  
		LTRIM(RTRIM(T.APELLIDO_MATERNO)) AS APELLIDO_MATERNO ,  
		LTRIM(RTRIM(T.NOMBRE))    AS NOMBRE    ,  
		TIEMPO_LAB_MESES      AS TIEMPO_LABORADO ,  
		S.CONCEPTO        AS CODIGO_CONCEPTO ,  
		DBO.SF_OBTENER_NOMBRE_CONCEPTO (S.CONCEPTO,@BASE_CONCEPTO,@COMPANIA,@ANO_INICIO,@MES_INICIO) AS NOMBRE_CONCEPTO ,  
		SUM(( CASE PERIODO WHEN @ANO01+@MES01    THEN IMPORTE ELSE 0 END ))/TIEMPO_PROM AS MES01,  
		SUM(( CASE PERIODO WHEN @ANO02+@MES02    THEN IMPORTE ELSE 0 END ))/TIEMPO_PROM AS MES02,  
		SUM(( CASE PERIODO WHEN @ANO03+@MES03    THEN IMPORTE ELSE 0 END ))/TIEMPO_PROM AS MES03,  
		SUM(( CASE PERIODO WHEN @ANO04+@MES04    THEN IMPORTE ELSE 0 END ))/TIEMPO_PROM AS MES04,  
		SUM(( CASE PERIODO WHEN @ANO05+@MES05    THEN IMPORTE ELSE 0 END ))/TIEMPO_PROM AS MES05,  
		SUM(( CASE PERIODO WHEN @ANO06+@MES06    THEN IMPORTE ELSE 0 END ))/TIEMPO_PROM AS MES06,  
		SUM(( CASE PERIODO WHEN @ANO07+@MES07    THEN IMPORTE ELSE 0 END ))/TIEMPO_PROM AS MES07,  
		SUM(( CASE PERIODO WHEN @ANO08+@MES08    THEN IMPORTE ELSE 0 END ))/TIEMPO_PROM AS MES08,  
		SUM(( CASE PERIODO WHEN @ANO09+@MES09    THEN IMPORTE ELSE 0 END ))/TIEMPO_PROM AS MES09,  
		SUM(( CASE PERIODO WHEN @ANO10+@MES10    THEN IMPORTE ELSE 0 END ))/TIEMPO_PROM AS MES10,  
		SUM(( CASE PERIODO WHEN @ANO11+@MES11    THEN IMPORTE ELSE 0 END ))/TIEMPO_PROM AS MES11,  
		SUM(( CASE PERIODO WHEN @ANO_INICIO+@MES_INICIO THEN IMPORTE ELSE 0 END ))/TIEMPO_PROM AS MES12,  
		SUM(IMPORTE)/TIEMPO_PROM,  
		DBO.SF_OBTENER_DATOS_CIA(@COMPANIA,'0') AS NOMBRE_COMPANIA  
	 FROM #TMP_TRABAJADORSUB S  
	 INNER JOIN TRABAJADOR T ON ( S.CODIGO_UNICO = T.CODIGO_UNICO )  
	 GROUP BY T.CODIGO_UNICO  ,  
		T.MATRICULA   ,  
		T.APELLIDO_PATERNO,  
		T.APELLIDO_MATERNO,  
		T.NOMBRE    ,  
		S.CONCEPTO   ,  
		TIEMPO_LAB_MESES ,  
		TIEMPO_PROM  
	 ORDER BY 3,4,5  
 END

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_reporte_capacitacion')
BEGIN
  DROP PROCEDURE [dbo].[sp_reporte_capacitacion]
END
GO

CREATE procedure sp_reporte_capacitacion (
@compania  char(02))
as

Select 	t.matricula,
	rtrim(t.apellido_paterno)+' '+rtrim(t.apellido_materno)+', '+rtrim(nombre) nombres, 
	e.codigo_curso, 
	( Select descripcion_curso From Tbl_curso  
          Where  situacion_registro = 'A' and curso = e.codigo_curso ) desc_curso, 
	e.fecha_inicio, 
	e.fecha_termino, 
	e.duracion,  
	( Select descripcion_registro From Tbl_detalle_tabla Where codigo_tabla = '0003' and
          codigo_registro = e.tipo_duracion and situacion_registro <> 'E' ) tipo_duracion,
	''   , 'I' tipo,
	t. tipo_trabajador
From   	Estudio e, Trabajador t
Where	e.codigo_unico = t.codigo_unico and
	t.compania = @compania and
	t.indicador_planilla = '1'   

Union
Select 	t.matricula,
	rtrim(t.apellido_paterno)+' '+rtrim(t.apellido_materno)+', '+rtrim(nombre) nombres, 
	o.codigo_curso,
	( Select descripcion_registro From Tbl_detalle_tabla Where codigo_tabla = '0089' and 
          situacion_registro <> 'E'and codigo_registro = o.codigo_curso ) desc_curso,
 	o.fecha_inicio,
	o.fecha_termino,
	o.duracion_estudio, 
	( Select descripcion_registro From Tbl_detalle_tabla Where codigo_tabla = '0003' and
          codigo_registro = o.tipo_duracion and situacion_registro <> 'E' ) tipo_duracion,   
	o.institucion_donde_estudio, 'E' tipo,
	t. tipo_trabajador
From 	Otro_estudio o, Trabajador t
Where	o.codigo_unico = t.codigo_unico and
	t.compania = @compania  and
	t.indicador_planilla = '1'   
Order by 1 , 10 desc, 3
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_REPORTE_CONCEPTOS_POR_PERIODO_D')
BEGIN
  DROP PROCEDURE [dbo].[SP_REPORTE_CONCEPTOS_POR_PERIODO_D]
END
GO


/*
SP_REPORTE_CONCEPTOS_POR_PERIODO_D	'01','USER01','14-MENSUAL','00000007','01','E','01','00','0000','1200'
*/

CREATE PROCEDURE [DBO].[SP_REPORTE_CONCEPTOS_POR_PERIODO_D]
(	@COMPANIA_USUARIO		CHAR(02),
	@USUARIO					CHAR(10),
	@CODIGO_PROCESO		CHAR(20),
	@ESTACION_ID			CHAR(08),
	
	@COMPANIA				CHAR(02),
	@TIPO_TRABAJADOR		CHAR(01),
	@CODIGO_PLANILLA		CHAR(02),
	@CODIGO_PERIODO		CHAR(02),
	@ANO_PERIODO			CHAR(04),
	@CODIGO_CONCEPTO		CHAR(04)
)
AS
	DECLARE	@V_ANO_VIGENTE		CHAR(04),
				@V_MES_VIGENTE		CHAR(02),
				@V_ANO_PERIODO		CHAR(04),
				@V_MES_PERIODO		CHAR(02),
				@V_NOMBRE_CIA		VARCHAR(50),
				@V_RUC_CIA			VARCHAR(15),
				@V_DOMICILIO_CIA	VARCHAR(80),
				@V_BASE_CONCEPTO	CHAR(02)
	
	
	SELECT	@V_MES_VIGENTE	=	[DBO].[SF_OBTENER_PERIODO_VIGENTE](@COMPANIA,@TIPO_TRABAJADOR,'0'),
				@V_ANO_VIGENTE	=	[DBO].[SF_OBTENER_PERIODO_VIGENTE](@COMPANIA,@TIPO_TRABAJADOR,'1')
	
	SELECT	@V_MES_PERIODO		=	(	CASE	@CODIGO_PERIODO
													WHEN '00'		THEN	@V_MES_VIGENTE
													ELSE	@CODIGO_PERIODO
												END	),
				@V_ANO_PERIODO		=	(	CASE	@ANO_PERIODO
													WHEN	'0000'	THEN	@V_ANO_VIGENTE
													ELSE	@ANO_PERIODO
												END	),
				@V_BASE_CONCEPTO	=	(	SELECT CODIGO_BASE_CONCEPTO
												FROM TBL_TIPO_TRABAJADOR
												WHERE COMPANIA				=	@COMPANIA			AND
														TIPO_TRABAJADOR	=	@TIPO_TRABAJADOR	)
	
	SELECT	@V_NOMBRE_CIA		=	RTRIM(LTRIM(NOMBRE_CIA)),
				@V_RUC_CIA			=	RTRIM(LTRIM(NUMERO_RUC_CIA)),
				@V_DOMICILIO_CIA	=	RTRIM(LTRIM(DOMICILIO_FISCAL_CIA))
	FROM TBL_COMPANIA
	WHERE	CODIGO_CIA	=	@COMPANIA
	

	SELECT	T.MATRICULA,
				RTRIM(LTRIM(T.APELLIDO_PATERNO))+' ' +
				RTRIM(LTRIM(T.APELLIDO_MATERNO))+', '+
				RTRIM(LTRIM(T.NOMBRE))	AS	NOMBRE,
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'01',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'0'),0)+
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'01',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'1'),0)	AS	ENERO,
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'02',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'0'),0)+
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'02',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'1'),0)	AS	FEBRERO,
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'03',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'0'),0)+
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'03',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'1'),0)	AS	MARZO,
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'04',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'0'),0)+
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'04',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'1'),0)	AS	ABRIL,
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'05',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'0'),0)+
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'05',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'1'),0)	AS	MAYO,
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'06',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'0'),0)+
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'06',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'1'),0)	AS	JUNIO,
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'07',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'0'),0)+
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'07',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'1'),0)	AS	JULIO,
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'08',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'0'),0)+
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'08',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'1'),0)	AS	AGOSTO,
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'09',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'0'),0)+
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'09',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'1'),0)	AS	SETIEMBRE,
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'10',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'0'),0)+
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'10',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'1'),0)	AS	OCTUBRE,
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'11',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'0'),0)+
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'11',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'1'),0)	AS	NOVIEMBRE,
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'12',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'0'),0)+
				ISNULL([DBO].[SF_OBTENER_IMPORTES] (T.CODIGO_UNICO,T.COMPANIA,@CODIGO_PLANILLA,@CODIGO_CONCEPTO,'12',@V_ANO_PERIODO,T.TIPO_TRABAJADOR,'1'),0)	AS	DICIEMBRE,
				@V_MES_PERIODO					AS	MES_REPORTE,
				@V_ANO_PERIODO					AS	ANO_REPORTE,
				T.FECHA_INGRESO_COMPANIA,
				@V_DOMICILIO_CIA				AS	DIRECCION_CIA,
				@V_RUC_CIA						AS	RUC_CIA,
				[DBO].[SF_OBTENER_NOMBRE_CONCEPTO](@CODIGO_CONCEPTO,@V_BASE_CONCEPTO,@COMPANIA,@V_ANO_PERIODO,@V_MES_PERIODO)	AS	NOMBRE_CONCEPTO,
				@V_NOMBRE_CIA					AS	NOMBRE_COMPANIA
	FROM TRABAJADOR T
	INNER JOIN FILTRO_PROCESO	F	ON  (	T.CODIGO_UNICO = F.CODIGO_UNICO )
	WHERE	T.COMPANIA			=	@COMPANIA			AND
			T.TIPO_TRABAJADOR	=	@TIPO_TRABAJADOR	AND
			F.CODIGO_PROCESO	=	@CODIGO_PROCESO	AND
			F.USUARIO			=	@USUARIO				AND
			F.ESTACION_ID		=	@ESTACION_ID		AND
			F.COMPANIA			=	@COMPANIA_USUARIO
	ORDER BY 2

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_REPORTE_CUMPLEAñOS')
BEGIN
  DROP PROCEDURE [dbo].[SP_REPORTE_CUMPLEAñOS]
END
GO

/*
EXEC SP_REPORTE_CUMPLEAÑOS	'%','01'
*/

  
CREATE PROCEDURE [DBO].[SP_REPORTE_CUMPLEAÑOS]
(	@MES			VARCHAR(02)	,
	@COMPANIA	CHAR(02),
	@UNIDAD_FUNCIONAL CHAR(8),
	@IND_SUBUNIDAD CHAR(1) = 'S' 
)  
AS
	DECLARE	@DESCRIPCION_CIA	VARCHAR(50),
				@V_MES				VARCHAR(02)
	EXECUTE SP_FILTRO_RESTRICCION 'RPT_CUMPL'
	
	SELECT	@DESCRIPCION_CIA = LTRIM(RTRIM(NOMBRE_CIA))
	FROM TBL_COMPANIA
	WHERE	CODIGO_CIA	=	@COMPANIA
	
	IF	@MES	<>	'%'	SET @V_MES	=	CONVERT(VARCHAR(02),CONVERT(INT,@MES))
	ELSE	SET @V_MES	=	@MES
	
	SELECT	T.MATRICULA	,
				DATEPART(DD,T.FECHA_NACIMIENTO)																	AS	DIA_NACIMIENTO				,
				RIGHT('00'+CONVERT(VARCHAR(2),DATEPART(MM,T.FECHA_NACIMIENTO)),2)						AS	MES_NACIMIENTO				,
				T.FECHA_NACIMIENTO																					AS	FECHA_NACIMIENTO			,
				DBO.SF_OBTENER_UBICACION					(T.COMPANIA,T.UBICACION_FISICA)				AS	UBICACION_FISICA			,
				DBO.SF_OBTENER_UNIDAD_FUNCIONAL			(T.COMPANIA,T.UNIDAD_FUNCIONAL_ORGANICA)	AS	NOMBRE_UNIDAD				,
				UPPER(	LTRIM(RTRIM(T.APELLIDO_PATERNO))	+	' '	+
							LTRIM(RTRIM(T.APELLIDO_MATERNO))	+	',	'	+
							LTRIM(RTRIM(T.NOMBRE				))	)													AS	NOMBRES						,
				T.TIPO_TRABAJADOR																						AS	TIPO_TRABAJADOR			,
				DBO.SF_OBTENER_NOMBRE_TIPO_TRABAJADOR	(T.TIPO_TRABAJADOR,T.COMPANIA,'A')			AS	DESCRIPCION_TRABAJADOR	,
				T.FECHA_INGRESO_COMPANIA																			AS	FECHA_INGRESO_COMPANIA	,
				DBO.SF_OBTENER_PUESTO_COMPANIA			(T.COMPANIA,T.PUESTO_ORGANICA,'0')			AS	PUESTO						,
				DBO.SF_OBTENER_SUCURSAL						(T.COMPANIA,T.SUCURSAL,'0')					AS	SUCURSAL						,
				@DESCRIPCION_CIA																						AS	NOMBRE_COMPANIA
	FROM	TRABAJADOR T
	INNER JOIN	FILTRO_RESTRICCION FR ON	(	FR.CODIGO_UNICO	=	T.CODIGO_UNICO	)
	,		(SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )) AS UN
	WHERE	T.COMPANIA								=		@COMPANIA	AND
			DATEPART(MM,T.FECHA_NACIMIENTO)	LIKE	@V_MES		AND
			T.SITUACION_TRABAJADOR				=		'A'			AND
			FR.ID_REPORTE							=		'RPT_CUMPL'	AND
			FR.SPID									=		@@SPID
	AND 			ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL
	ORDER BY 7, 5


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_reporte_estudios_externos')
BEGIN
  DROP PROCEDURE [dbo].[sp_reporte_estudios_externos]
END
GO



CREATE procedure [dbo].[sp_reporte_estudios_externos]
(	@compania		char(02)
)
AS
	EXECUTE	sp_filtro_restriccion 'RPT_EST_EXT'

	SELECT	t.matricula			,
				nombre				=	UPPER(	LTRIM(RTRIM(t.apellido_paterno))	+	' '	+
														LTRIM(RTRIM(t.apellido_materno))	+	', '	+
														LTRIM(RTRIM(t.nombre))	)	,
				unidad_funcional	=	(	SELECT	k.nombre_unidad_funcional
												FROM	Tbl_unidad_funcional k
												WHERE	k.unidad_funcional	=	t.unidad_funcional_organica	AND
														k.compania				=	t.compania							)	,
				puesto				=	(	SELECT	k.descripcion_puesto
												FROM	Tbl_puesto_compania k
												WHERE	k.puesto		=	t.puesto_organica and
														k.compania	=	t.compania )	,
				g.codigo_curso		,
				nombre_curso		=	(	SELECT	descripcion_registro
												FROM	Tbl_detalle_tabla
												WHERE	codigo_tabla		=	'0089'			AND
														codigo_registro	=	g.codigo_curso )	,
				g.fecha_inicio					,
				g.fecha_termino				,
				g.institucion_donde_estudio,
				g.grado_obtenido
	FROM	Trabajador t
	INNER JOIN	Otro_estudio			g	ON	(	t.codigo_unico	=	g.codigo_unico		)
	INNER JOIN	filtro_restriccion	FR ON	(	t.codigo_unico	=	fr.codigo_unico	)
	WHERE		t.compania				=	@compania		AND
				t.indicador_planilla	=	'1'				AND
				fr.id_reporte			=	'RPT_EST_EXT'	AND
				fr.spid					=	@@SPID
	ORDER BY 2


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_reporte_inconsistencias_distribucion')
BEGIN
  DROP PROCEDURE [dbo].[sp_reporte_inconsistencias_distribucion]
END
GO

CREATE procedure dbo.sp_reporte_inconsistencias_distribucion
(	@compania_usuario      	char(02),  
	@usuario               	char(10),  
	@codigo_proceso        	char(20),  
	@estacion_id           	char(30),  
	@compania 		char(02), 
	@tipo_trabajador 	char(01)
)

as 

-- Previamente se debe ejecutar la actualizacion de centros de costo, cuentas contables y cuentas auxliares 
-- Incoherencias en la Distribucion por centros de costo 

create table #incoherencias
( 	tipo		int, 
	matricula 	char(10), 
	nombre		char(80),
	descripcion	varchar(255)
)

--1. Que personas activas no tienen distribucion.
INSERT INTO #incoherencias
Select 	1, matricula, rtrim(apellido_paterno) + ' ' + rtrim(apellido_materno) + ' ' + rtrim(nombre), 'NO TIENE REGISTRADA UNA DISTRIBUCION POR CENTRO DE COSTO'
from 	Trabajador 
where 	indicador_planilla = '1'  and codigo_unico not in (select codigo_unico from Distr_ccosto_trabajador) 
	and ubicacion_fisica <> '04' -- add x JAZ a req de YVARAS
--	tipo_trabajador = @tipo_trabajador and 
	and compania 	= @compania 


--2.- No existen cuentas contables en la distribucion o no estan activas 
INSERT INTO #incoherencias
select 2, t.matricula, rtrim(apellido_paterno) + ' ' + rtrim(apellido_materno) + ' ' + rtrim(nombre), 'LA CUENTA CONTABLE: ' + d.codigo_cuenta_contable +  ' ASIGNADA NO EXISTE' 
from Distr_ccosto_trabajador d, Trabajador t
where t.codigo_unico = d.codigo_unico and codigo_cuenta_contable not in (select codigo_cuenta_contable from Cuenta_contable) and 
--	t.tipo_trabajador 	= @tipo_trabajador and 
	t.compania 		= @compania and 
	indicador_planilla = '1'  

INSERT INTO #incoherencias
select 3, t.matricula, rtrim(apellido_paterno) + ' ' + rtrim(apellido_materno) + ' ' + rtrim(nombre), 'LA CUENTA CONTABLE: ' + d.codigo_cuenta_contable +  ' ASIGNADA NO ESTA ACTIVA' from Distr_ccosto_trabajador d, Trabajador t
where t.codigo_unico = d.codigo_unico and codigo_cuenta_contable in (select codigo_cuenta_contable from Cuenta_contable where situacion_registro <> '1') AND 
--	t.tipo_trabajador 	= @tipo_trabajador and 
	t.compania 		= @compania and
	indicador_planilla = '1'  

INSERT INTO #incoherencias
select 3, t.matricula, rtrim(apellido_paterno) + ' ' + rtrim(apellido_materno) + ' ' + rtrim(nombre), 'LA CUENTA CONTABLE: ' + d.codigo_cuenta_contable  + ' ASIGNADA NO ES DIRECTA' from Distr_ccosto_trabajador d, Trabajador t
where t.codigo_unico = d.codigo_unico and codigo_cuenta_contable in (select codigo_cuenta_contable from Cuenta_contable where acc_direct <> '1') AND 
--	t.tipo_trabajador 	= @tipo_trabajador and 
	t.compania 		= @compania and 
	indicador_planilla = '1'  

--3.- Existen centros de costo en la distribucion q no existen o no estan activos ???
INSERT INTO #incoherencias
select 4, t.matricula, rtrim(apellido_paterno) + ' ' + rtrim(apellido_materno) + ' ' + rtrim(nombre), 'EL CENTRO DE COSTO: ' + d.centro_costo + ' ASIGNADO NO EXISTE' 
from Distr_ccosto_trabajador d, Trabajador t
where 	t.codigo_unico = d.codigo_unico and centro_costo not in (select centro_costo from Tbl_centro_costo) and 
--	t.tipo_trabajador 	= @tipo_trabajador and 
	t.compania 		= @compania and 
	indicador_planilla = '1'  

INSERT INTO #incoherencias
select 5, t.matricula, rtrim(apellido_paterno) + ' ' + rtrim(apellido_materno) + ' ' + rtrim(nombre), 'CENTRO DE COSTO: ' + d.centro_costo + ', NO ACTIVO - ' + 
	( Select case tipo_financiamiento 
		When 1 then 'UNRESTRICTED'
		When 2 then 'RESTRICTED'
		End 
	  From Tbl_centro_costo cc where cc.centro_costo = d.centro_costo) 
from Distr_ccosto_trabajador d, Trabajador t
where t.codigo_unico = d.codigo_unico and centro_costo in (select centro_costo from Tbl_centro_costo where situacion_centro_costo <> 'A') and 
--	t.tipo_trabajador 	= @tipo_trabajador and 
	t.compania 		= @compania and 
	indicador_planilla = '1'  


--4.- Id 
INSERT INTO #incoherencias
select 6, t.matricula, rtrim(apellido_paterno) + ' ' + rtrim(apellido_materno) + ' ' + rtrim(nombre), 'LA CUENTA AUXILIAR: ' + convert(varchar(5), d.codigo_cuenta_auxiliar) + ' ASIGNADA NO EXISTE' from Distr_ccosto_trabajador d, Trabajador t
where t.codigo_unico = d.codigo_unico and codigo_cuenta_auxiliar not in (select codigo_cuenta_auxiliar from m_detalle_types_id) AND 
--	t.tipo_trabajador 	= @tipo_trabajador and 
	t.compania 		= @compania and 
	indicador_planilla = '1'  

INSERT INTO #incoherencias
select 7, t.matricula, rtrim(apellido_paterno) + ' ' + rtrim(apellido_materno) + ' ' + rtrim(nombre), 'LA CUENTA AUXILIAR: ' + convert(varchar(5), d.codigo_cuenta_auxiliar) + ' ASIGNADA NO ESTA ACTIVA' from Distr_ccosto_trabajador d, Trabajador t
where t.codigo_unico = d.codigo_unico and codigo_cuenta_auxiliar in (select codigo_cuenta_auxiliar from m_detalle_types_id where situacion <> '1') AND 
--	t.tipo_trabajador 	= @tipo_trabajador and 
	t.compania 		= @compania and 
	indicador_planilla = '1'  


--5.- Condiciones de la cuenta contable 
INSERT INTO #incoherencias
select 8, t.matricula, rtrim(apellido_paterno) + ' ' + rtrim(apellido_materno) + ' ' + rtrim(nombre), 'TIENE ASIGNADO UN CENTRO DE COSTO Y LA CUENTA CONTABLE NO LO REQUIERE' from Distr_ccosto_trabajador d, Trabajador t
where t.codigo_unico = d.codigo_unico and 
	centro_costo is not null and codigo_cuenta_contable in (select codigo_cuenta_contable from Cuenta_contable where acc_ccenter = '0') and  
--	t.tipo_trabajador 	= @tipo_trabajador and 
	t.compania 		= @compania and 
	indicador_planilla = '1'  


INSERT INTO #incoherencias
select 9, t.matricula, rtrim(apellido_paterno) + ' ' + rtrim(apellido_materno) + ' ' + rtrim(nombre), 'TIENE ASIGNADO UNA CUENTA AUXLIAR Y LA CUENTA CONTABLE NO LO REQUIERE' from Distr_ccosto_trabajador d, Trabajador t
where t.codigo_unico = d.codigo_unico and 
	codigo_cuenta_auxiliar is not null and codigo_cuenta_contable in (select codigo_cuenta_contable from Cuenta_contable where tyi_id = '0') and  
--	t.tipo_trabajador 	= @tipo_trabajador and 
	t.compania 		= @compania and 
	indicador_planilla = '1'  

INSERT INTO #incoherencias
select 10, t.matricula, rtrim(apellido_paterno) + ' ' + rtrim(apellido_materno) + ' ' + rtrim(nombre), 'NO TIENE ASIGNADO UN CENTRO DE COSTO Y LA CUENTA CONTABLE LO REQUIERE' from Distr_ccosto_trabajador d, Trabajador t
where t.codigo_unico = d.codigo_unico and 
	centro_costo is null and codigo_cuenta_contable in (select codigo_cuenta_contable from Cuenta_contable where acc_ccenter = '1') and  
--	t.tipo_trabajador 	= @tipo_trabajador and 
	t.compania 		= @compania and 
	indicador_planilla = '1'  


INSERT INTO #incoherencias
select 11, t.matricula, rtrim(apellido_paterno) + ' ' + rtrim(apellido_materno) + ' ' + rtrim(nombre), 'NO TIENE ASIGNADO UNA CUENTA AUXLIAR Y LA CUENTA CONTABLE LO REQUIERE' from Distr_ccosto_trabajador d, Trabajador t
where t.codigo_unico = d.codigo_unico and 
	codigo_cuenta_auxiliar is null and codigo_cuenta_contable in (select codigo_cuenta_contable from Cuenta_contable where tyi_id is not null) and  
--	t.tipo_trabajador 	= @tipo_trabajador and 
	t.compania 		= @compania and 
	indicador_planilla = '1'  


--5.- Condiciones deL Centro de costo
INSERT INTO #incoherencias
select 12, t.matricula, rtrim(apellido_paterno) + ' ' + rtrim(apellido_materno) + ' ' + rtrim(nombre), 'NO TIENE ASIGNADA UNA CUENTA AUXILIAR Y EL CENTRO DE COSTO LO REQUIERE' from Distr_ccosto_trabajador d, Trabajador t
where t.codigo_unico = d.codigo_unico and 
	codigo_cuenta_auxiliar is null and centro_costo = '71' and  
--	t.tipo_trabajador 	= @tipo_trabajador and 
	t.compania 		= @compania and 
	indicador_planilla = '1'  


select * from #incoherencias 
order by 1, 2

drop table #incoherencias 



SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_reporte_ingresos_proyectos')
BEGIN
  DROP PROCEDURE [dbo].[sp_reporte_ingresos_proyectos]
END
GO

CREATE procedure dbo.sp_reporte_ingresos_proyectos
(
@compania_usuario	char(02),  
@usuario			char(10),  
@codigo_proceso		char(20),  
@estacion_id		char(30),  
@compania			char(02),
@planilla			char(02),
@base_concepto		char(02)
)
as

select	i.codigo_concepto,
		(select RTRIM(c.nombre_concepto) from Concepto c
		where c.codigo_concepto = i.codigo_concepto and
				c.codigo_base_concepto =   @base_concepto ) as nombre_concepto,
		(select rtrim(descripcion_corta_tipo_trab) from Tbl_tipo_trabajador	k	
		 where k.compania = t.compania and
				k.tipo_trabajador = t.tipo_trabajador ) as proyecto,
		sum(i.importe_concepto)
from	Importe_id i inner join Trabajador t
on		i.codigo_unico = t.codigo_unico and
		i.tipo_trabajador = t.tipo_trabajador and
		i.codigo_compania = t.compania
where	i.codigo_compania = @compania and
		i.codigo_planilla = @planilla and
		i.importe_concepto > 0 and
		i.codigo_concepto in (	select	codigo_concepto from Concepto_planilla
								where	codigo_planilla = @planilla and
										codigo_base_concepto = @base_concepto and
										indicador_figura_boleta = '1' and
										(codigo_concepto like '1%' or codigo_concepto like '2%' ))
group by t.compania, t.tipo_trabajador, i.codigo_concepto									
order by 1	

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_REPORTE_INGRESO_PERSONAL')
BEGIN
  DROP PROCEDURE [dbo].[SP_REPORTE_INGRESO_PERSONAL]
END
GO



/*
SP_REPORTE_INGRESO_PERSONAL '01','01/01/2010','31/12/2014','00000000','S'
*/

CREATE PROCEDURE [dbo].[SP_REPORTE_INGRESO_PERSONAL]
(	@COMPANIA		CHAR(02),
	 @FECHA_INICIO	DATETIME,
	 @FECHA_FIN		DATETIME,
	@UNIDAD_FUNCIONAL CHAR(8),
	@IND_SUBUNIDAD CHAR(1) = 'S' 
)
AS
	DECLARE	@DESCRIPCION_CIA	VARCHAR(50)	
	EXECUTE SP_FILTRO_RESTRICCION 'RPT_ING_PERS','T'
	SET @DESCRIPCION_CIA	=	DBO.SF_OBTENER_DATOS_CIA(@COMPANIA,'0')
	
	SELECT	T.CODIGO_UNICO					AS	CODIGO_UNICO	, 
				T.FECHA_INGRESO_COMPANIA	AS	FECHA_INGRESO	,
				MAX(T.CODIGO_PERIODO)		AS	CODIGO_PERIODO	,
				MAX(T.ANO_PERIODO)			AS	ANO_PERIODO
	INTO  #TEMP_TRABAJADOR
	FROM  HISTORICO_BOLETA_ID T
	INNER JOIN FILTRO_RESTRICCION FR ON ( T.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
	,		(SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )) AS UN 
	WHERE	T.CODIGO_COMPANIA				=	@COMPANIA		AND
			T.FECHA_INGRESO_COMPANIA	<=	@FECHA_FIN		AND
			T.FECHA_INGRESO_COMPANIA	>=	@FECHA_INICIO	AND
			FR.ID_REPORTE					=	'RPT_ING_PERS'	AND
			FR.SPID							=	@@SPID
	AND 			ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL
	GROUP	BY	T.CODIGO_UNICO				,
				T.FECHA_INGRESO_COMPANIA

	--AHORA PARA LOS TRABAJADORES QUE SOLO ESTAN EN LA TABLA TRABAJADOR
	SELECT	T.CODIGO_UNICO				,
				T.FECHA_INGRESO_COMPANIA
	INTO	#TEMP_TRABAJADOR_ACTUAL
	FROM TRABAJADOR	T
	INNER JOIN FILTRO_RESTRICCION FR ON ( T.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
	,		(SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )) AS UN 
	WHERE	T.CODIGO_UNICO					NOT IN	(	SELECT	CODIGO_UNICO
																FROM	#TEMP_TRABAJADOR	)	AND
			T.COMPANIA						=			@COMPANIA		AND
			T.FECHA_INGRESO_COMPANIA	<=			@FECHA_FIN		AND
			T.FECHA_INGRESO_COMPANIA	>=			@FECHA_INICIO	AND
			FR.ID_REPORTE					=			'RPT_ING_PERS'	AND
			FR.SPID							=			@@SPID
			AND 			ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL

	SELECT	HB.MATRICULA																								AS	MATRICULA							,
				UPPER(	LTRIM(RTRIM(HB.APELLIDO_PATERNO))	+	' '	+
							LTRIM(RTRIM(HB.APELLIDO_MATERNO))	+	',	'	+
							LTRIM(RTRIM(HB.NOMBRE))					)													AS	NOMBRES								,
				HB.TIPO_TRABAJADOR																						AS	TIPO_TRABAJADOR					,
				HB.CODIGO_PERIODO_ACTUALIZACION																		AS	MES_PERIODO_ACTUALIZACION		,
				HB.ANO_PERIODO_ACTUALIZACION																			AS	ANO_PERIODO_ACTUALIZACION		,
				HB.FECHA_INGRESO_COMPANIA																				AS	FECHA_INGRESO_COMPANIA			,
				HB.SITUACION_TRABAJADOR																					AS	SITUACION_TRABAJADOR				,
				HB.UNIDAD_FUNCIONAL_ORGANICA																			AS	UNIDAD_FUNCIONAL					,
				DBO.SF_OBTENER_UNIDAD_FUNCIONAL	(HB.CODIGO_COMPANIA,HB.UNIDAD_FUNCIONAL_ORGANICA)	AS	NOMBRE_UNIDAD						,
				HB.TIPO_CONTRATO																							AS	TIPO_CONTRATO						,
				DBO.SF_OBTENER_TIPO_CONTRATO		(HB.CODIGO_COMPANIA,HB.TIPO_CONTRATO,'0')				AS	NOMBRE_CONTRATO					,
				HB.UBICACION_FISICA																						AS	UBICACION_FISICA					, 
				( CASE WHEN ISNULL(HB.CODIGO_AFP,'X') = 'X' THEN '00' ELSE HB.CODIGO_AFP END)			AS	CODIGO_AFP							, 
				HB.CODIGO_COMPANIA																						AS	CODIGO_COMPANIA					,
				DBO.SF_OBTENER_UBICACION			(HB.CODIGO_COMPANIA,HB.UBICACION_FISICA)				AS	NOMBRE_UBICACION					,
				HB.INDICADOR_PLANILLA																					AS	INDICADOR_PLANILLA				,
				HB.SUELDO_BASICO																							AS	SUELDO_BASICO						,
				DBO.SF_OBTENER_CAT_JERARQ			(HB.CODIGO_COMPANIA,HB.CATEGORIA_JERARQUICA)			AS	NOMBRE_CATEGORIA_JERARQUICA	,
				DBO.SF_OBTENER_PUESTO_COMPANIA	(HB.CODIGO_COMPANIA,HB.PUESTO_ORGANICO,'0')			AS	NOMBRE_PUESTO						,
				HB.CODIGO_SPP																								AS	CODIGO_SPP							,
				DBO.SF_OBTENER_SUCURSAL				(HB.CODIGO_COMPANIA,HB.SUCURSAL,'0')					AS	NOMBRE_SUCURSAL					,
				HB.SEXO																										AS	SEXO									,
				(	SELECT	MAX(FECHA_INICIO)
					FROM	CONTRATO
					WHERE	CODIGO_UNICO			=	HB.CODIGO_UNICO	AND
							SITUACION_CONTRATO	=	'A'					)											AS	FECHA_INICIO_CONTRATO			,
				(	SELECT	MAX(FECHA_TERMINO)
					FROM	CONTRATO
					WHERE	CODIGO_UNICO			=	HB.CODIGO_UNICO	AND
							SITUACION_CONTRATO	=	'A'					)											AS	FECHA_TERMINO_CONTRATO			,
				HB.INDICADOR_RESTRINGIDO																				AS	INDICADOR_RESTRINGIDO			,
				@DESCRIPCION_CIA																							AS	NOMBRE_COMPANIA
	FROM HISTORICO_BOLETA_ID HB
	INNER JOIN #TEMP_TRABAJADOR TT	ON	(	HB.CODIGO_UNICO	=	TT.CODIGO_UNICO	AND
														HB.CODIGO_PERIODO	=	TT.CODIGO_PERIODO	AND
														HB.ANO_PERIODO		=	TT.ANO_PERIODO		)
	WHERE	HB.CODIGO_COMPANIA			=	@COMPANIA		AND
			HB.FECHA_INGRESO_COMPANIA	<=	@FECHA_FIN		AND
			HB.FECHA_INGRESO_COMPANIA	>=	@FECHA_INICIO
	UNION
	SELECT	HB.MATRICULA																								AS	MATRICULA							,
				UPPER(	LTRIM(RTRIM(HB.APELLIDO_PATERNO))	+	' '	+
							LTRIM(RTRIM(HB.APELLIDO_MATERNO))	+	',	'	+
							LTRIM(RTRIM(HB.NOMBRE))					)													AS	NOMBRES								,
				HB.TIPO_TRABAJADOR																						AS	TIPO_TRABAJADOR					,
				HB.CODIGO_PERIODO_ACTUALIZACION																		AS	MES_PERIODO_ACTUALIZACION		,
				HB.ANO_PERIODO_ACTUALIZACION																			AS	ANO_PERIODO_ACTUALIZACION		,
				HB.FECHA_INGRESO_COMPANIA																				AS	FECHA_INGRESO_COMPANIA			,
				HB.SITUACION_TRABAJADOR																					AS	SITUACION_TRABAJADOR				,
				HB.UNIDAD_FUNCIONAL_ORGANICA																			AS	UNIDAD_FUNCIONAL					,
				DBO.SF_OBTENER_UNIDAD_FUNCIONAL	(HB.COMPANIA,HB.UNIDAD_FUNCIONAL_ORGANICA)			AS	NOMBRE_UNIDAD						,
				HB.TIPO_CONTRATO																							AS	TIPO_CONTRATO						,
				DBO.SF_OBTENER_TIPO_CONTRATO		(HB.COMPANIA,HB.TIPO_CONTRATO,'0')						AS	NOMBRE_CONTRATO					,
				HB.UBICACION_FISICA																						AS	UBICACION_FISICA					, 
				( CASE WHEN ISNULL(HB.CODIGO_AFP,'X') = 'X' THEN '00' ELSE HB.CODIGO_AFP END)			AS	CODIGO_AFP							, 
				HB.COMPANIA																									AS	CODIGO_COMPANIA					,
				DBO.SF_OBTENER_UBICACION			(HB.COMPANIA,HB.UBICACION_FISICA)						AS	NOMBRE_UBICACION					,
				HB.INDICADOR_PLANILLA																					AS	INDICADOR_PLANILLA				,
				HB.SUELDO_BASICO																							AS	SUELDO_BASICO						,
				DBO.SF_OBTENER_CAT_JERARQ			(HB.COMPANIA,HB.CATEGORIA_JERARQUICA)					AS	NOMBRE_CATEGORIA_JERARQUICA	,
				DBO.SF_OBTENER_PUESTO_COMPANIA	(HB.COMPANIA,HB.PUESTO_ORGANICA,'0')					AS	NOMBRE_PUESTO						,
				HB.CODIGO_SPP																								AS	CODIGO_SPP							,
				DBO.SF_OBTENER_SUCURSAL				(HB.COMPANIA,HB.SUCURSAL,'0')								AS	NOMBRE_SUCURSAL					,
				HB.SEXO																										AS	SEXO									,
				(	SELECT	MAX(FECHA_INICIO)
					FROM	CONTRATO
					WHERE	CODIGO_UNICO			=	HB.CODIGO_UNICO	AND
							SITUACION_CONTRATO	=	'A'					)											AS	FECHA_INICIO_CONTRATO			,
				(	SELECT	MAX(FECHA_TERMINO)
					FROM	CONTRATO
					WHERE	CODIGO_UNICO			=	HB.CODIGO_UNICO	AND
							SITUACION_CONTRATO	=	'A'					)											AS	FECHA_TERMINO_CONTRATO			,
				HB.INDICADOR_RESTRINGIDO																				AS	INDICADOR_RESTRINGIDO			,
				@DESCRIPCION_CIA																							AS	NOMBRE_COMPANIA
	FROM  TRABAJADOR HB
	INNER JOIN #TEMP_TRABAJADOR_ACTUAL TT	ON	(	HB.CODIGO_UNICO	=	TT.CODIGO_UNICO	)
	WHERE	HB.COMPANIA						=	@COMPANIA		AND
			HB.FECHA_INGRESO_COMPANIA	<=	@FECHA_FIN		AND
			HB.FECHA_INGRESO_COMPANIA	>=	@FECHA_INICIO
	ORDER BY 2




SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_REPORTE_MAESTRO_PERSONAL')
BEGIN
  DROP PROCEDURE [dbo].[SP_REPORTE_MAESTRO_PERSONAL]
END
GO


CREATE PROC [dbo].[SP_REPORTE_MAESTRO_PERSONAL]    
(	@COMPANIA   CHAR(02),
	@UNIDAD_FUNCIONAL VARCHAR(8),
	@IND_SUBUNIDAD CHAR(1) = 'S'
)
AS     
	DECLARE	@DESCRIPCION_CIA	VARCHAR(50)	
	SET	@DESCRIPCION_CIA		=	DBO.SF_OBTENER_DATOS_CIA(@COMPANIA,'0')
	
	EXEC SP_FILTRO_RESTRICCION 'RPT_MAES_TRAB','T'    
   
	SELECT	/*PERSONALES***************************************************************************************************************************************/
				T.MATRICULA																																			AS	MATRICULA							,
				LTRIM(RTRIM(T.APELLIDO_PATERNO))																												AS	APELLIDO_PATERNO					,
				LTRIM(RTRIM(T.APELLIDO_MATERNO))																												AS	APELLIDO_MATERNO					,
				LTRIM(RTRIM(T.NOMBRE))																															AS	NOMBRE								,
				T.NACIONALIDAD																																		AS	NACIONALIDAD						,  
				DBO.SF_OBTENER_DATOS_PAIS					(T.NACIONALIDAD,'1')																			AS	NOMBRE_NACIONALIDAD				,
				T.SEXO																																				AS	SEXO									,
				(	CASE WHEN SEXO = 1 THEN 'MASCULINO' ELSE 'FEMENINO' END )																		AS	NOMBRE_SEXO							,
				LTRIM(RTRIM(T.GRUPO_SANGINEO))																												AS	GRUPO_SANGINEO						,
				DBO.SF_OBTENER_TABLA_DETALLE				('R008',T.ESTADO_CIVIL)																		AS	NOMBRE_ESTADO_CIVIL				,
				T.FECHA_MATRIMONIO																																AS	FECHA_MATRIMONIO					,
				(	SELECT	MATRICULA
					FROM TRABAJADOR
					WHERE	CODIGO_UNICO	=	T.CODIGO_UNICO_CONYUGE	)																					AS	MATRICULA_CONYUGE					,
				DBO.SF_OBTENER_TABLA_DETALLE				('0065',T.TIPO_DOCUMENTO)																	AS	NOMBRE_TIPO_DOCUMENTO			,
				LTRIM(RTRIM(T.NUMERO_DOCUMENTO))																												AS	NUMERO_DOCUMENTO					,
				T.PASAPORTE																																			AS	PASAPORTE							,
				DBO.SF_OBTENER_DATOS_PAIS					(T.CODIGO_PAIS_EMISOR_DOCUMENTO,'0')													AS	NOMBRE_PAIS_PASAPORTE			,
				LTRIM(RTRIM(T.NUMERO_RUC))																														AS	NUMERO_RUC							,
				LTRIM(RTRIM(T.LIBRETA_MILITAR))																												AS	LIBRETA_MILITAR					,
				LTRIM(RTRIM(T.NUMERO_BREVETE))																												AS	NUMERO_BREVETE						,
				T.FECHA_NACIMIENTO																																AS	FECHA_NACIMIENTO					,
				DBO.SF_OBTENER_DATOS_PAIS					(T.PAIS_NACIMIENTO,'0')																		AS	NOMBRE_PAIS_NACIMIENTO			,
				LTRIM(RTRIM(T.LUGAR_NACIMIENTO))																												AS	LUGAR_NACIMIENTO					,
				DBO.SF_OBTENER_DEPARTAMENTO				(T.DEPARTAMENTO_NACIMIENTO)																AS	NOMBRE_DEPARAMENTO_NAC			,
				DBO.SF_OBTENER_PROVINCIA					(T.DEPARTAMENTO_NACIMIENTO,T.PROVINCIA_NACIMIENTO)									AS	NOMBRE_PROVINCIA_NAC				,
				DBO.SF_OBTENER_DISTRITO						(T.DEPARTAMENTO_NACIMIENTO,T.PROVINCIA_NACIMIENTO,T.DISTRITO_NACIMIENTO)	AS	NOMBRE_DISTRITO_NAC				,
				
				/*LABORALES****************************************************************************************************************************************/
				T.FECHA_INGRESO_COORPORACION																													AS	FECHA_INGRESO_COORPORACION		,
				T.FECHA_INGRESO_COMPANIA																														AS	FECHA_INGRESO_COMPANIA			,
				DBO.SF_OBTENER_TABLA_DETALLE				('0018',T.SITUACION_TRABAJADOR)															AS	NOMBRE_SITUACION_TRABAJADOR	,
				DBO.SF_OBTENER_NOMBRE_TIPO_TRABAJADOR	(T.TIPO_TRABAJADOR,T.COMPANIA,'A')														AS	NOMBRE_TIPO_TRABAJADOR			,
				T.FECHA_RETIRO																																		AS	FECHA_RETIRO						,
				T.CODIGO_CESE																																		AS	CODIGO_CESE							,
				LTRIM(RTRIM(T.EMAIL_TRABAJO))																													AS	EMAIL_TRABAJO						,    
				T.JUBILADO_CON_TRATO_ESPECIAL																													AS	INSCRITO_SENATI					,
				T.NUMERO_TACO																																		AS	DOMICILIADO							,
				T.INDICADOR_PLANILLA																																AS	INDICADOR_PLANILLA				,
				DBO.SF_OBTENER_TABLA_DETALLE				('0531',ISNULL(T.ESQUEMA_VACACIONAL,'30'))											AS	NOMBRE_ESQUEMA_VACACIONAL		,
				DBO.SF_OBTENER_GRADO_SALARIAL				(T.COMPANIA,T.GRADO_SALARIAL_ORGANICA,'0')											AS	NOMBRE_GRADO						,
				DBO.SF_OBTENER_PUESTO_COMPANIA			(T.COMPANIA,T.PUESTO_ORGANICA,'0')														AS	NOMBRE_PUESTO						,
				DBO.SF_OBTENER_SUCURSAL						(T.COMPANIA,T.SUCURSAL,'0')																AS	NOMBRE_SUCURSAL					,
				DBO.SF_OBTENER_UBICACION					(T.COMPANIA,T.UBICACION_FISICA)															AS	NOMBRE_UBICACION					,
				DBO.SF_OBTENER_UNIDAD_FUNCIONAL			(T.COMPANIA,T.UNIDAD_FUNCIONAL_ORGANICA)												AS	NOMBRE_UNIDAD						,
				DBO.SF_OBTENER_CAT_JERARQ					(T.COMPANIA,T.CATEGORIA_JERARQUICA)														AS	NOMBRE_CATEGORIA					,
				T.TIPO_CALENDARIO_UTIL																															AS	DIAS_HABILES_POR_MES				,
				T.MATRICULA_SUPERVISOR																															AS	MATRICULA_SUPERVISOR				,
				(	SELECT	UPPER(LTRIM(RTRIM(APELLIDO_PATERNO))+' ' +
										LTRIM(RTRIM(APELLIDO_MATERNO))+', '+
										LTRIM(RTRIM(NOMBRE)))
					FROM TRABAJADOR
					WHERE	MATRICULA	=	T.MATRICULA_SUPERVISOR	AND
							COMPANIA		=	T.COMPANIA					)																						AS	NOMBRE_SUPERVISOR					,
				DBO.SF_OBTENER_TABLA_DETALLE				('0116',ISNULL(T.INDICADOR_PERSONAL_DIRECCION,'0'))								AS	DSC_IND_DIRECCION_CONFIANZA	,
				DBO.SF_OBTENER_TABLA_DETALLE				('0110',ISNULL(T.INDICADOR_PERSONAL_CONFIANZA,'0'))								AS	DSC_IND_FISCALIZABLE				,
				
				/*FINANCIEROS**************************************************************************************************************************************/
				DBO.SF_OBTENER_BANCO							(ISNULL(T.CODIGO_BANCO_ABONO,'99'))														AS	BANCO_ABONO							,
				DBO.SF_OBTENER_TABLA_DETALLE				('0031',T.TIPO_CUENTA_ABONO)																AS	NOMBRE_TIPO_CUENTA_ABONO		,
				LTRIM(RTRIM(T.NUMERO_CUENTA_ABONO))																											AS	NUMERO_CUENTA_ABONO				,
				DBO.SF_OBTENER_TABLA_DETALLE				('0063',T.MONEDA_CUENTA_ABONO)															AS	NOMBRE_MONEDA_CUENTA_ABONO		,
				DBO.SF_OBTENER_BANCO							(ISNULL(T.CODIGO_BANCO_ENVIO_ABONO,'99'))												AS	BANCO_ABONO_ENVIO					,
				DBO.SF_OBTENER_TABLA_DETALLE				('0107',T.TIPO_REMUNERACION)																AS	NOMBRE_TIPO_REMUNERACION		,
				T.SUELDO_BASICO																																	AS	SUELDO_BASICO						,
				DBO.SF_OBTENER_TABLA_DETALLE				('0063',T.TIPO_MONEDA)																		AS	NOMBRE_TIPO_MONEDA				,
				DBO.SF_OBTENER_TABLA_DETALLE				('0064',T.REGIMEN_SALARIAL)																AS	NOMBRE_REGIMEN_SALARIAL			,
				T.ASIGNACION_CONYUGE																																AS	ASIGNACION_CONYUGE				,
				T.NRO_PUNTOS																																		AS	NRO_PUNTOS							,
				
				/*AFP-CTS-ESSALUD**********************************************************************************************************************************/
				T.INDICADOR_INSCRITO_AFP																														AS	INDICADOR_INSCRITO_AFP			,
				ISNULL(T.INDICADOR_COMISION_MIXTA,'0')																										AS	INDICADOR_COMISION_MIXTA		,
				LTRIM(RTRIM(T.CODIGO_SPP))																														AS	CODIGO_SPP							,
				DBO.SF_OBTENER_AFP							(T.COMPANIA,T.CODIGO_AFP,'0')																AS	NOMBRE_AFP							,
				T.FECHA_INGRESO_AFP																																AS	FECHA_INGRESO_AFP					,
				T.FECHA_INICIO_SISTEMA_AFP																														AS	FECHA_INICIO_SISTEMA_AFP		,
				DBO.SF_OBTENER_BANCO							(T.INSTITUCION_FINANCIERA)																	AS	BANCO_CTS							,
				DBO.SF_OBTENER_TABLA_DETALLE				('0063',T.TIPO_CUENTA_CTS)																	AS	NOMBRE_TIPO_CUENTA_CTS			,
				LTRIM(RTRIM(T.NUMERO_CUENTA_CTS))																											AS	NUMERO_CUENTA_CTS					,
				LTRIM(RTRIM(T.NUMERO_CUENTA_CTS_DOLAR))																									AS	NUMERO_CUENTA_CTS_DOLAR			,
				T.INDICADOR_INSCRITO_IPSS																														AS	INSCRITO_ESSALUD					,
				T.INSCRITO_SEGURO_VIDA																															AS	INSCRITO_ESSALUD_VIDA			,
				T.INSCRITO_LEY_4916																																AS	INSCRITO_VIDA_LEY					,
				DBO.SF_OBTENER_TABLA_DETALLE				('0129',T.INDICADOR_SCTR)																	AS	NOMBRE_INDICADOR_SCTR			,
				T.CIRCULO_FUNCIONARIO																															AS	INSCRITO_EPS						,
				T.CAPA_EPS																																			AS	CAPA_EPS								,
				T.PLAN_EPS																																			AS	PLAN_EPS								,
				T.HIJOS18_EPS																																		AS	HIJOS18_EPS							,
				T.PADRES_EPS																																		AS	PADRES_EPS							,
				T.PADRES_EPS65																																		AS	PADRES_EPS65						,
				ISNULL(T.INDICADOR_JUBILADO,'0')																												AS	INDICADOR_JUBILADO				,
				T.FECHA_INICIO_PAGO																																AS	FECHA_INICIO_PAGO_CTS			,
				T.FECHA_FIN_PAGO																																	AS	FECHA_FIN_PAGO_CTS				,
				
				/*DOMICILIO****************************************************************************************************************************************/
				DBO.SF_OBTENER_DEPARTAMENTO				(T.DEPARTAMENTO_DOMICILIO)																	AS	NOMBRE_DEPARAMENTO_DOM			,
				DBO.SF_OBTENER_PROVINCIA					(T.DEPARTAMENTO_DOMICILIO,T.PROVINCIA_DOMICILIO)									AS	NOMBRE_PROVINCIA_DOM				,
				DBO.SF_OBTENER_DISTRITO						(T.DEPARTAMENTO_DOMICILIO,T.PROVINCIA_DOMICILIO,T.DISTRITO_DOMICILIO)		AS	NOMBRE_DISTRITO_DOM				,
				DBO.SF_OBTENER_TABLA_DETALLE				('0103',T.TIPO_VIA)																			AS	NOMBRE_TIPO_VIA					,
				LTRIM(RTRIM(T.NOMBRE_VIA))																														AS	NOMBRE_VIA							,    
				LTRIM(RTRIM(T.NUMERO_VIA))																														AS	NUMERO_VIA							,    
				LTRIM(RTRIM(T.INTERIOR_VIA))																													AS	INTERIOR_VIA						,    
				LTRIM(RTRIM(T.DPTO))																																AS	NOMBRE_VIA							,
				LTRIM(RTRIM(T.MANZANA))																															AS	MANZANA								,
				LTRIM(RTRIM(T.LOTE))																																AS	LOTE									,
				LTRIM(RTRIM(T.KILOMETRO))																														AS	KILOMETRO							,
				LTRIM(RTRIM(T.BLOCK))																															AS	BLOCK									,
				LTRIM(RTRIM(T.ETAPA))																															AS	ETAPA									,
				DBO.SF_OBTENER_TABLA_DETALLE				('0104',T.TIPO_ZONA)																			AS	NOMBRE_TIPO_ZONA					,
				LTRIM(RTRIM(T.NOMBRE_ZONA))																													AS	NOMBRE_ZONA							,    
				LTRIM(RTRIM(T.REFERENCIA))																														AS	REFERENCIA							,    
				T.FECHA_DESDE_VIVE_DOMICILIO																													AS	FECHA_DESDE_VIVE_DOMICILIO		,
				LTRIM(RTRIM(T.EMAIL_PERSONAL))																												AS	EMAIL_PERSONAL						,    
				T.TELEFONO_DOMICILIO																																AS	TELEFONO_DOMICILIO				,
				LTRIM(RTRIM(T.CODIGO_LARGA_DISTANCIA_NAC))																								AS	CODIGO_LARGA_DISTANCIA_NAC		,
				T.TELEFONO_MOVIL																																	AS	TELEFONO_MOVIL						,    
				DBO.SF_OBTENER_TABLA_DETALLE				('0500',T.CODIGO_POSTAL)																	AS	NOMBRE_CODIGO_POSTAL				,
				T.INDICADOR_DOMICILIO_PROPIO																													AS	INDICADOR_DOMICILIO_PROPIO		,    
				DBO.SF_OBTENER_DEPARTAMENTO				(T.DEPARTAMENTO_DOMICILIO2)																AS	NOMBRE_DEPARAMENTO_DOM2			,
				DBO.SF_OBTENER_PROVINCIA					(T.DEPARTAMENTO_DOMICILIO2,T.PROVINCIA_DOMICILIO2)									AS	NOMBRE_PROVINCIA_DOM2			,
				DBO.SF_OBTENER_DISTRITO						(T.DEPARTAMENTO_DOMICILIO2,T.PROVINCIA_DOMICILIO2,T.DISTRITO_DOMICILIO2)	AS	NOMBRE_DISTRITO_DOM2				,
				DBO.SF_OBTENER_TABLA_DETALLE				('0103',T.TIPO_VIA2)																			AS	NOMBRE_TIPO_VIA2					,
				LTRIM(RTRIM(T.NOMBRE_VIA2))																													AS	NOMBRE_VIA2							,    
				LTRIM(RTRIM(T.NUMERO_VIA2))																													AS	NUMERO_VIA2							,    
				LTRIM(RTRIM(T.INTERIOR_VIA2))																													AS	INTERIOR_VIA2						,    
				LTRIM(RTRIM(T.DPTO2))																															AS	NOMBRE_VIA2							,
				LTRIM(RTRIM(T.MANZANA2))																														AS	MANZANA2								,
				LTRIM(RTRIM(T.LOTE2))																															AS	LOTE2									,
				LTRIM(RTRIM(T.KILOMETRO2))																														AS	KILOMETRO2							,
				LTRIM(RTRIM(T.BLOCK2))																															AS	BLOCK2								,
				LTRIM(RTRIM(T.ETAPA2))																															AS	ETAPA2								,
				DBO.SF_OBTENER_TABLA_DETALLE				('0104',T.TIPO_ZONA2)																			AS	NOMBRE_TIPO_ZONA2					,
				LTRIM(RTRIM(T.NOMBRE_ZONA2))																													AS	NOMBRE_ZONA2						,    

				/*COMPLEMENTARIOS**********************************************************************************************************************************/
				LTRIM(RTRIM(T.OBSERVACIONES))																													AS	OBSERVACIONES						,    
				T.IND_HORARIO_NOCTURNO																															AS	IND_HORARIO_NOCTURNO				,    
				T.IND_JORNADA_MAXIMA																																AS	IND_JORNADA_MAXIMA				,    
				T.IND_REG_ALTE_ACUM_ATIP																														AS	IND_REGIMEN_ATIPICO				,    
				T.IND_OTROS_INGRESOS_QUINTA																													AS	IND_OTROS_INGRESOS_5TA			,    
				LTRIM(RTRIM(T.TELEFONO_REFERENCIA))																											AS	TELEFONO_REFERENCIA				,
				LTRIM(RTRIM(T.TELEFONO_TRABAJO1))																											AS	TELEFONO_TRABAJO1					,
				LTRIM(RTRIM(T.ANEXO_TRABAJO_1))																												AS	ANEXO_TRABAJO_1					,
				LTRIM(RTRIM(T.CUENTAUSUARIONT))																												AS	CUENTAUSUARIONT					,

				/*PRACTICANTES*************************************************************************************************************************************/
				DBO.SF_OBTENER_TABLA_DETALLE				('0072',T.RAZON_UNIVER)																		AS	NOMBRE_RAZON_UNIVER				,
				LTRIM(RTRIM(T.RUC_UNIVER))																														AS	RUC_UNIVERSIDAD					,    
				LTRIM(RTRIM(T.DIRECCION_UNIVER))																												AS	DIRECCION_UNIVERSIDAD			,    
				T.RAZON_RECTOR,  
				T.DNI_RECTOR,    
				DBO.SF_OBTENER_TABLA_DETALLE				('0073',T.RAZON_CARRERA)																	AS	NOMBRE_RAZON_CARRERA				,
				T.CANTIDAD_CICLOS,    
				DBO.SF_OBTENER_TABLA_DETALLE				('0074',T.TIPO_CICLO)																		AS	NOMBRE_TIPO_CICLO					,
				DBO.SF_OBTENER_TABLA_DETALLE				('0512',T.CONDICION_PRACTICANTE)															AS	NOMBRE_CONDICION_PRACTICANTE	,
				DBO.SF_OBTENER_TABLA_DETALLE				('0513',T.TIPO_PRACTICANTE)																AS	NOMBRE_TIPO_PRACTICANTE			,
				T.FUNCION_PRACTICANTE,
				DBO.SF_OBTENER_TABLA_DETALLE				('R034',T.TIPO_MODALIDAD_FORMATIVA)														AS	NOMBRE_MODALIDAD_FORMATIVA		,
				DBO.SF_OBTENER_TABLA_DETALLE				('R040',T.SEGURO_MEDICO_MF)																AS	NOMBRE_SEGURO_MEDICO				,
				T.IND_MADRE_RESPONSABILIDAD																													AS	MADRE_CON_RESPONSABILIDAD		,    
				DBO.SF_OBTENER_TABLA_DETALLE				('R039',T.TIPO_CENTRO_ESTUDIOS)															AS	NOMBRE_TIPO_CENTRO_ESTUDIOS	,

				/*RTPS*********************************************************************************************************************************************/
				DBO.SF_OBTENER_TABLA_DETALLE				('R011',T.TIPO_TRABAJADOR_SUNAT)															AS	TIPO_TRABAJADOR_SUNAT			,
				DBO.SF_OBTENER_TABLA_DETALLE				('R014',T.PERIODICIDAD_REMUNERACION)													AS	PERIODICIDAD_REMUNERACION		,
				DBO.SF_OBTENER_TABLA_DETALLE				('R026',T.MODALIDAD_DE_PAGO)																AS	MODALIDAD_DE_PAGO					,
				T.SINDICALIZADO																																	AS	SINDICALIZADO						,    
				DBO.SF_OBTENER_TABLA_DETALLE				('R029',T.REGIMEN_LABORAL)																	AS	REGIMEN_LABORAL					,
				DBO.SF_OBTENER_TABLA_DETALLE				('R016',T.RUC_EPS)																			AS	RUC_EPS								,
				DBO.SF_OBTENER_TABLA_DETALLE				('R037',T.TIPO_SCTR_SALUD)																	AS	SCTR_SALUD							,
				T.ASEGURA_PENSION																																	AS	ASEGURA_PENSION					,    
				DBO.SF_OBTENER_TABLA_DETALLE				('R043',T.CONVENIO_DOBLE_TRIBUTACION)													AS	CONVENIO_DOBLE_TRIBUTACION		,
				DBO.SF_OBTENER_TABLA_DETALLE				('R047',T.REGIMEN_LABORAL_NUEVO)															AS	REGIMEN_LABORAL_NUEVO			,
				DBO.SF_OBTENER_TABLA_DETALLE				('R009',T.NIVEL_EDUCATIVO)																	AS	NIVEL_EDUCATIVO					,
				DBO.SF_OBTENER_TABLA_DETALLE				('R010',T.OCUPACION)																			AS	OCUPACION							,
				(	SELECT	RTRIM(LTRIM(NOMBRE_SERVICE))
					FROM	TBL_SERVICE
					WHERE	SERVICE	=	T.SERVICE	AND
							COMPANIA	=	T.COMPANIA	)																											AS	SERVICE								,
				T.CONTROL_INMEDIATO																																AS	SUJETO_CONTROL_INMEDIATO		,    
				T.DISCAPACIDAD																																		AS	DISCAPACIDAD						,    
				DBO.SF_OBTENER_TABLA_DETALLE				('R028',T.CATEGORIA_TRABAJADOR)															AS	CATEGORIA_TRABAJADOR				,  
				DBO.SF_OBTENER_TABLA_DETALLE				('R038',T.TIPO_SCTR_PENSION)																AS	SCTR_PENSIONES						,  
				DBO.SF_OBTENER_TABLA_DETALLE				('R042',T.CATEGORIA_OCUPACIONAL)															AS	CATEGORIA_OCUPACIONAL			,
				T.INDICADOR_FDSA																																	AS	IND_FONDO_DE_SOCIO_ARTISTA		,
				T.INDICADOR_CENTRO_ASISTENCIAL																												AS	IND_CENTRO_ASISTENCIAL			,
				T.INDICADOR_INST_EDU_NAC																														AS	EDUCACION_COMPLETA_EN_PERU		,
				(	SELECT	RTRIM(LTRIM(DESCRIPCION_INSTITUCION))
					FROM	TBL_INSTITUCION_EDUCATIVA
					WHERE	CODIGO_INSTITUCION	=	T.CODIGO_INSTITUCION	)																				AS	INSTITUCION_EDUCATIVA			,
				(	SELECT	RTRIM(LTRIM(DESCRIPCION_CARRERA))
					FROM	TBL_CARRERA_EDUCATIVA
					WHERE	CODIGO_INSTITUCION	=	T.CODIGO_INSTITUCION	AND
							CODIGO_CARRERA			=	T.CODIGO_CARRERA		)																				AS	CARRERA_EDUCATIVA					,
				T.ANO_EGRESO_ESTUDIOS																															AS	ANO_EGRESO_ESTUDIOS				,

				/*SOCIALES*****************************************************************************************************************************************/
				T.NOMBRE_CONTACTO																																	AS	NOMBRE_CONTACTO					,  
				T.DIRECCION_CONTACTO																																AS	DIRECCION_CONTACTO				,  
				T.PARENTESCO_CONTACTO																															AS	PARENTESCO_CONTACTO				,  
				T.TELEFONO_CONTACTO																																AS	TELEFONO_CONTACTO					,
				T.PROBLEMAS_SALUD_FAMILIA																														AS	PROBLEMAS_SALUD_FAMILIA  ,
				DC.CENTRO_COSTO																																	AS  CODIGO_CENTRO_COSTO	,			
				ISNULL((SELECT TC.DESCRIPCION_CENTRO_COSTO
				FROM TBL_CENTRO_COSTO TC
				WHERE TC.CENTRO_COSTO = DC.CENTRO_COSTO
				AND TC.COMPANIA = T.COMPANIA),'')																												AS DSC_CENTRO_COSTOSI ,
				C.TIPO_CONTRATO																																	AS TIPO_CONTRATO ,
				(SELECT TC.DESCRIPCION_CONTRATO 
				 FROM TBL_TIPO_CONTRATO TC 
				 WHERE TC.TIPO_CONTRATO = c.TIPO_CONTRATO AND
				 TC.COMPANIA = c.compania)																														AS DSC_TIPO_CONTRATO,
			    C.FECHA_TERMINO																																AS FECHA_TERMINO_CONTRATO,
				T.aid                                                                                                                                       AS aid,
				DBO.SF_OBTENER_TABLA_DETALLE				('AID',T.aid)															                        AS dsc_aid			
	FROM	TRABAJADOR T
	inner	JOIN	CONTRATO					C	ON	(	T.CODIGO_UNICO	=	C.CODIGO_UNICO		AND
														T.COMPANIA		=	C.COMPANIA			)
	INNER	JOIN	FILTRO_RESTRICCION	FR	ON	(	T.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
	LEFT JOIN DISTR_CCOSTO_TRABAJADOR DC ON ( T.CODIGO_UNICO = DC.CODIGO_UNICO AND T.COMPANIA		=	DC.COMPANIA	)	,
	(SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )) AS UN
	WHERE	T.COMPANIA				=	@COMPANIA			AND
			C.SITUACION_CONTRATO	=	'A'					AND
			FR.ID_REPORTE			=	'RPT_MAES_TRAB'	AND
			FR.SPID					=	@@SPID AND 
			ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL 
	ORDER BY 2,3,4
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_REPORTE_SALIDA_PERSONAL')
BEGIN
  DROP PROCEDURE [dbo].[SP_REPORTE_SALIDA_PERSONAL]
END
GO




-- SP_REPORTE_SALIDA_PERSONAL '01','01/01/2010','01/01/2016', '%%','%'
--	SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia ('01', '', @IND_SUBUNIDAD )

CREATE PROCEDURE [dbo].[SP_REPORTE_SALIDA_PERSONAL]
(	@COMPANIA		CHAR(02),
	@FECHA_INICIO	DATETIME,
	@FECHA_FIN		DATETIME,
	@UNIDAD_FUNCIONAL VARCHAR(8),
	@IND_SUBUNIDAD CHAR(1) = 'S'
)

AS
	EXEC SP_FILTRO_RESTRICCION 'RPT_CESADOS','T'
	DECLARE	@DESCRIPCION_CIA	VARCHAR(50)	
	SET @DESCRIPCION_CIA	=	DBO.SF_OBTENER_DATOS_CIA(@COMPANIA,'0')
	 
	 /*
	CREATE TABLE #TMP_UF (Unidad_Funcional VARCHAR(8))
	
	INSERT #TMP_UF (Unidad_Funcional)
	SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )
	
	IF @IND_SUBUNIDAD = '%' 
	INSERT #TMP_UF (Unidad_Funcional) VALUES ('%%')
	*/


	SELECT	T.MATRICULA																								AS	MATRICULA							,
				UPPER(	LTRIM(RTRIM(T.APELLIDO_PATERNO))	+	' '	+
							LTRIM(RTRIM(T.APELLIDO_MATERNO))	+	',	'	+
							LTRIM(RTRIM(T.NOMBRE))				)													AS	NOMBRES								,
				T.TIPO_TRABAJADOR																						AS	TIPO_TRABAJADOR					,
				T.CODIGO_PERIODO_ACTUALIZACION																	AS	CODIGO_PERIODO_ACTUALIZACION	,
				T.ANO_PERIODO_ACTUALIZACION																		AS	ANO_PERIODO_ACTUALIZACION		,
				HC.FECHA_RETIRO																						AS	FECHA_RETIRO						,
				T.SITUACION_TRABAJADOR																				AS	SITUACION_TRABAJADOR				,
				HC.UNIDAD_FUNCIONAL_ORGANICA																		AS	UNIDAD_FUNCIONAL_ORGANICA		,
				DBO.SF_OBTENER_UNIDAD_FUNCIONAL	(T.COMPANIA,HC.UNIDAD_FUNCIONAL_ORGANICA)			AS	NOMBRE_UNIDAD						,
				T.TIPO_CONTRATO																						AS	TIPO_CONTRATO						, 
				DBO.SF_OBTENER_TIPO_CONTRATO		(T.COMPANIA,T.TIPO_CONTRATO,'0')						AS	NOMBRE_CONTRATO					,
				T.UBICACION_FISICA																					AS	UBICACION_FISICA					,
				( CASE WHEN ISNULL(T.CODIGO_AFP,'X') = 'X' THEN '00' ELSE T.CODIGO_AFP END)		AS	CODIGO_AFP							,
				T.COMPANIA																								AS	CODIGO_COMPANIA					,
				DBO.SF_OBTENER_UBICACION			(T.COMPANIA,T.UBICACION_FISICA)						AS	NOMBRE_UBICACION					,
				T.INDICADOR_PLANILLA																					AS	INDICADOR_PLANILLA				,
				HC.SUELDO_BASICO																						AS	SUELDO_BASICO						,
				HC.FECHA_INGRESO_COMPANIA																			AS	FECHA_INGRESO_COMPANIA			,
				T.UNIDAD_FUNCIONAL_DIVISION																		AS	UNIDAD_FUNCIONAL_DIVISION		,
				DBO.SF_OBTENER_UNIDAD_FUNCIONAL	(T.COMPANIA,T.UNIDAD_FUNCIONAL_DIVISION)			AS	NOMBRE_DIVISION					,
				DBO.SF_OBTENER_PUESTO_COMPANIA	(T.COMPANIA,T.PUESTO_ORGANICA,'0')					AS	CARGO									,
				DBO.SF_OBTENER_MOTIVO_CESE			(HC.TIPO_RETIRO,'0')										AS	MOTIVO								,
				(	SELECT	LTRIM(RTRIM(OBSERVACIONES))
					FROM	PERSONAL_PENDIENTE_RETIRO
					WHERE	CODIGO_UNICO		=	T.CODIGO_UNICO			AND
							SECUENCIA_RETIRO	=	HC.SECUENCIA_RETIRO	)										AS	OBSERVACIONES						,
				@DESCRIPCION_CIA																						AS	NOMBRE_COMPANIA
	FROM 	TRABAJADOR T
	INNER JOIN HISTORICO_CESES		HC	ON	(	T.CODIGO_UNICO		=	HC.CODIGO_UNICO	)
	--INNER JOIN FILTRO_RESTRICCION FR ON	(	FR.CODIGO_UNICO	=	T.CODIGO_UNICO		),
	-- ,		(SELECT UNIDAD_FUNCIONAL FROM #TMP_UF) AS UN 
	--(SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )) AS UN
	WHERE	T.COMPANIA			=	@COMPANIA		AND
			HC.FECHA_RETIRO	<=	@FECHA_FIN		AND
			HC.FECHA_RETIRO	>=	@FECHA_INICIO	/*AND
			FR.ID_REPORTE		=	'RPT_CESADOS'	AND 
			FR.SPID				=	@@SPID AND */
	-- AND 			ISNULL(T.unidad_funcional_organica,'') LIKE UN.UNIDAD_FUNCIONAL
	 --       ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL 
	ORDER BY 2,6



SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_REPORTE_SUSPENSIONES')
BEGIN
  DROP PROCEDURE [dbo].[SP_REPORTE_SUSPENSIONES]
END
GO

CREATE PROCEDURE [DBO].[SP_REPORTE_SUSPENSIONES]
(	@FECHA_INICIO	DATETIME,
	@FECHA_TERMINO	DATETIME,
	@COMPANIA		CHAR(2),
	@UNIDAD_FUNCIONAL CHAR(8),
	@IND_SUBUNIDAD CHAR(1) = 'S' 

)
AS
	DECLARE	@DESCRIPCION_CIA	VARCHAR(50)
	EXECUTE SP_FILTRO_RESTRICCION 'RPT_SUSPENSION'
	
	SET @DESCRIPCION_CIA	=	DBO.SF_OBTENER_DATOS_CIA(@COMPANIA,'0')
	
	SELECT	T.MATRICULA																						AS	MATRICULA			,
				UPPER(	LTRIM(RTRIM(T.APELLIDO_PATERNO))	+	' '	+
							LTRIM(RTRIM(T.APELLIDO_MATERNO))	+	',	'	+
							LTRIM(RTRIM(T.NOMBRE				))	)											AS	NOMBRES				,
				S.FECHA_AUSENCIA																				AS	FECHA_AUSENCIA		,
				T.UNIDAD_FUNCIONAL_ORGANICA																AS	UNIDAD_FUNCIONAL	, 
				DBO.SF_OBTENER_UNIDAD_FUNCIONAL	(T.COMPANIA,T.UNIDAD_FUNCIONAL_ORGANICA)	AS	NOMBRE_UNIDAD		,
				S.OBSERVACIONES																				AS	OBSERVACIONES		,
				@DESCRIPCION_CIA																				AS	COMPANIA
	FROM	SUSPENSION	S
	INNER JOIN	TRABAJADOR				T	ON	(	S.CODIGO_UNICO	=	T.CODIGO_UNICO		)
	INNER JOIN	FILTRO_RESTRICCION	FR ON	(	T.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
	,		(SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )) AS UN 
	WHERE		T.COMPANIA				=	@COMPANIA			AND
				S.SITUACION_AUSENCIA	<> 'E'					AND
				S.FECHA_AUSENCIA		>=	@FECHA_INICIO		AND
				S.FECHA_AUSENCIA		<=	@FECHA_TERMINO		AND
				FR.ID_REPORTE			=	'RPT_SUSPENSION'	AND
				FR.SPID					=	@@SPID
				AND 			ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL
	ORDER BY 2


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_REPORTE_VIDA_LEY_D')
BEGIN
  DROP PROCEDURE [dbo].[SP_REPORTE_VIDA_LEY_D]
END
GO


/*
EXEC SP_REPORTE_VIDA_LEY_D	'01','USER01','14-MENSUAL','00000007','01','E','01','0000','00'
EXEC SP_REPORTE_VIDA_LEY_D	'01','USER01','14-MENSUAL','00000007','01','E','01','0000','10'
*/

CREATE PROCEDURE [DBO].[SP_REPORTE_VIDA_LEY_D]
/*
M001 20120213 EPalomares
Se adiciona el nombre de la Obra al Título
*/
(	@COMPANIA_USUARIO	CHAR(02),
	@USUARIO				CHAR(10),
	@CODIGO_PROCESO	CHAR(20),
	@ESTACION_ID		CHAR(08),
	
	@COMPANIA			CHAR(02),
	@TIPO_TRABAJADOR	CHAR(01),
	@CODIGO_PLANILLA	CHAR(02),
	@ANO_PERIODO		CHAR(04),
	@CODIGO_PERIODO	CHAR(02)
)
AS
  DECLARE	@V_ANO_VIGENTE		CHAR(04),
				@V_MES_VIGENTE		CHAR(02),
				@V_ANO_PERIODO		CHAR(04),
				@V_MES_PERIODO		CHAR(02),
				@V_NOMBRE_CIA		VARCHAR(50),
				@V_NOMBRE_OBRA		VARCHAR(30)
	       
	SELECT	@V_NOMBRE_OBRA	=	RTRIM(LTRIM(DESCRIPCION_CORTA_TIPO_TRAB))
	FROM TBL_TIPO_TRABAJADOR
	WHERE COMPANIA				=	@COMPANIA			AND
			TIPO_TRABAJADOR	=	@TIPO_TRABAJADOR
	
	SELECT	@V_MES_VIGENTE	=	[DBO].[SF_OBTENER_PERIODO_VIGENTE](@COMPANIA,@TIPO_TRABAJADOR,'0'),
				@V_ANO_VIGENTE	=	[DBO].[SF_OBTENER_PERIODO_VIGENTE](@COMPANIA,@TIPO_TRABAJADOR,'1')
	
	SELECT	@V_MES_PERIODO		=	(	CASE	WHEN	CONVERT(INT,@CODIGO_PERIODO)	=	0	THEN	@V_MES_VIGENTE	ELSE	@CODIGO_PERIODO END	),
				@V_ANO_PERIODO		=	(	CASE	WHEN	CONVERT(INT,@ANO_PERIODO)		=	0	THEN	@V_ANO_VIGENTE ELSE	@ANO_PERIODO    END	),
				@V_NOMBRE_CIA		=	(	SELECT	RTRIM(LTRIM(NOMBRE_CIA))
												FROM TBL_COMPANIA
												WHERE	CODIGO_CIA	=	@COMPANIA	)
	
	IF	@V_ANO_PERIODO+@V_MES_PERIODO = @V_ANO_VIGENTE+@V_MES_VIGENTE
	BEGIN
		SELECT	T.MATRICULA																								AS	MATRICULA,
					RTRIM(LTRIM(T.APELLIDO_PATERNO))+' ' +
					RTRIM(LTRIM(T.APELLIDO_MATERNO))+', '+
					RTRIM(LTRIM(T.NOMBRE))																				AS	NOMBRES,
					T.FECHA_NACIMIENTO																					AS	FECHA_NACIMIENTO,
					[DBO].[SF_OBTENER_PUESTO_COMPANIA]	(	T.COMPANIA,T.PUESTO_ORGANICA,'0')			AS	CARGO,
					ISNULL([DBO].[SF_OBTENER_IMPORTES]	(	T.CODIGO_UNICO		,	@COMPANIA		,
																		@CODIGO_PLANILLA	,	'8910'			,
																		@V_MES_PERIODO		,	@V_ANO_PERIODO	,
																		@TIPO_TRABAJADOR	,	'0'				),0)	AS	RA,
					ISNULL([DBO].[SF_OBTENER_IMPORTES]	(	T.CODIGO_UNICO		,	@COMPANIA		,
																		@CODIGO_PLANILLA	,	'5070'			,
																		@V_MES_PERIODO		,	@V_ANO_PERIODO	,
																		@TIPO_TRABAJADOR	,	'0'				),0)	AS	IM,
					@V_ANO_PERIODO																							AS	ANO_REPORTE,
					@V_MES_PERIODO																							AS	MES_REPORTE,
					@V_NOMBRE_OBRA																							AS	TITULO,
					@V_NOMBRE_CIA																							AS	NOMBRE_COMPANIA
		FROM TRABAJADOR T
		INNER JOIN FILTRO_PROCESO F ON (	T.CODIGO_UNICO	=	F.CODIGO_UNICO	)
		WHERE	T.COMPANIA				=	@COMPANIA			AND
				T.TIPO_TRABAJADOR		=	@TIPO_TRABAJADOR	AND
				T.INSCRITO_LEY_4916	=	'1'					AND
				F.CODIGO_PROCESO		=	@CODIGO_PROCESO	AND
				F.USUARIO				=	@USUARIO				AND
				F.ESTACION_ID			=	@ESTACION_ID		AND
				F.COMPANIA				=	@COMPANIA_USUARIO
		ORDER BY 2
	END
	ELSE
	BEGIN
		SELECT	T.MATRICULA																								AS	MATRICULA,
					RTRIM(LTRIM(T.APELLIDO_PATERNO))+' ' +
					RTRIM(LTRIM(T.APELLIDO_MATERNO))+', '+
					RTRIM(LTRIM(T.NOMBRE))																				AS	NOMBRES,
					T.FECHA_NACIMIENTO																					AS	FECHA_NACIMIENTO,
					[DBO].[SF_OBTENER_PUESTO_COMPANIA]	(	T.CODIGO_COMPANIA,T.PUESTO_ORGANICO,'0')	AS	CARGO,
					ISNULL([DBO].[SF_OBTENER_IMPORTES]	(	T.CODIGO_UNICO		,	@COMPANIA		,
																		@CODIGO_PLANILLA	,	'8910'			,
																		@V_MES_PERIODO		,	@V_ANO_PERIODO	,
																		@TIPO_TRABAJADOR	,	'1'				),0)	AS	RA,
					ISNULL([DBO].[SF_OBTENER_IMPORTES]	(	T.CODIGO_UNICO		,	@COMPANIA		,
																		@CODIGO_PLANILLA	,	'5070'			,
																		@V_MES_PERIODO		,	@V_ANO_PERIODO	,
																		@TIPO_TRABAJADOR	,	'1'				),0)	AS	IM,
					@V_ANO_PERIODO																							AS	ANO_REPORTE,
					@V_MES_PERIODO																							AS	MES_REPORTE,
					@V_NOMBRE_OBRA																							AS	TITULO,
					@V_NOMBRE_CIA																							AS	NOMBRE_COMPANIA
		FROM HISTORICO_BOLETA_ID T
		WHERE	T.CODIGO_PERIODO		=	@V_MES_PERIODO		AND
				T.ANO_PERIODO			=	@V_ANO_PERIODO		AND
				T.CODIGO_COMPANIA		=	@COMPANIA			AND
				T.TIPO_TRABAJADOR		=	@TIPO_TRABAJADOR	AND
				T.INSCRITO_LEY_4916	=	'1'
		ORDER BY 2
	END

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'SP_REP_CONSISTENCIA_PLANILLA')
BEGIN
  DROP PROCEDURE [dbo].[SP_REP_CONSISTENCIA_PLANILLA]
END
GO

/*
SP_REP_CONSISTENCIA_PLANILLA	'01','USER01','14-MENSUAL','00000007','01','E','0000','00','01'
*/
CREATE PROCEDURE [DBO].[SP_REP_CONSISTENCIA_PLANILLA]
(	@COMPANIA_USUARIO		CHAR(02),
	@USUARIO					CHAR(10),
	@CODIGO_PROCESO		CHAR(20),
	@ESTACION_ID			CHAR(08),
	
	@COMPANIA				CHAR(02),
	@TIPO_TRABAJADOR		CHAR(01),
	@ANO_PERIODO			CHAR(04),
	@CODIGO_PERIODO		CHAR(02),
	@CODIGO_PLANILLA		CHAR(02)
)
/*
SELECT 
@compania		      = '01',
@tipo_trabajador	= 'E',
@ano_periodo		  = '2011',
@codigo_periodo		= '01',
@codigo_planilla	= '01'
*/
AS
	DECLARE	@V_ANO_VIGENTE		CHAR(04),
				@V_MES_VIGENTE		CHAR(02),
				@V_ANO_PERIODO		CHAR(04),
				@V_MES_PERIODO		CHAR(02),
				@V_NOMBRE_CIA		VARCHAR(50),
				@V_BASE_CONCEPTO	CHAR(02),
				@V_SEMANAL			VARCHAR(80),
				@V_INDICADOR		CHAR(01)
				
	SELECT	@V_MES_VIGENTE	=	[DBO].[SF_OBTENER_PERIODO_VIGENTE](@COMPANIA,@TIPO_TRABAJADOR,'0'),
				@V_ANO_VIGENTE	=	[DBO].[SF_OBTENER_PERIODO_VIGENTE](@COMPANIA,@TIPO_TRABAJADOR,'1')
	
	
	SELECT	@V_BASE_CONCEPTO	=	CODIGO_BASE_CONCEPTO,
				@V_INDICADOR		=	PAGO_SEMANAL
	FROM TBL_TIPO_TRABAJADOR
	WHERE COMPANIA				=	@COMPANIA			AND
			TIPO_TRABAJADOR	=	@TIPO_TRABAJADOR
	
	SELECT	@V_MES_PERIODO		=	(	CASE	CONVERT(INT,@CODIGO_PERIODO)
													WHEN	0	THEN	@V_MES_VIGENTE
													ELSE	@CODIGO_PERIODO
												END	),
				@V_ANO_PERIODO		=	(	CASE	CONVERT(INT,@ANO_PERIODO)
													WHEN	0	THEN	@V_ANO_VIGENTE
													ELSE	@ANO_PERIODO
												END	),
	
				@V_NOMBRE_CIA		=	(	SELECT	RTRIM(LTRIM(NOMBRE_CIA))
												FROM TBL_COMPANIA
												WHERE	CODIGO_CIA	=	@COMPANIA	),
				@V_SEMANAL			=	(	CASE	@V_INDICADOR
													WHEN '1'	THEN	(	SELECT	'Semana ' + CONVERT(VARCHAR(10),FECHA_INICIO_SEMANA,	103) + ' al ' + 
																										CONVERT(VARCHAR(10),FECHA_FIN_SEMANA,		103)
																			FROM	TBL_SEMANA_PLANILLA
																			WHERE	NUMERO_SEMANA		=	CONVERT(INT,@CODIGO_PLANILLA)-1	AND
																					TIPO_TRABAJADOR	=	@TIPO_TRABAJADOR						AND
																					CODIGO_COMPANIA	=	@COMPANIA								AND
																					CODIGO_PERIODO		=	@V_MES_PERIODO							AND
																					ANO_PERIODO			=	@V_ANO_PERIODO	)
													ELSE	''
												END	)
	IF	@V_ANO_PERIODO+@V_MES_PERIODO	=	@V_ANO_VIGENTE+@V_MES_VIGENTE
	BEGIN
		SELECT	I.CODIGO_COMPANIA,
					I.CODIGO_UNICO,
					T.MATRICULA,
					I.TIPO_TRABAJADOR,
					I.ANO_PERIODO		AS	ANO_REPORTE,
					I.CODIGO_PERIODO	AS	MES_REPORTE,
					I.CODIGO_CONCEPTO,
					[DBO].[SF_OBTENER_NOMBRE_CONCEPTO](I.CODIGO_CONCEPTO,@V_BASE_CONCEPTO,I.CODIGO_COMPANIA,I.ANO_PERIODO,I.CODIGO_PERIODO)	AS	NOMBRE_CONCEPTO,
					I.IMPORTE_CONCEPTO,
					RTRIM(LTRIM(T.APELLIDO_PATERNO))+' '+RTRIM(LTRIM(T.APELLIDO_MATERNO))+', '+RTRIM(LTRIM(T.NOMBRE))								AS	NOMBRES,
					[DBO].[SF_OBTENER_UNIDAD_FUNCIONAL](I.CODIGO_COMPANIA,T.UNIDAd_FUNCIONAL_ORGANICA)													AS	UNIDAD_FUNCIONAL,
					T.FECHA_INGRESO_COMPANIA,
					SUBSTRING(I.CODIGO_CONCEPTO,1,1)	AS	TIPO_CONCEPTO,
					(	CASE	SUBSTRING(I.CODIGO_CONCEPTO,1,1)
							WHEN	'1'	THEN	'INGRESOS'
							WHEN	'2'	THEN	'INGRESOS'
							WHEN	'3'	THEN	'DESCUENTOS'
							WHEN	'4'	THEN	'DESCUENTOS'
							WHEN	'5'	THEN	'APORTACIONES'
							ELSE	'B'
						END	)		AS	DESC_TIPO,
					@V_SEMANAL		AS	SEMANAL,
					@V_NOMBRE_CIA	AS	NOMBRE_COMPANIA
		FROM IMPORTE_ID I
		INNER JOIN	TRABAJADOR		T	ON	(	I.CODIGO_UNICO		=	T.CODIGO_UNICO		AND
														I.CODIGO_COMPANIA	=	T.COMPANIA			AND
														I.TIPO_TRABAJADOR	=	T.TIPO_TRABAJADOR	)
		INNER JOIN	FILTRO_PROCESO	F	ON	(	T.CODIGO_UNICO		=	F.CODIGO_UNICO		)
		WHERE	I.CODIGO_PERIODO							=	@V_MES_PERIODO						AND
				I.ANO_PERIODO								=	@V_ANO_PERIODO						AND
				I.CODIGO_PLANILLA							=	@CODIGO_PLANILLA					AND
				I.CODIGO_COMPANIA							=	@COMPANIA							AND
				I.TIPO_TRABAJADOR							=	@TIPO_TRABAJADOR					AND
				I.IMPORTE_CONCEPTO						<>	0										AND
				(	(	T.SITUACION_TRABAJADOR			=	'A'				AND
						T.INDICADOR_PLANILLA				=	'1'				)	OR
					(	DATEPART(YYYY,T.FECHA_RETIRO)	=	@V_ANO_PERIODO	)	)	AND
				EXISTS	(	SELECT	*
								FROM	CONCEPTO_PLANILLA	C
								WHERE	C.CODIGO_CONCEPTO				=	I.CODIGO_CONCEPTO	AND
										C.CODIGO_PLANILLA				=	I.CODIGO_PLANILLA	AND
										C.CODIGO_BASE_CONCEPTO		=	@V_BASE_CONCEPTO	AND
										C.INDICADOR_FIGURA_BOLETA	=	'1'					)	AND
				F.CODIGO_PROCESO							=	@CODIGO_PROCESO					AND
				F.USUARIO									=	@USUARIO								AND
				F.ESTACION_ID								=	@ESTACION_ID						AND
				F.COMPANIA									=	@COMPANIA_USUARIO
		GROUP BY I.CODIGO_COMPANIA,
					I.CODIGO_UNICO,
					T.MATRICULA,
					I.TIPO_TRABAJADOR,
					I.ANO_PERIODO,
					I.CODIGO_PERIODO,
					I.CODIGO_CONCEPTO,
					I.IMPORTE_CONCEPTO,
					T.APELLIDO_PATERNO,
					T.APELLIDO_MATERNO,
					T.NOMBRE,
					T.UNIDAd_FUNCIONAL_ORGANICA,
					T.FECHA_INGRESO_COMPANIA
		ORDER BY 10,7
	END
	ELSE
	BEGIN
		SELECT	I.CODIGO_COMPANIA,
					I.CODIGO_UNICO,
					T.MATRICULA,
					I.TIPO_TRABAJADOR,
					I.ANO_PERIODO		AS	ANO_REPORTE,
					I.CODIGO_PERIODO	AS	MES_REPORTE,
					I.CODIGO_CONCEPTO,
					[DBO].[SF_OBTENER_NOMBRE_CONCEPTO](I.CODIGO_CONCEPTO,@V_BASE_CONCEPTO,I.CODIGO_COMPANIA,I.ANO_PERIODO,I.CODIGO_PERIODO)	AS	NOMBRE_CONCEPTO,
					I.IMPORTE_CONCEPTO,
					RTRIM(LTRIM(T.APELLIDO_PATERNO))+' '+RTRIM(LTRIM(T.APELLIDO_MATERNO))+', '+RTRIM(LTRIM(T.NOMBRE))								AS	NOMBRES,
					[DBO].[SF_OBTENER_UNIDAD_FUNCIONAL](I.CODIGO_COMPANIA,T.UNIDAd_FUNCIONAL_ORGANICA)													AS	UNIDAD_FUNCIONAL,
					T.FECHA_INGRESO_COMPANIA,
					SUBSTRING(I.CODIGO_CONCEPTO,1,1)	AS	TIPO_CONCEPTO,
					(	CASE	SUBSTRING(I.CODIGO_CONCEPTO,1,1)
							WHEN	'1'	THEN	'INGRESOS'
							WHEN	'2'	THEN	'INGRESOS'
							WHEN	'3'	THEN	'DESCUENTOS'
							WHEN	'4'	THEN	'DESCUENTOS'
							WHEN	'5'	THEN	'APORTACIONES'
							ELSE	'B'
						END	)		AS	DESC_TIPO,
					@V_SEMANAL		AS	SEMANAL,
					@V_NOMBRE_CIA	AS	NOMBRE_COMPANIA
		FROM HISTORICO_IMPORTE_ID I
		INNER JOIN	Historico_boleta_id	T	ON	(	I.CODIGO_UNICO		=	T.CODIGO_UNICO		AND
																I.CODIGO_COMPANIA	=	T.CODIGO_COMPANIA	AND
																I.TIPO_TRABAJADOR	=	T.TIPO_TRABAJADOR	)
		INNER JOIN	FILTRO_PROCESO			F	ON	(	T.CODIGO_UNICO		=	F.CODIGO_UNICO		)
		WHERE	I.CODIGO_PERIODO							=	@V_MES_PERIODO						AND
				I.ANO_PERIODO								=	@V_ANO_PERIODO						AND
				I.CODIGO_PLANILLA							=	@CODIGO_PLANILLA					AND
				I.CODIGO_COMPANIA							=	@COMPANIA							AND
				I.TIPO_TRABAJADOR							=	@TIPO_TRABAJADOR					AND
				I.IMPORTE_CONCEPTO						<>	0										AND
				(	(	T.SITUACION_TRABAJADOR			=	'A'				AND
						T.INDICADOR_PLANILLA				=	'1'				)	OR
					(	DATEPART(YYYY,T.FECHA_RETIRO)	=	@V_ANO_PERIODO	)	)	AND
				EXISTS	(	SELECT	*
								FROM	CONCEPTO_PLANILLA	C
								WHERE	C.CODIGO_CONCEPTO				=	I.CODIGO_CONCEPTO	AND
										C.CODIGO_PLANILLA				=	I.CODIGO_PLANILLA	AND
										C.CODIGO_BASE_CONCEPTO		=	@V_BASE_CONCEPTO	AND
										C.INDICADOR_FIGURA_BOLETA	=	'1'					)	AND
				F.CODIGO_PROCESO							=	@CODIGO_PROCESO					AND
				F.USUARIO									=	@USUARIO								AND
				F.ESTACION_ID								=	@ESTACION_ID						AND
				F.COMPANIA									=	@COMPANIA_USUARIO
		GROUP BY I.CODIGO_COMPANIA,
					I.CODIGO_UNICO,
					T.MATRICULA,
					I.TIPO_TRABAJADOR,
					I.ANO_PERIODO,
					I.CODIGO_PERIODO,
					I.CODIGO_CONCEPTO,
					I.IMPORTE_CONCEPTO,
					T.APELLIDO_PATERNO,
					T.APELLIDO_MATERNO,
					T.NOMBRE,
					T.UNIDAd_FUNCIONAL_ORGANICA,
					T.FECHA_INGRESO_COMPANIA
		ORDER BY 10,7
	END

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_resumen_abono_cts')
BEGIN
  DROP PROCEDURE [dbo].[sp_resumen_abono_cts]
END
GO

/*        
        
execute dbo.sp_resumen_abono_cts;1 @compania_usuario = '02', @usuario = 'USER01', @codigo_proceso = '62-CTS', @estacion_id = '00000007',         
@compania = '02', @tipo_trabajador = 'E', @planilla = '05', @mes_pago = '11', @ano_pago = '2009', @tipo_cuenta_cts = 'D', @concepto_pago =         
'2927'        
        
*/        
-- sp_resumen_abono_cts '', '', '', '', '01', 'E', '05', '02', '2012', 'S', '2926'                
                
CREATE PROCEDURE dbo.sp_resumen_abono_cts                
(@compania_usuario char(02),                
 @usuario    char(10),                
 @codigo_proceso   char(20),                
 @estacion_id      char(30),                
 @compania     char(02),                
 @tipo_trabajador  char(01),                
 @planilla     char(02),                
 @mes_pago     char(02),                
 @ano_pago     char(04),                
 @tipo_cuenta_cts  char(01),                
 @concepto_pago    char(04)                
)                
AS                
-- Se aumenta fecha inicio y fin de pago cts              
Declare @mes_v char(02),        
        @ano_v char(04),         
        @Fecha_inicio_pago datetime,    
        @Fecha_fin_pago datetime    
    
SELECT @mes_v = p.codigo_periodo,        
               @ano_v = p.ano_periodo        
   FROM Periodo_vigente_planilla p        
WHERE p.tipo_trabajador = @tipo_trabajador  AND        
               p.codigo_compania        = @compania  AND        
                p.codigo_estado_periodo ='V'        
        
IF @mes_pago = '00'        
     SELECT @mes_pago = @mes_v        
IF @ano_pago = '0000'        
    SELECT  @ano_pago = @ano_v        
    
Select @Fecha_inicio_pago = Fecha_inicio_pago ,    
       @Fecha_fin_pago = Fecha_fin_pago    
  From Periodo_cts    
 Where tipo_trabajador = @tipo_trabajador    
   And Codigo_compania = @compania    
   And Ano_periodo = @ano_pago       
   And Codigo_Periodo = @mes_pago    
  
  
IF @mes_pago = @mes_v and @ano_pago = @ano_v              
begin     
         
if @tipo_trabajador = '%'                
  SELECT (select isnull(i.importe_concepto,0)                
            from Importe_id i                
           where i.codigo_unico = Trabajador.codigo_unico and                
                 i.codigo_planilla = @planilla and                
                 i.codigo_concepto = @concepto_pago and                
                 i.tipo_trabajador = Trabajador.tipo_trabajador and                
                 i.ano_periodo = @ano_pago and                
                 i.codigo_periodo = @mes_pago),                
         Trabajador.tipo_cuenta_cts,                   
         Trabajador.institucion_financiera,                   
         nombre_cia = substring(Tbl_compania.nombre_cia,1, 64),                
         descripcion_larga = substring(Tbl_entidad_financiera.descripcion_larga, 1, 64),                
         Tbl_compania.numero_ruc_cia,                
         Tipo_trabajador = (  select t.descripcion_corta_tipo_trab                 
                                from tbl_tipo_trabajador t                 
                               where t.tipo_trabajador = Trabajador.tipo_trabajador ) ,    
         fecha_fin_pago = @Fecha_fin_pago,    
         fecha_inicio_pago = @Fecha_inicio_pago,    
  @ano_pago ,    
  @mes_pago    
  FROM   Trabajador,                   
         Tbl_compania,                   
         Tbl_entidad_financiera ,Filtro_proceso f                 
   WHERE ( Tbl_compania.codigo_cia = Trabajador.compania ) and                  
         ( Tbl_entidad_financiera.codigo_entidad = ISNULL(Trabajador.institucion_financiera, '00') ) and                  
         ( dbo.Trabajador.compania = @compania ) AND                  
         ( dbo.Trabajador.tipo_trabajador like @tipo_trabajador ) AND                  
         ( Trabajador.tipo_cuenta_cts = @tipo_cuenta_cts ) and                
         ( Trabajador.indicador_planilla = '1' ) and
         ( Trabajador.codigo_unico = f.codigo_unico) and
         ( f.usuario   = @usuario )        AND                    
         ( f.codigo_proceso  = @codigo_proceso)   AND                    
         ( f.estacion_id   = @estacion_id)     AND                    
         ( f.compania   = @compania_usuario)                  
   ORDER BY 3 ASC,   7 ASC                
         
else    
               
  SELECT (select isnull(i.importe_concepto,0)                
   from Importe_id i                
   where i.codigo_unico = Trabajador.codigo_unico and                
  i.codigo_planilla = @planilla and                
  i.codigo_concepto = @concepto_pago and                
  i.tipo_trabajador = Trabajador.tipo_trabajador  and                
  i.ano_periodo = @ano_pago and                
  i.codigo_periodo = @mes_pago),                
         Trabajador.tipo_cuenta_cts,                   
         Trabajador.institucion_financiera,                   
         nombre_cia = substring(Tbl_compania.nombre_cia,1, 64),                
         descripcion_larga = substring(Tbl_entidad_financiera.descripcion_larga, 1, 64),                
         Tbl_compania.numero_ruc_cia,                
  Tipo_trabajador = (  select t.descripcion_corta_tipo_trab                 
                         from tbl_tipo_trabajador t                 
                        where t.tipo_trabajador = Trabajador.tipo_trabajador        
                          and t.compania = @compania ),      
         fecha_fin_pago = @Fecha_fin_pago,    
         fecha_inicio_pago = @Fecha_inicio_pago       ,    
  @ano_pago ,    
  @mes_pago    
    FROM                 
         Trabajador,                   
         Tbl_compania,                   
         Tbl_entidad_financiera  ,Filtro_proceso f                
   WHERE                 
         ( Tbl_compania.codigo_cia = Trabajador.compania ) and                  
         ( Tbl_entidad_financiera.codigo_entidad = ISNULL(Trabajador.institucion_financiera, '00') ) and                  
         ( dbo.Trabajador.compania = @compania ) AND                  
         ( dbo.Trabajador.tipo_trabajador = @tipo_trabajador ) AND                  
         ( Trabajador.tipo_cuenta_cts = @tipo_cuenta_cts )  and              
         ( Trabajador.indicador_planilla = '1') and
         ( Trabajador.codigo_unico = f.codigo_unico) and
         ( f.usuario   = @usuario )        AND                    
         ( f.codigo_proceso  = @codigo_proceso)   AND                    
         ( f.estacion_id   = @estacion_id)     AND                    
         ( f.compania   = @compania_usuario)                 
   ORDER BY 3 ASC,   7 ASC     
    
    
  end  
    
  else  
    
  begin  
    
  if @tipo_trabajador = '%'                
  SELECT (select isnull(i.importe_concepto,0)                
            from Historico_importe_id i                
           where i.codigo_unico = t.codigo_unico and                
                 i.codigo_planilla = @planilla and                
                 i.codigo_concepto = @concepto_pago and                
                 i.tipo_trabajador = t.tipo_trabajador and                
                 i.ano_periodo = @ano_pago and                
                 i.codigo_periodo = @mes_pago),                
         t.tipo_cuenta_cts,                   
         t.institucion_financiera,                   
         nombre_cia = substring(Tbl_compania.nombre_cia,1, 64),                
         descripcion_larga = substring(Tbl_entidad_financiera.descripcion_larga, 1, 64),                
         Tbl_compania.numero_ruc_cia,                
         Tipo_trabajador = (  select t.descripcion_corta_tipo_trab                 
                                from tbl_tipo_trabajador t      
                               where t.tipo_trabajador = t.tipo_trabajador ) ,    
         fecha_fin_pago = @Fecha_fin_pago,    
         fecha_inicio_pago = @Fecha_inicio_pago,    
  @ano_pago ,    
  @mes_pago    
  FROM   Historico_boleta_id t,                   
         Tbl_compania,                   
         Tbl_entidad_financiera                  
   WHERE ( Tbl_compania.codigo_cia = t.codigo_compania ) and                  
         ( Tbl_entidad_financiera.codigo_entidad = ISNULL(t.institucion_financiera, '00') ) and                  
         ( t.codigo_compania = @compania ) AND                  
         ( t.tipo_trabajador like @tipo_trabajador ) AND                  
         ( t.tipo_cuenta_cts = @tipo_cuenta_cts ) and                
         ( t.indicador_planilla = '1' ) and  
         ( t.ano_periodo = @ano_pago ) and                
         ( t.codigo_periodo = @mes_pago )              
   ORDER BY 3 ASC,   7 ASC                
         
else    
     
  SELECT   
  (select isnull(i.importe_concepto,0)                
   from Historico_importe_id i                
   where i.codigo_unico = t.codigo_unico and                
  i.codigo_planilla = @planilla and                
  i.codigo_concepto = @concepto_pago and                
  i.tipo_trabajador = t.tipo_trabajador  and                
  i.ano_periodo = @ano_pago and                
  i.codigo_periodo = @mes_pago),                
         t.tipo_cuenta_cts,                   
         t.institucion_financiera,                   
         nombre_cia = substring(Tbl_compania.nombre_cia,1, 64),                
         descripcion_larga = substring(Tbl_entidad_financiera.descripcion_larga, 1, 64),                
         Tbl_compania.numero_ruc_cia,                
  Tipo_trabajador = (  select tt.descripcion_corta_tipo_trab                 
                         from tbl_tipo_trabajador tt                 
                        where tt.tipo_trabajador = t.tipo_trabajador        
                          and tt.compania = @compania ),      
         fecha_fin_pago = @Fecha_fin_pago,    
         fecha_inicio_pago = @Fecha_inicio_pago       ,    
  @ano_pago ,    
  @mes_pago    
    FROM                 
         Historico_boleta_id t,                   
         Tbl_compania,                   
         Tbl_entidad_financiera                  
   WHERE                 
         ( Tbl_compania.codigo_cia = t.codigo_compania ) and                  
         ( Tbl_entidad_financiera.codigo_entidad = ISNULL(t.institucion_financiera, '00') ) and                  
         ( t.codigo_compania = @compania ) AND                  
         ( t.tipo_trabajador = @tipo_trabajador ) AND                  
  ( t.tipo_cuenta_cts = @tipo_cuenta_cts )  and              
    t.indicador_planilla = '1' and  
    ( t.ano_periodo = @ano_pago ) and                
    ( t.codigo_periodo = @mes_pago )                
   ORDER BY 3 ASC,   7 ASC     
    
    
  end 
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_tregistro_mod_presxest_act_xls')
BEGIN
  DROP PROCEDURE [dbo].[sp_tregistro_mod_presxest_act_xls]
END
GO


create PROCEDURE [dbo].[sp_tregistro_mod_presxest_act_xls]
(
@compania 			char(02),
@codigo_periodo 	char(02),
@ano_periodo    	char(04),
@tipo_trabajador	char(01),
@fecha_inicio		char(10),
@fecha_fin			char(10),
@tipo				char(01) -- el codigo 1 saca el texto, el 2 saca el reporte para excel
)
as

if @tipo = '1'	
select 	t.tipo_documento+ '|' + 
		t.numero_documento +  '|' + 
		t.codigo_pais_emisor_documento +  '|' + 
		categoria_trabajador  +  '|' + 
		suc_sunat
from 	tregistro_mod_presxest t	
else
select 	a.matricula,
		rtrim(a.apellido_paterno) + ' ' + rtrim(a.apellido_materno) + ', ' + RTRIM(a.nombre) as nombre,
		t.tipo_documento,
		(select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R005' and codigo_registro = t.tipo_documento ) as descr_tipo_documento,
		t.numero_documento,
		t.codigo_pais_emisor_documento,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R044' and codigo_registro = t.codigo_pais_emisor_documento ),'') as descr_pais_emisor_doc,		
		t.categoria_trabajador,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R028' and codigo_registro = t.categoria_trabajador ),'') as descr_categoria_trabajador,		
		suc_sunat  as cod_establecimiento,
		( select rtrim(nombre_sucursal) from Tbl_sucursal where codigo_cia = t.compania and suc_sunat = t.suc_sunat and sucursal = t.sucursal ) as nombre_establecimiento
from 	Trabajador a inner join tregistro_mod_presxest t
on		a.codigo_unico = t.codigo_unico
where	t.compania = @compania
order by 2		

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_tregistro_trab_datos_personales_act_xls')
BEGIN
  DROP PROCEDURE [dbo].[sp_tregistro_trab_datos_personales_act_xls]
END
GO

CREATE procedure [dbo].[sp_tregistro_trab_datos_personales_act_xls]
(
@compania			char(02),
@codigo_periodo 	char(02),
@ano_periodo    	char(04),
@fecha_inicio		char(10),
@fecha_fin			char(10),
@tipo				char(01) -- el codigo 1 saca el texto, el 2 saca el reporte para excel
)
as

if @tipo = '1'
select 	t.tipo_documento + '|' + 
		t.numero_documento +  '|' + 
		t.codigo_pais_emisor_documento +  '|' + 
		t.fecha_nacimiento + '|' + 
		t.apellido_paterno +  '|' + 
		t.apellido_materno +  '|' + 
		t.nombre +  '|' + 
		t.sexo  + '|' +
		t.pais_nacimiento + '|' + 
		t.codigo_larga_distancia_nac +  '|' + 
		t.telefono_domicilio  + '|' +    
		t.email_trabajo + '|' + 
		( case 
		when t.tipo_documento = '01' or t.tipo_documento = '1' then '|'+'|'+'|'+'|'+'|'+'|'+'|'+'|'+'|'+'|'+'|'+'|'+'|'+'|'
		else
		t.tipo_via  + '|' + 
		t.nombre_via  + '|' + 
		t.numero_via  + '|' + 
		t.dpto  + '|' + 
		t.interior_via  + '|' + 
		t.manzana  + '|' + 
		t.lote  + '|' + 
		t.kilometro  + '|' + 
		t.block  + '|' + 
		t.etapa  + '|' + 
		t.tipo_zona  + '|' + 
		t.nombre_zona  + '|' + 
		t.referencia + '|' + 
		t.ubigeo end  + '|') +
		t.tipo_via2  + '|' + 
		t.nombre_via2  + '|' + 
		t.numero_via2  + '|' + 
		t.dpto2  + '|' + 
		t.interior_via2  + '|' + 
		t.manzana2  + '|' + 
		t.lote2  + '|' + 
		t.kilometro2  + '|' + 
		t.block2  + '|' + 
		t.etapa2  + '|' + 
		t.tipo_zona2  + '|' + 
		t.nombre_zona2  + '|' + 
		t.referencia2  + '|' + 
		t.ubigeo2  + '|' +
		t.indicador_centro_asistencial + '|' 
from 	tregistro_datos_personales t
where	compania = @compania
else
select 	a.matricula,
		rtrim(a.apellido_paterno) + ' ' + rtrim(a.apellido_materno) + ', ' + RTRIM(a.nombre) as nombre,
		t.tipo_documento ,
		(select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R005' and codigo_registro = t.tipo_documento ) as descr_tipo_documento,
		t.numero_documento ,
		t.codigo_pais_emisor_documento ,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R044' and codigo_registro = t.codigo_pais_emisor_documento ),'') as descr_pais_emisor_doc,		
		t.fecha_nacimiento ,
		t.apellido_paterno ,
		t.apellido_materno ,
		t.nombre ,
		t.sexo  ,
		(case 
			when t.sexo = '1' then 'M' else 'F' end ) as desc_sexo,
		t.pais_nacimiento ,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R030' and codigo_registro = t.pais_nacimiento ),'') as descr_pais_nacimiento,		
		t.codigo_larga_distancia_nac ,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R045' and codigo_registro = t.codigo_larga_distancia_nac ),'') as descr_cod_larga_distancia,		
		t.telefono_domicilio ,
		t.email_trabajo,
		t.tipo_via ,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R003' and codigo_registro = t.tipo_via ),'') as descr_tipo_via,		
		t.nombre_via  ,
		t.numero_via ,
		t.dpto,
		t.interior_via,
		t.manzana,
		t.lote,
		t.kilometro,
		t.block,
		t.etapa,
		t.tipo_zona,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R004' and codigo_registro = t.tipo_zona ),'') as descr_tipo_zona,		
		t.nombre_zona,
		t.referencia ,
		t.ubigeo,
		t.tipo_via2,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R003' and codigo_registro = t.tipo_via2 ),'') as descr_tipo_via2,		
		t.nombre_via2,
		t.numero_via2,
		t.dpto2,
		t.interior_via2,
		t.manzana2,
		t.lote2,
		t.kilometro2,
		t.block2,
		t.etapa2,
		t.tipo_zona2,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R004' and codigo_registro = t.tipo_zona2 ),'') as descr_tipo_zona2,		
		t.nombre_zona2,
		t.referencia2,
		t.ubigeo2,
		t.indicador_centro_asistencial,
		(case
			when t.indicador_centro_asistencial = '1' then 'Domicilio 1' 
			else 'Domicilio 2' 
			end ) as desc_ind_centro_asistencial
from 	Trabajador a inner join tregistro_datos_personales t
on		a.codigo_unico = t.codigo_unico
where	t.compania = @compania
order by 2

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_tregistro_trab_datos_practicantes_act_xls')
BEGIN
  DROP PROCEDURE [dbo].[sp_tregistro_trab_datos_practicantes_act_xls]
END
GO


CREATE PROCEDURE [dbo].[sp_tregistro_trab_datos_practicantes_act_xls]  
(  
@compania			char(02),  
@codigo_periodo		char(02),  
@ano_periodo		char(04),  
@fecha_inicio		char(10),  
@fecha_fin			char(10) ,
@tipo				char(01) -- el codigo 1 saca el texto, el 2 saca el reporte para excel 
)  
as  

if @tipo = '1'  
select  t.tipo_documento + '|' +   
		t.numero_documento +  '|' +   
		t.codigo_pais_emisor_documento +  '|' +   
		t.tipo_modalidad_formativa +  '|' +   
		t.seguro_medico_mf +  '|' +   
		t.nivel_educativo +  '|' +  
		t.ocupacion +  '|' + 
		t.ind_madre_responsabilidad +  '|' +  
		t.discapacidad +  '|' +  
		t.tipo_centro_estudios +  '|' +  
		t.ind_horario_nocturno +  '|'   
from	tregistro_datos_practicantes t  
else
select  a.matricula,
		rtrim(a.apellido_paterno) + ' ' + rtrim(a.apellido_materno) + ', ' + RTRIM(a.nombre) as nombre,
		t.tipo_documento,
		(select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R005' and codigo_registro = t.tipo_documento ) as descr_tipo_documento,
		t.numero_documento,
		t.codigo_pais_emisor_documento,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R044' and codigo_registro = t.codigo_pais_emisor_documento ),'') as descr_pais_emisor_doc,		
		t.tipo_modalidad_formativa,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R034' and codigo_registro = t.tipo_modalidad_formativa ),'') as descr_tipo_modalidad_formativa,		
		t.seguro_medico_mf,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R040' and codigo_registro = t.seguro_medico_mf ),'') as descr_seguro_medico_mf,		
		t.nivel_educativo,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R009' and codigo_registro = t.nivel_educativo ),'') as descr_niv_educativo,		
		t.ocupacion,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R010' and codigo_registro = t.ocupacion ),'') as descr_ocupacion,		
		(case
			when t.ind_madre_responsabilidad = '1' then 'SI' else 'NO' end ) as ind_madre_responsabilidad,
		(case
			when t.discapacidad = '1' then 'SI' else 'NO' end ) as ind_discapacidad,
		t.tipo_centro_estudios,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R039' and codigo_registro = t.tipo_centro_estudios ),'') as descr_tipo_centro_estudios,		
		(case
			when t.ind_horario_nocturno = '1' then 'SI' else 'NO' end ) as ind_horario_nocturno
from 	Trabajador a inner join tregistro_datos_practicantes t
on		a.codigo_unico = t.codigo_unico
where	t.compania = @compania
order by 2		

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_tregistro_trab_datos_trabajador_act_xls')
BEGIN
  DROP PROCEDURE [dbo].[sp_tregistro_trab_datos_trabajador_act_xls]
END
GO

CREATE PROCEDURE [dbo].[sp_tregistro_trab_datos_trabajador_act_xls]
(
@compania 			char(02),
@codigo_periodo 	char(02),
@ano_periodo    	char(04),
@fecha_inicio		char(10),
@fecha_fin			char(10),
@tipo				char(01) -- el codigo 1 saca el texto, el 2 saca el reporte para excel
)
as

if @tipo = '1'
select 	t.tipo_documento + '|' + 
		t.numero_documento + '|' + 
		t.codigo_pais_emisor_documento +  '|' + 
		'01' +  '|' +  
		t.nivel_educativo + '|' +
		t.ocupacion + '|' +
		t.discapacidad+ '|' + 
		t.codigo_spp + '|' +
		rtrim(t.tipo_sctr_pension) + '|' + 
		t.tipo_contrato + '|' + 
		t.ind_reg_alte_acum_atip + '|' +  --nuevo 1:Si, 0:No
		t.ind_jornada_maxima + '|' +  --nuevo  1:Si, 0:No
		t.ind_horario_nocturno + '|' +  --nuevo 1:Si, 0:No
		t.sindicalizado + '|' + 
		t.periodicidad_remuneracion + '|' +
		t.sueldo_basico + '|' +
		'1' + '|' + 
		'0'+ '|' + 
		ind_personal_conf_dir + '|' + 
		t.modalidad_de_pago + '|'  + 
		t.categoria_ocupacional + '|'  + 
		t.convenio_doble_tributacion + '|' +
		t.numero_ruc + '|'  
from 	tregistro_datos_trabajador t
where	compania = @compania
else
select	a.matricula,
		rtrim(a.apellido_paterno) + ' ' + rtrim(a.apellido_materno) + ', ' + RTRIM(a.nombre) as nombre,
		t.tipo_documento,
		(select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R005' and codigo_registro = t.tipo_documento ) as descr_tipo_documento,
		t.numero_documento,
		t.codigo_pais_emisor_documento,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R044' and codigo_registro = t.codigo_pais_emisor_documento ),'') as descr_pais_emisor_doc,		
		'01' as regimen_laboral,
		'D.LEG N° 728' as descr_regimen_laboral,
		t.nivel_educativo ,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R009' and codigo_registro = t.nivel_educativo ),'') as descr_niv_educativo,		
		t.ocupacion ,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R010' and codigo_registro = t.ocupacion ),'') as descr_ocupacion,		
		(case	
			when t.discapacidad = '1' then 'SI'
			else 'NO'
		end ) as discapacidad,
		t.codigo_spp,
		t.tipo_sctr_pension ,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R038' and codigo_registro = t.tipo_sctr_pension ),'') as descr_sctr_pension,		
		t.tipo_contrato ,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R012' and codigo_registro = t.tipo_contrato ),'') as descr_tipo_contrato,		
		(case	
			when t.ind_reg_alte_acum_atip = '1' then 'SI'
			else 'NO'
		end ) as ind_reg_alte_acum_atip,
		(case	
			when t.ind_jornada_maxima = '1' then 'SI'
			else 'NO'
		end ) as ind_jornada_maxima,
		(case	
			when t.ind_horario_nocturno = '1' then 'SI'
			else 'NO'
		end ) as ind_horario_nocturno,
		(case	
			when t.sindicalizado = '1' then 'SI'
			else 'NO'
		end ) as sindicalizado,
		t.periodicidad_remuneracion,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R014' and codigo_registro = t.periodicidad_remuneracion ),'') as descr_periodicidad_remuneracion,		
		t.sueldo_basico,
		'SI' as activo,
		'SI' as personal_afecto_a_quinta, 
		(case	
			when t.ind_personal_conf_dir = '1' then 'DIRECCION'
			when t.ind_personal_conf_dir = '2' then 'CONFIANZA'
			else ''
		end ) as ind_personal_conf_dir,
		t.modalidad_de_pago,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R026' and codigo_registro = t.modalidad_de_pago ),'') as descr_modalidad_de_pago,
		t.categoria_ocupacional,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R042' and RIGHT('00' + RTRIM(codigo_registro),2) = t.categoria_ocupacional ),'') as descr_categoria_ocupacional,
		t.convenio_doble_tributacion,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R043' and codigo_registro = t.convenio_doble_tributacion ),'') as descr_convenio_doble_tributacion,
		t.numero_ruc
from 	Trabajador a inner join tregistro_datos_trabajador t
on		a.codigo_unico = t.codigo_unico
where	t.compania = @compania
order by 2


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sp_tregistro_traxest_act_xls')
BEGIN
  DROP PROCEDURE [dbo].[sp_tregistro_traxest_act_xls]
END
GO

CREATE PROCEDURE [dbo].[sp_tregistro_traxest_act_xls]
(
@compania 			char(02),
@codigo_periodo 	char(02),
@ano_periodo    	char(04),
@tipo_trabajador	char(01),
@fecha_inicio		char(10),
@fecha_fin			char(10),
@tipo				char(01) -- el codigo 1 saca el texto, el 2 saca el reporte para excel
)
as

declare @mes_vigente	char(2)
declare @ano_vigente	char(4)
declare @fec_aper	datetime
declare @fec_cie	datetime

if @tipo = '1'
select 	t.tipo_documento + '|' + 
		t.numero_documento +  '|' + 
		t.codigo_pais_emisor_documento + '|'  + 
		t.numero_ruc_cia  + '|'+      
		t.suc_sunat + '|'
from 	tregistro_traxest t
where	t.compania = @compania
else
select 	a.matricula,
		rtrim(a.apellido_paterno) + ' ' + rtrim(a.apellido_materno) + ', ' + RTRIM(a.nombre) as nombre,
		t.tipo_documento ,
		(select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R005' and codigo_registro = t.tipo_documento ) as descr_tipo_documento,
		t.numero_documento ,
		t.codigo_pais_emisor_documento ,
		isnull((select RTRIM(descripcion_registro) from Tbl_detalle_tabla where codigo_tabla = 'R044' and codigo_registro = t.codigo_pais_emisor_documento ),'') as descr_pais_emisor_doc,		
		t.numero_ruc_cia ,
		t.suc_sunat as cod_establecimiento,
		( select rtrim(nombre_sucursal) from Tbl_sucursal where codigo_cia = t.compania and suc_sunat = t.suc_sunat and sucursal = t.sucursal ) as nombre_establecimiento
from 	Trabajador a inner join tregistro_traxest t
on		a.codigo_unico = t.codigo_unico
where	t.compania = @compania
order by 2
		

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'uspACTDatosSocioEconomicoOpcionesLst')
BEGIN
  DROP PROCEDURE [dbo].[uspACTDatosSocioEconomicoOpcionesLst]
END
GO


CREATE PROCEDURE [dbo].[uspACTDatosSocioEconomicoOpcionesLst]
(
	@pIdPregunta int
)
as
Begin
	select
		A.codigoRespuestaTG,
		LTRIM(RTRIM(B.codigo_registro)) as CodigoOpcion,
		LTRIM(RTRIM(B.descripcion_registro)) as DescripcionOpcion
	from dbo.AdmPreguntasSE A
	inner join Tbl_detalle_tabla B on B.codigo_tabla = A.codigoRespuestaTG
	where A.IdPregunta = @pIdPregunta
	Order by 1,2

End


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'uspADMConsultaUsuarioLst')
BEGIN
  DROP PROCEDURE [dbo].[uspADMConsultaUsuarioLst]
END
GO

--Text
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  
CREATE PROCEDURE uspADMConsultaUsuarioLst
/*                                    
*********************************************************************
Nombre de SP Original : ADRWSS_CONSULTA_USUARIO_SELEC_ADMIN
*********************************************************************
Procedimiento:  ADRWSS_CONSULTA_USUARIO_SELEC_ADMIN  
Prop¢sito   : Obtiene el listado de listado de Usuarios a Seleccionar                                   
para mantenimiento                                  
Entradas    :	@K_UNID_FUNC    -- UF del usuario                                  
				@K_APELLIDOS    -- Apellido del usuario                                  
				@K_NOMBRE		-- Nombre del usuario                                  
				@K_LOGIN		-- Login del Usuario                  
				@K_COMPANIA		-- Codigo de la cia                
				@K_USER_SEL		-- Cadena de Usuarios ya elegidos                            
                
Se Asume    : N/A                                    
Efectos     : N/A                                    
Retorno     :                                     
Notas       :                                    
Autor       : German Salcedo Hidalgo                                  
Fecha       : 03/02/2006                                  
*********************************************************************                                    
*/
(
	@pUnidadFunc VARCHAR(8),
	@pApellidos VARCHAR(30),
	@pNombre VARCHAR(50),
	@pLogin VARCHAR(10),
	@pCompania VARCHAR(2),
	@pUserSelc VARCHAR(8000)
)
AS
SET NOCOUNT ON

 SELECT T.MATRICULA AS LOGIN,   
		dbo.ADRWSS_OBTENER_NOM_TRAB(T.CODIGO_UNICO,'2') AS USUARIO,  
		UF.NOMBRE_UNIDAD_FUNCIONAL AS UNIDAD_FUNCIONAL,  
		UF.UNIDAD_FUNCIONAL AS COD_UNIDAD_FUNCIONAL,  
		T.CODIGO_UNICO AS CODIGO_UNICO       
  FROM  ADRWVW_TRABAJADOR_MAS_IRS T   
	INNER JOIN TBL_UNIDAD_FUNCIONAL UF    
		ON  T.UNIDAD_FUNCIONAL_ORGANICA = UF.UNIDAD_FUNCIONAL AND 
			T.COMPANIA = UF.COMPANIA  
  WHERE SITUACION_TRABAJADOR='A'  
	AND T.COMPANIA = @pCompania      
	AND (UF.UNIDAD_FUNCIONAL = @pUnidadFunc  OR @pUnidadFunc = '')  
	AND (UPPER(RTRIM(LTRIM(T.APELLIDO_PATERNO))) + ' ' + UPPER(LTRIM(RTRIM(T.APELLIDO_MATERNO))) LIKE '%' + UPPER(LTRIM(RTRIM(@pApellidos))) + '%' OR  @pApellidos='')  
	AND (T.NOMBRE = @pNombre  OR @pNombre = '')                                                 
	AND (T.MATRICULA = @pLogin  OR @pLogin = '')                                                                       
	AND (CHARINDEX(T.MATRICULA , '''' + @pUserSelc + '''' ) = 0 OR @pUserSelc = '')                                                    
  ORDER BY 2  
  
SET NOCOUNT OFF 

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'uspADMtrabajadordatosSERpt')
BEGIN
  DROP PROCEDURE [dbo].[uspADMtrabajadordatosSERpt]
END
GO


 

CREATE PROC [DBO].[uspADMtrabajadordatosSERpt]    
(    @COMPANIA   CHAR(02),
    @UNIDAD_FUNCIONAL VARCHAR(8),
    @IND_SUBUNIDAD CHAR(1) = 'S'
)
AS     
    DECLARE    @DESCRIPCION_CIA    VARCHAR(50)    
    SET    @DESCRIPCION_CIA        =    DBO.SF_OBTENER_DATOS_CIA(@COMPANIA,'0')

    EXEC SP_FILTRO_RESTRICCION 'RPT_DATOSSE','T'    

    SELECT    /*PERSONALES***************************************************************************************************************************************/
                @DESCRIPCION_CIA AS COMPANIA ,
                T.MATRICULA                                                                                                                                            AS    MATRICULA                            ,
                LTRIM(RTRIM(T.APELLIDO_PATERNO))  + ' ' + LTRIM(RTRIM(T.APELLIDO_MATERNO)) + ', '+                 LTRIM(RTRIM(T.NOMBRE))          AS APELLIDOS_Y_NOMBRES ,                                                                                                                    

                /*LABORALES****************************************************************************************************************************************/
                T.FECHA_INGRESO_COMPANIA                                                                                                                        AS    FECHA_INGRESO_COMPANIA            ,
                DBO.SF_OBTENER_TABLA_DETALLE                ('0018',T.SITUACION_TRABAJADOR)                                                            AS    NOMBRE_SITUACION_TRABAJADOR    ,
                DBO.SF_OBTENER_UNIDAD_FUNCIONAL            (T.COMPANIA,T.UNIDAD_FUNCIONAL_ORGANICA)                                                AS    NOMBRE_UNIDAD                        ,
                CONVERT( VARCHAR(2),p.idPregunta) + '.'+   p.descripcionPregunta AS PREGUNTA ,
                RESPUESTA = (select descripcion_registro from tbl_detalle_tabla where codigo_tabla = p.codigorespuestaTG and codigo_registro =  s.codigoRespuesta),
                p.tituloTexto AS TITULO ,
                S.textoRespuesta AS TEXTO
    FROM       dbo.AdmPreguntasSE p LEFT OUTER JOIN dbo.ADMTrabajadorDatosSE  s ON p.idpregunta =s.idpregunta

 

    LEFT OUTER JOIN TRABAJADOR T ON  S.codigo_unico = t.codigo_unico
        INNER    JOIN    FILTRO_RESTRICCION    FR    ON    (    T.CODIGO_UNICO    =    FR.CODIGO_UNICO    )
,
    (SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )) AS UN
    WHERE    T.COMPANIA                =    @COMPANIA            AND
            FR.ID_REPORTE            =    'RPT_DATOSSE'    AND
            FR.SPID                    =     @@SPID AND 
            ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL 
    ORDER BY 2,3,4

 


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'uspADMtrabajadordatosSE_Rpt')
BEGIN
  DROP PROCEDURE [dbo].[uspADMtrabajadordatosSE_Rpt]
END
GO


CREATE PROC [DBO].[uspADMtrabajadordatosSE_Rpt]    
(	@COMPANIA   CHAR(02),
	@UNIDAD_FUNCIONAL VARCHAR(8),
	@IND_SUBUNIDAD CHAR(1) = 'S'
)
AS     
	DECLARE	@DESCRIPCION_CIA	VARCHAR(50)	
	SET	@DESCRIPCION_CIA		=	DBO.SF_OBTENER_DATOS_CIA(@COMPANIA,'0')
	
	EXEC SP_FILTRO_RESTRICCION 'RPT_DATOSSE','T'    
   
	SELECT	/*PERSONALES***************************************************************************************************************************************/
				@DESCRIPCION_CIA AS COMPANIA ,
				T.MATRICULA																																			AS	MATRICULA							,
				LTRIM(RTRIM(T.APELLIDO_PATERNO))  + ' ' + LTRIM(RTRIM(T.APELLIDO_MATERNO)) + ', '+ 				LTRIM(RTRIM(T.NOMBRE))		  AS APELLIDOS_Y_NOMBRES ,																													
				
				/*LABORALES****************************************************************************************************************************************/
				T.FECHA_INGRESO_COMPANIA																														AS	FECHA_INGRESO_COMPANIA			,
				DBO.SF_OBTENER_TABLA_DETALLE				('0018',T.SITUACION_TRABAJADOR)															AS	NOMBRE_SITUACION_TRABAJADOR	,
				DBO.SF_OBTENER_UNIDAD_FUNCIONAL			(T.COMPANIA,T.UNIDAD_FUNCIONAL_ORGANICA)												AS	NOMBRE_UNIDAD						,
			RESPUESTA = (select descripcion_registro from tbl_detalle_tabla where codigo_tabla = p.codigorespuestaTG and codigo_registro =  s.codigoRespuesta)
	FROM 	  dbo.AdmPreguntasSE p LEFT OUTER JOIN dbo.ADMTrabajadorDatosSE  s ON p.idpregunta =s.idpregunta

	LEFT OUTER JOIN TRABAJADOR T ON  S.codigo_unico = t.codigo_unico
		INNER	JOIN	FILTRO_RESTRICCION	FR	ON	(	T.CODIGO_UNICO	=	FR.CODIGO_UNICO	)
,
	(SELECT Unidad_Funcional FROM dbo.sf_grafico_trae_uf_hijas_cia (@COMPANIA, @UNIDAD_FUNCIONAL, @IND_SUBUNIDAD )) AS UN
	WHERE	T.COMPANIA				=	@COMPANIA			AND
			FR.ID_REPORTE			=	'RPT_DATOSSE'	AND
			FR.SPID					=	@@SPID AND 
			ISNULL(T.unidad_funcional_organica,'') = UN.UNIDAD_FUNCIONAL 
	ORDER BY 2,3,4

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'uspASIReporteHHEEPagadas')
BEGIN
  DROP PROCEDURE [dbo].[uspASIReporteHHEEPagadas]
END
GO


CREATE Procedure uspASIReporteHHEEPagadas
/*
	Exec uspASIReporteHHEEPagadas '01', '', '', '', '', '', '', '2015', ''
*/
(
--Declare
	@pCodigoCompania				VarChar(2),
	@pSituacionTrabajador			VarChar(1),
	@pTipoTrabajador				VarChar(1),
	@pCodigoUnico					VarChar(9),
	@pUnidadFuncional				VarChar(8),
	@pIncluirSubUF					VarChar(1),
	@pCodigoResponsable				VarChar(9),
	@pAnnoPeriodo					VarChar(4),
	@pCodigoPeriodo					VarChar(2)
)
As
Begin

	--Set @pCodigoCompania			= '01'
	--Set @pSituacionTrabajador		= ''
	--Set @pTipoTrabajador			= ''
	--Set @pCodigoUnico				= '' -- 000000287
	--Set @pUnidadFuncional			= ''
	--Set @pIncluirSubUF				= ''
	--Set @pCodigoResponsable			= ''
	--Set @pAnnoPeriodo				= '2015'
	--Set @pCodigoPeriodo				= '02'
	
	Declare @vTablaHorasExtras Table
	(
		CodigoCompania	VarChar(2),
		CodigoUnico		VarChar(9),
		TipoTrabajador	VarChar(1),
		AnnoPeriodo		VarChar(4),
		CodigoPeriodo	VarChar(2),
		HE25			Decimal(18 ,2),
		HE35			Decimal(18 ,2),
		HE100			Decimal(18 ,2),
		Feriado			Decimal(18 ,2),
		Descanso		Decimal(18 ,2)
	)

	Insert Into @vTablaHorasExtras
	(
		CodigoCompania,
		CodigoUnico,
		TipoTrabajador,
		AnnoPeriodo,
		CodigoPeriodo,
		HE25,
		HE35,
		HE100,
		Feriado,
		Descanso
	)
	SELECT 
			CodigoCompania, 
			CodigoUnico,			
			TipoTrabajador,
			AnnoPeriodo,
			CodigoPeriodo,
			Sum(HE25) As HE25,
			Sum(HE35) As HE35,
			Sum(HE100) As HE100,
			Sum(Feriado) As Feriado,
			Sum(Descanso) As Descanso
	FROM
	(
		SELECT
				CodigoCompania, 
				CodigoUnico,
				TipoTrabajador,
				AnnoPeriodo,
				CodigoPeriodo,
				FechaMarcacion,
				HETipo,

				/* Inicio 25092014
				Case
					When HETipo In ('1', '2') And  MinutosNoCompensados <= 120 Then (MinutosNoCompensados / 60.00)
					When HETipo In ('1', '2') And  MinutosNoCompensados > 120 Then (2)
					Else 0
				End As HE25,
				Case
					When HETipo In ('1', '2') And  MinutosNoCompensados > 120 Then ((MinutosNoCompensados - 120) / 60.00)
					Else 0
				End As HE35,
				Case
					When HETipo In ('3', '4') Then (MinutosPagadas / 60.00) -- (MinutosNoCompensados / 60.00)
					Else 0
				End As HE100,

				Case
					When HETipo In ('5') Then (MinutosNoCompensados / 60.00)
					Else 0
				End As Feriado,
				Case
					When HETipo In ('6') Then (MinutosNoCompensados / 60.00)
					Else 0
				End As Descanso

				Fin IISA 25092014 */	
				
				-- Inicio 25092014
						Case
					When HETipo In ('1', '2') And  MinutosPagadas <= 120 Then (MinutosPagadas / 60.00)
					When HETipo In ('1', '2') And  MinutosPagadas > 120 Then (2)
					Else 0
				End As HE25,
				Case
					When HETipo In ('1', '2') And  MinutosPagadas > 120 Then ((MinutosPagadas - 120) / 60.00)
					Else 0
				End As HE35,
				Case
					When HETipo In ('3', '4') Then (MinutosPagadas / 60.00) 
					Else 0
				End As HE100,

				Case
					When HETipo In ('5') Then (MinutosPagadas / 60.00)
					Else 0
				End As Feriado,
				Case
					When HETipo In ('6') Then (MinutosPagadas / 60.00)
					Else 0
				End As Descanso
				-- Fin 25092014
						
		FROM
		(
			SELECT
					CodigoCompania, 
					CodigoUnico,
					TipoTrabajador,
					AnnoPeriodo,
					CodigoPeriodo,
					FechaMarcacion,
					HETipo,
					(((CONVERT(INT, SUBSTRING(HE.HENoCompensados, 1, 2)) * 60) + CONVERT(INT, SUBSTRING(HE.HENoCompensados, 3, 2)))) As MinutosNoCompensados,
					(((CONVERT(INT, SUBSTRING(HE.HECompensados, 1, 2)) * 60) + CONVERT(INT, SUBSTRING(HE.HECompensados, 3, 2)))) As MinutosCompensados,
					(((CONVERT(INT, SUBSTRING(HE.HEPagadas, 1, 2)) * 60) + CONVERT(INT, SUBSTRING(HE.HEPagadas, 3, 2)))) As MinutosPagadas	 						

			FROM
			(
				SELECT 
						T.COMPANIA As CodigoCompania,
						T.CODIGO_UNICO As CodigoUnico, 
						--TP.TIPOTRABAJADOR As TipoTrabajador, -- Comentado IISA 09072014
						T.TIPO_TRABAJADOR As TipoTrabajador, -- IISA 09072014
						EVT.ANNO_PERIODO As AnnoPeriodo,
						EVT.COD_PERIODO As CodigoPeriodo,
						Convert(Date, HE.FECHA_MARCACION, 112) As FechaMarcacion,
						HE.TIPO_HE As HETipo,
						CASE 
							WHEN HE.TIPO_HE IN ('1', '2', '3', '4', '5', '6')  THEN ISNULL(HE.NRO_HE_NO_COMPENSADAS, '')
							ELSE  '0000'  
						END As HENoCompensados,
						ISNULL(HE.NRO_HE_COMPENSADAS, '0000') As HECompensados,
						
						-- '0000' As HEPagadas -- Comentado IISA 03072014
						-- ISNULL(HE.NRO_HE_PAGADAS, '0000')  As HEPagadas, -- IISA 03072014 -- Comentado IISA 25092014

						ISNULL(EVT.HORAS_COMPENSACION, '0000') As HEPagadas, -- IISA 25092014 - PAGO DE HORAS EXTRAS EN EVENTO.						

						-- Inicio IISA 10072014
						FECHA_MARCA_INI,
						FECHA_MARCA_FIN -- ,
						-- Fin IISA 10072014											
			
				FROM ADRWT_HORAS_EXTRAS HE
					INNER JOIN TRABAJADOR T ON HE.CODIGO_UNICO = T.CODIGO_UNICO
					-- Inicio IISA 25092014 - PAGO DE HORAS EXTRAS EN EVENTO.	
					INNER JOIN ADRWT_EVENTO_TRABAJADOR AS EVT ON 
					-- CSJ-2015.03.06: Cambios del codigo compuesto de la HHEE para considerar multiples turnos
					-- dbo.ASISFN_CCHE(T.CODIGO_UNICO, HE.FECHA_MARCACION,HE.TIPO_HE) = EVT.INDICE_HE
					dbo.ASISFN_CCHE(T.CODIGO_UNICO, HE.ANNO_PERIODO, HE.COD_PERIODO, HE.SECUENCIA_HE) = EVT.INDICE_HE
					-- CSJ-2015.03.06: Cambios del codigo compuesto de la HHEE para considerar multiples turnos
					 AND EVT.ID_EVENTO = 12 -- EVENTO DE PAGO
					 AND EVT.ESTADO_REG = 1
					 -- AND HE.COD_PERIODO = EVT.COD_PERIODO -- 28092014
					-- Fin IISA 25092014 - PAGO DE HORAS EXTRAS EN EVENTO.	

				WHERE 
					--HE.ESTADO_REG = '1'
					--And 
					T.Compania = @pCodigoCompania
					And (T.Situacion_Trabajador = @pSituacionTrabajador Or @pSituacionTrabajador = '')
					And (T.Tipo_Trabajador = @pTipoTrabajador Or @pTipoTrabajador = '')
					And (T.Codigo_Unico = @pCodigoUnico Or @pCodigoUnico = '')
					AND (EVT.ANNO_PERIODO = @pAnnoPeriodo Or @pAnnoPeriodo = '')
					AND (EVT.COD_PERIODO = @pCodigoPeriodo Or @pCodigoPeriodo = '')
			)HE
		)HEMinutos	
	
	)HETotal
	Group By 
			CodigoCompania, 
			CodigoUnico,
			TipoTrabajador,
			AnnoPeriodo,
			CodigoPeriodo			

	Select 
		-- T.Compania As CodigoCompania,
		RTrim(TT.Descripcion_Corta_Tipo_Trab) As [Tipo Trabajador],
		RTrim(UF.Nombre_Unidad_Funcional) As [Unidad Funcional],
		-- T.Codigo_Unico As CodigoUnico,
		T.Matricula As [Matrícula],
		RTrim(T.Apellido_Paterno) + ' ' + RTrim(T.Apellido_Materno) + ', ' + RTrim(T.Nombre) As [Apellidos y Nombres],
		Cast(T.Sueldo_Basico As Decimal(18, 2)) As [Básico],
		HE.AnnoPeriodo As [Año Pago],
		HE.CodigoPeriodo As [Mes Pago],
		HE.HE25,
		HE.HE35,
		HE.HE100,
		HE.Feriado,
		HE.Descanso
	From
		@vTablaHorasExtras HE
		Inner Join Trabajador T With(NoLock) On ( T.Codigo_Unico = HE.CodigoUnico 
			And T.Compania = HE.CodigoCompania )
		Inner Join Tbl_Tipo_Trabajador TT With(NoLock) On ( TT.Tipo_Trabajador = T.Tipo_Trabajador
			And TT.Compania = T.Compania )
		Inner Join Tbl_Unidad_Funcional UF With(NoLock) On ( UF.Unidad_Funcional = T.Unidad_Funcional_Organica
			And UF.Compania = T.Compania )
	Where
		T.Compania = @pCodigoCompania
		And (T.Situacion_Trabajador = @pSituacionTrabajador Or @pSituacionTrabajador = '')
		And (T.Tipo_Trabajador = @pTipoTrabajador Or @pTipoTrabajador = '')
		And (T.Codigo_Unico = @pCodigoUnico Or @pCodigoUnico = '')
	Order By
		HE.AnnoPeriodo,
		HE.CodigoPeriodo,
		TT.Descripcion_Corta_Tipo_Trab,
		4
End

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'uspCAPArptNotasRpt')
BEGIN
  DROP PROCEDURE [dbo].[uspCAPArptNotasRpt]
END
GO

CREATE procedure uspCAPArptNotasRpt
  /***************************************************************                          
 Procedimiento  : uspCAPArptNotasRpt   
 Propósito      : Obtiene los Datos Actuales de una Gasto de Curso       
 Entradas       : @K_COD_GASTOCURSO    -- Código del Gasto por Curso                
                                                  
                                
 Se Asume       : N/A                
 Efectos        : N/A                
 Retorno        :                
 Notas          : N/A                
 Autor          : Luis Carlos Enciso Janampa             
 Modificado     : 25/09/2013               
 Fecha/Hora     : 11:05 a.m. 10/02/2014            
 Ejecución      :              
                              
 '***************************************************************/
(
@pCategoria int,
@pSubCategoria int,
@pTrabajador char(10),
@pCurso int,
@pCompañia char(2),
@pUnidadfuncional char(8),
@pNotadesde  int,
@pNotashasta int
)
as
begin
	/**CAPACITACION**/
	select 
	distinct(CAPC.CAPAI_CODIGO),
	CAPC.CAPAD_FEC_INICIO,
	CAPC.CAPAD_FEC_FIN,
	CAPC.CAPAV_NOMBRE
	from CAPAT_CAPACITACIONES CAPC
	INNER JOIN CAPAT_CAPA_CURSOS CACCC on CACCC.CAPAI_CODIGO=CAPC.CAPAI_CODIGO
	INNER JOIN CAPAT_PART_NOTAS CAPPN on CAPPN.CACUI_CODIGO=CACCC.CACUI_CODIGO
	LEft join trabajador TR on TR.codigo_unico=CAPPN.PARTC_COD_PERSONA
	WHERE
	(TR.matricula=@pTrabajador OR @pTrabajador ='')
    AND
    (CAPC.CAPAC_COMPANIA=@pCompañia OR @pCompañia='')
    AND
    (TR.unidad_funcional_area=@pUnidadfuncional OR @pUnidadfuncional ='')
    AND
    ((CAPPN.PNOTN_NOTA < @pNotadesde OR @pNotadesde='') AND (CAPPN.PNOTN_NOTA > @pNotashasta OR @pNotashasta = '' ))
    
    
	/**CURSO**/
	select 
		distinct(CAPCCUR.CAPAI_CODIGO),
		CAPCCUR.CACUI_CODIGO,
		CAPCCUR.CACUI_NRO_SESIONES, 
		CAPCCUR.CACUN_TOTAL_HORAS,
		CAPCCUR.CACUI_FECHA_INICIO,
		CAPCCUR.CACUI_FECHA_FIN,
		CAPCUR.CURSV_NOMBRE 
	from CAPAT_CAPA_CURSOS CAPCCUR
		INNER JOIN CAPAT_CURSOS CAPCUR on CAPCCUR.CURSI_CODIGO=CAPCUR.CURSI_CODIGO
		INNER JOIN CAPAT_PART_NOTAS CAPPN on CAPPN.CACUI_CODIGO=CAPCCUR.CACUI_CODIGO
	where 
        (CAPCCUR.IdCategoria =  @pCategoria OR @pCategoria = '')
        AND (CAPCCUR.IdSubCategoria = @pSubCategoria OR @pSubCategoria ='')
        
	/**GRUPO**/
	SELECT 
		distinct(CAPG.CACUI_CODIGO),
		CAPG.GRUPI_CODIGO,
		CAPG.GRUPI_NOMBRE 
	FROM CAPAT_GRUPOS CAPG
		INNER JOIN CAPAT_PART_NOTAS CAPPN  on CAPPN.CACUI_CODIGO=CAPG.CACUI_CODIGO and CAPPN.GRUPI_CODIGO=CAPG.GRUPI_CODIGO
		
	/**NOTAS PARTICIPANTE**/
	select
		CAPG.GRUPI_CODIGO,
		CAPPN.CACUI_CODIGO,
		CAPPN.PNOTN_NOTA,
		CAPVPAR.APE_PATERNO +' '+CAPVPAR.APE_MATERNO + ' '+ CAPVPAR.NOMBRES ,
		CAPVPAR.MATRICULA,
		CAPVPAR.UNIDAD_FUNCIONAL,
		CAPPN.PARTC_TIPO_PARTICIPANTE 
	from 
		CAPAT_PART_NOTAS CAPPN 
		INNER JOIN CAPAV_TODOS_PARTICIPANTES CAPVPAR ON CAPPN.PARTC_COD_PERSONA=CAPVPAR.CODIGO 
		INNER JOIN CAPAT_GRUPOS CAPG ON CAPG.CACUI_CODIGO=CAPPN.CACUI_CODIGO  and CAPG.GRUPI_CODIGO=CAPPN.GRUPI_CODIGO 
		LEFT JOIN trabajador TR on TR.codigo_unico=CAPPN.PARTC_COD_PERSONA
	WHERE
	    (CAPVPAR.matricula=@pTrabajador OR @pTrabajador ='')
	    AND
	    (CAPVPAR.UNIDAD_FUNCIONAL=@pUnidadfuncional OR @pUnidadfuncional='')
	    AND
        ((CAPPN.PNOTN_NOTA < @pNotadesde OR @pNotadesde='') AND (CAPPN.PNOTN_NOTA > @pNotashasta OR @pNotashasta = '' ))
   order by 2
end

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'uspCHHSolicitudesGerenteLst')
BEGIN
  DROP PROCEDURE [dbo].[uspCHHSolicitudesGerenteLst]
END
GO

--exec [dbo].[uspCHHSolicitudesGerenteLst] '20220930','jobenites'    
CREATE PROCEDURE [dbo].[uspCHHSolicitudesGerenteLst]      
 @pFechaSolicitud  varchar(8),      
 @pUsuario    varchar(255)      
AS      
BEGIN      
      
 declare @vcodigounico varchar(9)      
 select  @vcodigounico = isnull(USUAC_CODIGO_UNICO, '') from SEGU_USUARIOS where USUAV_NOM_USU = RTRIM(@pUsuario)      
      
 --Reuniones del Gerente (Jefe Inmediato)      
 select      
  Sol.IdCHHSolicitud,  
  convert(varchar(10), Sol.FechaSolicitud, 112)+''+REPLACE(HoraInicioReunion,':','') as FechaHoraReunion,      
  rtrim(T.nombre) + ' ' +      
  rtrim(T.apellido_paterno) + ' ' +      
  rtrim(T.apellido_materno) as AgendadoPor,       
  Lug.Descripcion as DescripcionLugar,      
  CHHUL.Descripcion as DescripcionUbicacion,      
  CHHUL.IdCHHUbicacionLugar,      
  Sol.AsuntoReunion as Asunto,      
  convert(varchar(10), Sol.FechaSolicitud, 103) as FechaSolicitud,      
  HoraInicioReunion,      
  HoraFinReunion,      
  NroParticipantes,      
  Sol.IndicadorReunion,      
   (select ruta_file_server from PRMFileServer with (nolock) where id_proceso = 200)+'/'+      
         replicate('0', 5 - len(cast(CHHUL.IdCHHUbicacionLugar as varchar))) + cast(CHHUL.IdCHHUbicacionLugar as varchar)      
         +'/'+ISNULL(CHHUL.ImagenReferencial, '') as ImagenURL,      
  '1' as ReunionDelGerente,  
  '1' as EsEquipo  
 from       
  CHHSolicitud Sol      
  inner join CHHUbicacionLugar CHHUL on SOL.IdCHHUbicacionLugar = CHHUL.IdCHHUbicacionLugar      
  inner join CHHLugar Lug on CHHUL.IdCHHLugar= Lug.IdCHHLugar      
  inner join ADMTrabajador T on Sol.CodigoUnico = T.codigo_unico      
 Where      
  CodigoUnico = @vcodigounico And       
  Convert(varchar(8), FechaSolicitud, 112) = @pFechaSolicitud      
  And      
  CHHUL.FlagAgendarReunion = '1'
  And SOl.SituacionRegistro = 'A'
       
 UNION ALL      
 --Reuniones del Personal a Cargo (Jefe Inmediato)      
 select  
 Sol.IdCHHSolicitud,  
  convert(varchar(10), Sol.FechaSolicitud, 112)+''+REPLACE(HoraInicioReunion,':','') as FechaHoraReunion,      
  rtrim(T.nombre) + ' ' +      
  rtrim(T.apellido_paterno) + ' ' +      
  rtrim(T.apellido_materno) as AgendadoPor,       
  Lug.Descripcion as DescripcionLugar,      
  CHHUL.Descripcion as DescripcionUbicacion,      
  CHHUL.IdCHHUbicacionLugar,      
  Sol.AsuntoReunion as Asunto,      
  convert(varchar(10), Sol.FechaSolicitud, 103) as FechaSolicitud,      
  HoraInicioReunion,      
  HoraFinReunion,      
  NroParticipantes,      
  Sol.IndicadorReunion,      
   (select ruta_file_server from PRMFileServer with (nolock) where id_proceso = 200)+'/'+      
         replicate('0', 5 - len(cast(CHHUL.IdCHHUbicacionLugar as varchar))) + cast(CHHUL.IdCHHUbicacionLugar as varchar)      
         +'/'+ISNULL(CHHUL.ImagenReferencial, '') as ImagenURL,      
  '0' as ReunionDelGerente,  
  '0' as EsEquipo  
 from       
  CHHSolicitud Sol      
  inner join CHHUbicacionLugar CHHUL on SOL.IdCHHUbicacionLugar = CHHUL.IdCHHUbicacionLugar      
  inner join CHHLugar Lug on CHHUL.IdCHHLugar= Lug.IdCHHLugar      
  inner join ADMTrabajador T on Sol.CodigoUnico = T.codigo_unico      
 Where      
  Convert(varchar(8), FechaSolicitud, 112) = @pFechaSolicitud      
  And      
  CHHUL.FlagAgendarReunion = '1'
  And SOl.SituacionRegistro = 'A'
  And      
  T.codigo_unico in (Select codigo_unico       
       from ADMTrabajador       
       where matricula_supervisor = (select matricula from ADMTrabajador where codigo_unico = @vcodigounico))  
      
 UNION ALL      
 --Reuniones del Personal que no esta a cargo      
 select  
  Sol.IdCHHSolicitud,  
  convert(varchar(10), Sol.FechaSolicitud, 112)+''+REPLACE(HoraInicioReunion,':','') as FechaHoraReunion,      
  rtrim(T.nombre) + ' ' +      
  rtrim(T.apellido_paterno) + ' ' +      
  rtrim(T.apellido_materno) as AgendadoPor,   
  Lug.Descripcion as DescripcionLugar,      
  CHHUL.Descripcion as DescripcionUbicacion,      
  CHHUL.IdCHHUbicacionLugar,      
  Sol.AsuntoReunion as Asunto,      
  convert(varchar(10), Sol.FechaSolicitud, 103) as FechaSolicitud,      
  HoraInicioReunion,      
  HoraFinReunion,      
  NroParticipantes,      
  Sol.IndicadorReunion,      
   (select ruta_file_server from PRMFileServer with (nolock) where id_proceso = 200)+'/'+      
         replicate('0', 5 - len(cast(CHHUL.IdCHHUbicacionLugar as varchar))) + cast(CHHUL.IdCHHUbicacionLugar as varchar)      
         +'/'+ISNULL(CHHUL.ImagenReferencial, '') as ImagenURL,      
  '0' as ReunionDelGerente,  
  '1' as EsEquipo  
 from       
  CHHSolicitud Sol      
  inner join CHHUbicacionLugar CHHUL on SOL.IdCHHUbicacionLugar = CHHUL.IdCHHUbicacionLugar      
  inner join CHHLugar Lug on CHHUL.IdCHHLugar= Lug.IdCHHLugar      
  inner join ADMTrabajador T on Sol.CodigoUnico = T.codigo_unico      
 Where Sol.SituacionRegistro = 'A' AND    
  Convert(varchar(8), FechaSolicitud, 112) = @pFechaSolicitud      
  And      
  CHHUL.FlagAgendarReunion = '1'      
  And      
  T.codigo_unico not in (Select codigo_unico       
       from ADMTrabajador       
       where matricula_supervisor = (select matricula from ADMTrabajador where codigo_unico = @vcodigounico))  
    AND codigo_unico <> @vcodigounico  
 order by       
  1      
END 
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'uspCOMResumenRptBeneficios')
BEGIN
  DROP PROCEDURE [dbo].[uspCOMResumenRptBeneficios]
END
GO

/*

declare @fecha1 datetime
declare @fecha2 datetime

select @fecha1 = cast('20210601' as datetime)
select @fecha2 = cast('20210630' as datetime)

exec uspCOMResumenRptBeneficios '01' ,'', '1', '', '', '', '', '', @fecha1, @fecha2, '', '', '', '0'

*/

CREATE Procedure [dbo].[uspCOMResumenRptBeneficios]
( 
	@pCodigoCompania			Char(2),
	@pUnidadFuncional			Char(8),
	@pIncluirSubUF				Char(1),
	@pCodigoTrabajador			Char(9),
	@pCodigoUsuario				Char(9),
	@pIdAplicacion				Int,
	@pSituacionTrabajador		Char(1),
	@pTipoTrabajador			Char(1),
	@pFechaInicio				Date = Null,
	@pFechaFin					Date = Null,
	@GUID						varchar(MAX), 
	@IdReporte					varchar(200),
	@pCodigoEmpresaTercero		char(2) = null,
	@pEsTercero					char(1) = '0'
)
As
Begin
DECLARE @SQL NVARCHAR(MAX)

create table #reporte_beneficios (
tipo_trab1		char(1),
codigo_unico	char(9)  COLLATE SQL_Latin1_General_CP1_CI_AS,
id				varchar(9) COLLATE SQL_Latin1_General_CP1_CI_AS,
matricula		varchar(12) COLLATE SQL_Latin1_General_CP1_CI_AS,
nombre_trabajador varchar(255),
area_gerencia	varchar(255),
puesto_descripcion	varchar(255),
fecha		datetime,
turno_id	int,
turno_descripcion varchar(255)
)

/** agrega campos de benieficios **/
declare @codigo_reg	varchar(6)
declare @DESCRIPCION varchar(255)
declare @sql_texto nvarchar(max)
declare @sql_texto1 nvarchar(max)
declare @sql_texto2 nvarchar(max)


set @sql_texto = ''
set @sql_texto1 = ''
set @sql_texto2 = ''


DECLARE  cursor_campos  CURSOR FOR
select  '0'+codigo_registro, 'BENEFICIO ' + UPPER(descripcion_registro)
from Tbl_detalle_tabla
where codigo_tabla = 'COM1'
AND situacion_registro = 'A'
union
select  'A'+codigo_registro, 'BEN REALIZADO ' + RTRIM(UPPER(Descripcion_registro))
from Tbl_detalle_tabla
where codigo_tabla = 'COM1'
AND situacion_registro = 'A'
UNION 
SELECT '09999', 'TOTAL BENEFICIO'
UNION 
SELECT 'A9999', 'TOTAL BEN REALIZADO'
order by 1

open cursor_campos  
fetch cursor_CAMPOS into @CODIGO_REG, @DESCRIPCION
while @@FETCH_STATUS = 0  
Begin  


	set @sql = 'alter table #reporte_beneficios add  [' + @DESCRIPCION  + '] INT;'
	EXECUTE sp_executesql @sql

	set @sql_texto = @sql_texto + ', [' + @DESCRIPCION + ']'

	if left(@DESCRIPCION,4) = 'BENE' 
		set @sql_texto1 = @sql_texto1 + '[' + @DESCRIPCION + '] + '

	if left(@DESCRIPCION,4) = 'BEN ' 
		set @sql_texto2 = @sql_texto2 + '[' + @DESCRIPCION + '] + '



	fetch cursor_CAMPOS into  @CODIGO_REG, @DESCRIPCION

End  
  
close cursor_CAMPOS  
deallocate cursor_CAMPOS  
/*
   IF @pEsTercero = '0'
   BEGIN */
		insert into #reporte_beneficios
		(tipo_trab1, codigo_unico,
		id				,
		matricula		,
		nombre_trabajador ,
		area_gerencia	,
		puesto_descripcion	,
		fecha		,
		turno_id	,
		turno_descripcion
		)
		select distinct 'P', t.codigo_unico, tmc.macv_codigo, t.matricula,
		(rtrim(t.apellido_paterno) + ' ' + rtrim(t.apellido_materno) + ', ' + rtrim(t.nombre)) as nombres,
		uf2.nombre_unidad_funcional as unidad_gerencia,
		pc.descripcion_puesto,
		tmc.macd_fechamarc,
		ahp.CodigoTurno,
		tur.descripcion
		from tbl_marcas_comedor tmc
		inner join ASIFotocheck at on tmc.macv_codigo =  at.CODIGOFOTOCHECK AND AT.SituacionRegistro = 'A'
		inner join trabajador t on at.CodigoUnico = t.codigo_unico 
		inner join Tbl_unidad_funcional uf2 on uf2.unidad_funcional = left(t.unidad_funcional_organica,6) + '00' and uf2.compania = t.compania and uf2.situacion_unidad_funcional = 'A'
		inner join Tbl_puesto_compania pc on pc.compania = t.compania and pc.puesto = t.puesto_organica
		inner join vASIHorarioPeriodo ahp on ahp.CodigoUnico = t.codigo_unico and ahp.Fecha = tmc.macd_fechamarc 
		inner join ASITurno tur on tur.idturno = ahp.codigoturno
where tmc.macd_fechamarc between @pFechaInicio and @pfechafin
			and T.Compania = '01'
			And (T.Situacion_Trabajador = @pSituacionTrabajador Or @pSituacionTrabajador = '')
			And (T.Tipo_Trabajador = @pTipoTrabajador Or @pTipoTrabajador = '')
			And (uf2.Unidad_Funcional = @pUnidadFuncional OR @pUnidadFuncional = '')
			and (T.codigo_unico = @pCodigoTrabajador or @pCodigoTrabajador = '' )

--		union

		--select distinct 'T', t.CodigoUnicoTercero, tmc.macv_codigo, '',
		--(rtrim(t.apellidopaterno) + ' ' + rtrim(t.apellidomaterno) + ', ' + rtrim(t.Nombres)) as nombres1,
		--uf2.nombre_unidad_funcional as unidad_gerencia,
		--t.NombrePuesto,
		--tmc.macd_fechamarc,
		--ahp.CodigoTurno,
		--tur.desc_turno
		--from tbl_marcas_comedor tmc
		--inner join TERTrabajador t on tmc.macv_codigo = t.Fotocheck and estado = 'A'
		--inner join Tbl_unidad_funcional uf2 on uf2.unidad_funcional = CodigoGerencia and uf2.situacion_unidad_funcional = 'A'
		--inner join vASIHorarioPeriodo ahp on ahp.CodigoUnico = t.CodigoUnicoTercero and ahp.Fecha = tmc.macd_fechamarc 
		--inner join adrwt_turno tur on tur.id_turno = ahp.codigoturno
		--where tmc.macd_fechamarc between @pFechaInicio and @pfechafin
		--and (t.CodigoUnicoTercero = @pCodigoTrabajador or @pCodigoTrabajador = '' )
		--and (uf2.Unidad_Funcional = @pUnidadFuncional OR @pUnidadFuncional = '')
  -- END
  -- ELSE
  -- BEGIN
		insert into #reporte_beneficios
		(tipo_trab1, codigo_unico,
		id				,
		matricula		,
		nombre_trabajador ,
		area_gerencia	,
		puesto_descripcion	,
		fecha		,
		turno_id	,
		turno_descripcion
		)
		select distinct 'T', t.CodigoUnicoTercero, tmc.macv_codigo, '',
		(rtrim(t.apellidopaterno) + ' ' + rtrim(t.apellidomaterno) + ', ' + rtrim(t.Nombres)) as nombres1,
		uf2.nombre_unidad_funcional as unidad_gerencia,
		t.NombrePuesto,
		tmc.macd_fechamarc,
		tur.CodigoTurno,
		tur.DescripcionTurnoBeneficio 
		from tbl_marcas_comedor tmc
		inner join TERTrabajador t on tmc.macv_codigo = t.Fotocheck and estado = 'A'
		inner join TEREmpresa co on co.CodigoEmpresa = t.CodigoEmpresa
		inner join Tbl_unidad_funcional uf2 on uf2.unidad_funcional = CodigoGerencia and uf2.situacion_unidad_funcional = 'A'
--		inner join vASIHorarioPeriodo ahp on ahp.CodigoUnico = t.CodigoUnicoTercero and ahp.Fecha = tmc.macd_fechamarc 
		inner join TERTurnoTercero tur on  tur.CodigoUnicoTercero = t.CodigoUnicoTercero and tur.TurnoActivo = 1
		where 
		(co.CodigoEmpresa = @pCodigoEmpresaTercero  or  @pCodigoEmpresaTercero  = '')
		and tmc.macd_fechamarc between @pFechaInicio and @pfechafin
		and (t.CodigoUnicoTercero = @pCodigoTrabajador or @pCodigoTrabajador = '' )
		and (uf2.Unidad_Funcional = @pUnidadFuncional OR @pUnidadFuncional = '')
--   END


DECLARE  cursor_campos2  CURSOR FOR
select  rtrim(codigo_registro),  RTRIM(UPPER(descripcion_registro))
from Tbl_detalle_tabla
where codigo_tabla = 'COM1'
AND situacion_registro = 'A'
order by 1

open cursor_campos2  
fetch cursor_CAMPOS2 into @CODIGO_REG, @DESCRIPCION
while @@FETCH_STATUS = 0  
Begin

	set @sql = 'update #reporte_beneficios set ' + 
				'[BEN REALIZADO ' + @DESCRIPCION + '] = ' + 
				'(SELECT COUNT(*) FROM tbl_marcas_comedor ' +
				'INNER JOIN TBL_COMEDOR_MANT on tbl_marcas_comedor.macv_tipocons = TBL_COMEDOR_MANT.comi_id  ' + 
				'WHERE macv_codigo = #reporte_beneficios.id ' + 
				'AND macd_fechamarc = #reporte_beneficios.fecha ' + 
				'AND TBL_COMEDOR_MANT.comv_tipocons = '''+ @codigo_reg + '''  ' +
				') '

	EXECUTE sp_executesql @sql

	set @sql = 'update #reporte_beneficios set ' + 
				'[BENEFICIO ' + @DESCRIPCION + '] = ' + 
				'(SELECT COUNT(*) ' +  
				'FROM TERTurnoBeneficios ' + 
				'where activo = 1 and codigoturno = #reporte_beneficios.turno_id ' + 
				'and codigobeneficio = ''' + @codigo_reg + ''' ) '
				
	EXECUTE sp_executesql @sql

	fetch cursor_CAMPOS2 into  @CODIGO_REG, @DESCRIPCION

End  
  
close cursor_CAMPOS2
deallocate cursor_CAMPOS2  

set @sql = 'update #reporte_beneficios set ' + 
			'[total beneficio] = (' + left(@sql_texto1, LEN(@sql_texto1)-2) + ') '

EXECUTE sp_executesql @sql			

set @sql = 'update #reporte_beneficios set ' + 
			'[total ben realizado] = (' + left(@sql_texto2, LEN(@sql_texto2)-2) + ') '

			
EXECUTE sp_executesql @sql


set @sql = 'alter table #reporte_beneficios add  [ESTADO] varchar(50);'
EXECUTE sp_executesql @sql

update #reporte_beneficios set
estado = 'OK' 
where  [total beneficio] >= [total ben realizado]

update #reporte_beneficios set
estado = 'EXCEDE LOS BENEFICIOS REALIZADOS' 
where  [total beneficio] < [total ben realizado]





set @sql = 'select id, matricula, nombre_trabajador, area_gerencia, puesto_descripcion, fecha, ' +
		  'turno_descripcion ' + @sql_texto +  ', ESTADO ' +

		  'from #reporte_beneficios ' + 
		  'order by  3, 7 '

EXECUTE sp_executesql @sql


drop table #reporte_beneficios

End





SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'uspEDEEstadosPeriodo')
BEGIN
  DROP PROCEDURE [dbo].[uspEDEEstadosPeriodo]
END
GO



CREATE PROCEDURE dbo.uspEDEEstadosPeriodo      
/***************************************************************                    
Procedimiento : uspEDEEstadosPeriodo       
Prop¢sito     : Recupera los estados de la situacion del periodo.      
Entradas      :         
Se Asume      : N/A                    
Efectos       : N/A                    
Retorno       : N/A        
Notas         : N/A               
Autor         : Oscar Ojeda G.      
Modificado    :                     
Fecha/Hora    : 11/07/2012                    
'***************************************************************/              
AS          
        
SET NOCOUNT ON      
Begin      
Select codigo_registro, descripcion_registro from tbl_detalle_tabla  
where codigo_tabla='0069' AND situacion_registro='A'  order by 1  desc  
end
      
SET NOCOUNT OFF 

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'uspEDEFiltroPuestoxUF')
BEGIN
  DROP PROCEDURE [dbo].[uspEDEFiltroPuestoxUF]
END
GO


CREATE PROCEDURE uspEDEFiltroPuestoxUF
 /* ========================================================================                
  Autor                                : James Alvis Tafur              
  Fecha Creación                       : Martes 07 de Agosto del 2012                
  Fecha Modificación                   :                
  Descripción                          : Filtra datos de la tabla Tbl_puesto_compania               
  Parámetros                           :                   
  @pstrCompania                        : Código de la compañía            
  @pstrUnidad                          : Código de la unidad       
  Ejecución                            : Exec uspEDEFiltroPuestoxUnidadFuncional  '01','03200000'      
                                              
  ========================================================================= */               
  (            
   @pstrCompania VARCHAR(9),      
   @pstrUnidad VARCHAR(8000)           
                  
  )            
  AS         
  Begin    
    
   select CODIGO = puesto, DESCRIPCION = descripcion_puesto      
   from tbl_puesto_compania tpc    
   Where compania = @pstrCompania
   /*  
   where exists     
   (    
      select p.puesto     
      from Tbl_Posiciones p    
      where --p.Unidad_Funcional = @pstrUnidad and     
      (p.CodigoCompania  = @pstrCompania)    
      and (p.Puesto = tpc.puesto)    
      and (p.Unidad_Funcional in (select data from dbo.Split(@pstrUnidad, ',')) Or @pstrUnidad = '')    
   ) */    
   order by 2     
      
  End    
/*    
Msg 15009, Level 16, State 1, Procedure sp_helptext, Line 54    
The object 'uspSEGUsuarioAplicacionIns' does not exist in database 'ADRYAN_PRODUCTO_WEB' or is invalid for this operation.    
Msg 15009, Level 16, State 1, Procedure sp_helptext, Line 54    
The object 'uspSEGUsuarioAplicacionDel' does not exist in database 'ADRYAN_PRODUCTO_WEB' or is invalid for this operation.    
Msg 15009, Level 16, State 1, Procedure sp_helptext, Line 54    
The object 'usp_SEG_Departamento_Lista' does not exist in database 'ADRYAN_PRODUCTO_WEB' or is invalid for this operation.    
*/    

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'uspEDEFiltroPuestoxUnidadFuncional')
BEGIN
  DROP PROCEDURE [dbo].[uspEDEFiltroPuestoxUnidadFuncional]
END
GO


CREATE PROCEDURE [dbo].[uspEDEFiltroPuestoxUnidadFuncional]            
 /* ========================================================================                
  Autor                                : James Alvis Tafur              
  Fecha Creación                       : Martes 07 de Agosto del 2012                
  Fecha Modificación                   :                
  Descripción                          : Filtra datos de la tabla Tbl_puesto_compania               
  Parámetros                           :                   
  @pstrCompania                        : Código de la compañía            
  @pstrUnidad                          : Código de la unidad       
  Ejecución                            : Exec uspEDEFiltroPuestoxUnidadFuncional  '01','03200000'      
                                              
  ========================================================================= */               
  (            
   @pstrCompania VARCHAR(9),      
   @pstrUnidad VARCHAR(8000)           
                  
  )            
  AS         
  Begin    
    
   select CODIGO = puesto, DESCRIPCION = descripcion_puesto      
   from tbl_puesto_compania tpc    
   Where compania = @pstrCompania
   /*  
   where exists     
   (    
      select p.puesto     
      from Tbl_Posiciones p    
      where --p.Unidad_Funcional = @pstrUnidad and     
      (p.CodigoCompania  = @pstrCompania)    
      and (p.Puesto = tpc.puesto)    
      and (p.Unidad_Funcional in (select data from dbo.Split(@pstrUnidad, ',')) Or @pstrUnidad = '')    
   ) */    
   order by 2     
      
  End    
/*    
Msg 15009, Level 16, State 1, Procedure sp_helptext, Line 54    
The object 'uspSEGUsuarioAplicacionIns' does not exist in database 'ADRYAN_PRODUCTO_WEB' or is invalid for this operation.    
Msg 15009, Level 16, State 1, Procedure sp_helptext, Line 54    
The object 'uspSEGUsuarioAplicacionDel' does not exist in database 'ADRYAN_PRODUCTO_WEB' or is invalid for this operation.    
Msg 15009, Level 16, State 1, Procedure sp_helptext, Line 54    
The object 'usp_SEG_Departamento_Lista' does not exist in database 'ADRYAN_PRODUCTO_WEB' or is invalid for this operation.    
*/    

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'uspPllCCAbonoPdtes')
BEGIN
  DROP PROCEDURE [dbo].[uspPllCCAbonoPdtes]
END
GO


CREATE PROCEDURE [dbo].[uspPllCCAbonoPdtes] 
(
 @KCOMPANIA_USUARIO  	char(02),  
 @KUSUARIO   			char(10),  
 @CODIGO_PROCESO  		varchar(20),     
 @ESTACION_ID   		varchar(30),
 @KCOMPANIA 			CHAR(2),
 @KTIPOTRABAJADOR 		CHAR(1), --MANDATORIO
 @KTIPOPROCESO 			CHAR(2), --MANDATORIO
 @KANOPERIODO 			CHAR(4), --MANDATORIO
 @KCODIGOPERIODO 		CHAR(2), --MANDATORIO
 @KMONEDA 				CHAR(1), --MANDATORIO
 @KCODIGOBANCO 			CHAR(2) = '%', -- OPCIONAL
 @KINDBUSQUEDA 			CHAR(1) = '0', --OPCIONAL
 @KTEXTO 				VARCHAR(150), --OPCIONAL
 @KESTADO 				CHAR(1), --OPCIONAL
 @KFECHACESE 			DATE, --OPCIONAL
 @KCONCEPTO 			CHAR(4), --MANDATORIO 
 @KREFENVIO				VARCHAR(150) --OPCIONAL
 ,@KTIPO				CHAR(1) --OPCIONAL
 ,@KDESCRIPCION			VARCHAR(150) = '%'
  )
as
BEGIN 
/*
execute dbo.uspPllCCAbonoPdtes;1 @KCOMPANIA_USUARIO = '01', @KUSUARIO = 'USER01', @CODIGO_PROCESO = '01-ABONOCC', 
@ESTACION_ID = '00000007', @KCOMPANIA = '01', @KTIPOTRABAJADOR = 'P', @KTIPOPROCESO = '01', @KANOPERIODO = '2021',
 @KCODIGOPERIODO = '12', @KMONEDA = 'S', @KCODIGOBANCO = '%%', @KINDBUSQUEDA = '0', @KTEXTO = '', @KESTADO = 'P',
 @KFECHACESE = NULL, @KCONCEPTO = '8995', @KREFENVIO = '01-20200930124850', @KTIPO = '1', @KDESCRIPCION = '%' 
 
 
select dbo.usfPRMTablaDetalleLstDesc('S', '0063')
select tipo_trabajador, fecha_retiro, indicador_planilla, codigo_banco_abono,numero_cuenta_abono, * from trabajador where fecha_retiro >= '20200901'
SELECT * FROM IMPORTE_ID WHERE CODIGO_PLANILLA = '10' AND CODIGO_PERIODO = '09' AND ANO_PERIODO = '2020'
SELECT * FROM temp_cc_abono
*/

	DECLARE @SECUENCIA BIGINT 

	DELETE FROM temp_cc_abono WHERE COMPANIA_USUARIO = @KCOMPANIA_USUARIO 
	AND USUARIO = @KUSUARIO
	AND CODIGO_PROCESO = @CODIGO_PROCESO
	AND ESTACION_ID  = @ESTACION_ID
	/*03-10-2022  - CLEZAMA SAPIA -  SE AGREGA */
	IF @KTIPOPROCESO = '05'
	BEGIN 
			INSERT INTO  temp_cc_abono (ind_seleccion, COMPANIA_USUARIO, USUARIO, CODIGO_PROCESO, ESTACION_ID, codigo_unico, compania, matricula, apellido_paterno, apellido_materno, nombre, codigo_banco_abono, descripcion_banco, tipo_cuenta_abono, moneda, numero_cuenta_abono, tipo_documento, numero_documento)
				select
				   0 AS ind_seleccion,  
				   @KCOMPANIA_USUARIO AS COMPANIA_USUARIO,
					@KUSUARIO AS  USUARIO,
					@CODIGO_PROCESO AS CODIGO_PROCESO,
					@ESTACION_ID AS ESTACION_ID,
			       Trabajador.codigo_unico,  
			       Trabajador.compania,  
			       Trabajador.matricula,  
			       Trabajador.apellido_paterno,  
			       Trabajador.apellido_materno,  
			       Trabajador.nombre,  
			       --Trabajador.codigo_banco_abono,  
			       Trabajador.institucion_financiera, 
			       EF.descripcion_corta AS descripcion_banco,
			       --Trabajador.tipo_cuenta_abono ,  
			       '4' AS tipo_cuenta_abono,  
			       dbo.usfPRMTablaDetalleLstDesc (Trabajador.tipo_cuenta_cts, '0063') AS moneda , 
			       isnull(case   when Trabajador.tipo_cuenta_cts = 'S' THEN Trabajador.numero_cuenta_cts   else Trabajador.numero_cuenta_cts_dolar END ,'') AS numero_cuenta_abono,
			       --Trabajador.numero_cuenta_abono,  
			       Trabajador.tipo_documento,  
			       Trabajador.numero_documento
			   	from  Trabajador  
			   	JOIN Tbl_entidad_financiera EF ON (EF.codigo_entidad = Trabajador.institucion_financiera) 
			 	  --	JOIN Tbl_entidad_financiera EF ON (EF.codigo_entidad = Trabajador.codigo_banco_abono) 
				where   
				       Trabajador.compania = @KCOMPANIA and  
				      Trabajador.tipo_trabajador  = @KTIPOTRABAJADOR  and  
				      Trabajador.indicador_planilla  = '1' and  
--				      Trabajador.codigo_banco_abono like @KCODIGOBANCO AND 
					  Trabajador.institucion_financiera like @KCODIGOBANCO AND 
--				      Trabajador.moneda_cuenta_abono = @KMONEDA   and
				      Trabajador.tipo_cuenta_cts = @KMONEDA   and
--				      isnull(SUBSTRING(Trabajador.numero_cuenta_abono,4,9),'') <>''   
						isnull(SUBSTRING(isnull(case   when Trabajador.tipo_cuenta_cts = 'S' THEN Trabajador.numero_cuenta_cts   else Trabajador.numero_cuenta_cts_dolar END ,'') ,4,9),'') <>''   
						AND EF.IndInterbancario = '1' 
					  AND EXISTS (SELECT 1 FROM  Importe_id  WHERE Trabajador.codigo_unico = Importe_id.codigo_unico and  
				      Trabajador.tipo_trabajador = Importe_id.tipo_trabajador and  
				      Trabajador.compania = Importe_id.codigo_compania AND
			 	      Importe_id.codigo_planilla = @KTIPOPROCESO and  
			 	      Importe_id.codigo_concepto = @KCONCEPTO AND 
				      Importe_id.importe_concepto > 0 	    				      )
					  AND NOT EXISTS (SELECT 1 FROM PllCCAbonoDet p JOIN PllCCAbonoCab c ON (p.IdSEnvioCab = c.IdSEnvio) 
					  						   WHERE  p.CodigoUnico = trabajador.codigo_unico
											   AND c.tipoproceso = @KTIPOPROCESO
			   		  						   AND c.AnoPeriodo = @KANOPERIODO
											   AND c.CodigoPeriodo = @KCODIGOPERIODO
					  						   AND c.CodigoConcepto = @KCONCEPTO
					  						   AND p.estado  <>  (CASE @KINDBUSQUEDA WHEN '1' THEN 'R'  ELSE '' END) 
					  						   AND p.situacionregistro = '1')
				   	  AND CASE WHEN (@KTIPOPROCESO ='10' AND  @KFECHACESE IS NULL) OR (@KTIPOPROCESO <>'10') THEN isnull(Trabajador.fecha_retiro,getdate()) ELSE @KFECHACESE   END =   isnull(Trabajador.fecha_retiro,getdate()) 
					  AND CASE WHEN @KDESCRIPCION <> '%' THEN 
					  	  CASE @KTIPO WHEN '1' THEN Trabajador.matricula WHEN '2' THEN Trabajador.apellido_paterno
					  	  WHEN '3' THEN Trabajador.apellido_materno WHEN '4' THEN Trabajador.nombre ELSE  @KDESCRIPCION END ELSE @KDESCRIPCION END 
					  	  LIKE 		 @KDESCRIPCION 								
						order by matricula ASC 
	END 
	ELSE -- PARA TODOS LOS CASOS EXCEPTO CTS 
	BEGIN  			
				INSERT INTO  temp_cc_abono (ind_seleccion, COMPANIA_USUARIO, USUARIO, CODIGO_PROCESO, ESTACION_ID, codigo_unico, compania, matricula, apellido_paterno, apellido_materno, nombre, codigo_banco_abono, descripcion_banco, tipo_cuenta_abono, moneda, numero_cuenta_abono, tipo_documento, numero_documento)
				select
				   0 AS ind_seleccion,  
				   @KCOMPANIA_USUARIO AS COMPANIA_USUARIO,
					@KUSUARIO AS  USUARIO,
					@CODIGO_PROCESO AS CODIGO_PROCESO,
					@ESTACION_ID AS ESTACION_ID,
			       Trabajador.codigo_unico,  
			       Trabajador.compania,  
			       Trabajador.matricula,  
			       Trabajador.apellido_paterno,  
			       Trabajador.apellido_materno,  
			       Trabajador.nombre,  
			       Trabajador.codigo_banco_abono,  
			       EF.descripcion_corta AS descripcion_banco,
			       Trabajador.tipo_cuenta_abono ,  
			       dbo.usfPRMTablaDetalleLstDesc (Trabajador.moneda_cuenta_abono, '0063') AS moneda , 
			       Trabajador.numero_cuenta_abono,  
			       Trabajador.tipo_documento,  
			       Trabajador.numero_documento
			   	from  Trabajador  
			 	  	JOIN Tbl_entidad_financiera EF ON (EF.codigo_entidad = Trabajador.codigo_banco_abono) 
				where   
				       Trabajador.compania = @KCOMPANIA and  
				      Trabajador.tipo_trabajador  = @KTIPOTRABAJADOR  and  
				      Trabajador.indicador_planilla  = '1' and  
				     -- Trabajador.codigo_banco_envio_abono like '07' and
				      Trabajador.codigo_banco_abono like @KCODIGOBANCO AND 
				      Trabajador.moneda_cuenta_abono = @KMONEDA   and
				      isnull(SUBSTRING(Trabajador.numero_cuenta_abono,4,9),'') <>''   
			   	   --		Trabajador.tipo_cuenta_abono  in ( '2' , '4' ,'6' )  
			 	  	  AND EF.IndInterbancario = '1' 
					  AND EXISTS (SELECT 1 FROM  Importe_id  WHERE Trabajador.codigo_unico = Importe_id.codigo_unico and  
				      Trabajador.tipo_trabajador = Importe_id.tipo_trabajador and  
				      Trabajador.compania = Importe_id.codigo_compania AND
			 	      Importe_id.codigo_planilla = @KTIPOPROCESO and  
			 	      Importe_id.codigo_concepto = @KCONCEPTO AND 
				      Importe_id.importe_concepto > 0 	       )
					  AND NOT EXISTS (SELECT 1 FROM PllCCAbonoDet p JOIN PllCCAbonoCab c ON (p.IdSEnvioCab = c.IdSEnvio) 
					  						   WHERE  p.CodigoUnico = trabajador.codigo_unico
											   AND c.tipoproceso = @KTIPOPROCESO
			   		  						   AND c.AnoPeriodo = @KANOPERIODO
											   AND c.CodigoPeriodo = @KCODIGOPERIODO
					  						   AND c.CodigoConcepto = @KCONCEPTO
					  						   AND p.estado  <>  (CASE @KINDBUSQUEDA WHEN '1' THEN 'R'  ELSE '' END) 
					  						   AND p.situacionregistro = '1')
				   	  AND CASE WHEN (@KTIPOPROCESO ='10' AND  @KFECHACESE IS NULL) OR (@KTIPOPROCESO <>'10') THEN isnull(Trabajador.fecha_retiro,getdate()) ELSE @KFECHACESE   END =   isnull(Trabajador.fecha_retiro,getdate()) 
					  AND CASE WHEN @KDESCRIPCION <> '%' THEN 
					  	  CASE @KTIPO WHEN '1' THEN Trabajador.matricula WHEN '2' THEN Trabajador.apellido_paterno
					  	  WHEN '3' THEN Trabajador.apellido_materno WHEN '4' THEN Trabajador.nombre ELSE  @KDESCRIPCION END ELSE @KDESCRIPCION END 
					  	  LIKE 		 @KDESCRIPCION 								
						order by matricula ASC 
			END 
				
			SELECT ind_seleccion, 
			codigo_unico, 
			compania, 
			matricula, 
			apellido_paterno, 
			apellido_materno, 
			nombre, 
			codigo_banco_abono, 
			descripcion_banco, 
			tipo_cuenta_abono, 
			moneda, 
			numero_cuenta_abono, 
			tipo_documento, 
			numero_documento,
			( SELECT  SUM(importe_concepto) FROM Importe_id 
		        WHERE  Importe_id.codigo_compania 			= @KCOMPANIA  and  
					   Importe_id.codigo_planilla 	= @KTIPOPROCESO  and  
		 			   Importe_id.ano_periodo 		= @KANOPERIODO  and  
					   Importe_id.codigo_periodo 	= @KCODIGOPERIODO  and  
					   Importe_id.codigo_unico 		= temp_cc_abono.codigo_unico and  
		 			   Importe_id.codigo_concepto 	= @KCONCEPTO  and  
					   Importe_id.importe_concepto 	> 0 )  AS MONTOAbono,
			   COMPANIA_USUARIO, USUARIO, CODIGO_PROCESO, ESTACION_ID, 
			   @SECUENCIA AS idSec ,
			   @KREFENVIO AS RefEnvio ,
			   (SELECT count(*) FROM PllCCAbonoDet p JOIN PllCCAbonoCab c ON (p.IdSEnvioCab = c.IdSEnvio) 
		  						   WHERE  p.CodigoUnico = temp_cc_abono.codigo_unico
		  						   AND c.tipoproceso = @KTIPOPROCESO
		  						   AND c.CodigoConcepto = @KCONCEPTO
		  						   AND p.situacionregistro = '1') AS NEnvios 
			FROM dbo.temp_cc_abono 
			WHERE   COMPANIA_USUARIO 	= @KCOMPANIA_USUARIO AND 
					USUARIO 			= @KUSUARIO AND 
					CODIGO_PROCESO 		= @CODIGO_PROCESO AND 
					ESTACION_ID 		= @ESTACION_ID
			ORDER BY 4



END 



SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'uspPSTPuestoCompaniaSel')
BEGIN
  DROP PROCEDURE [dbo].[uspPSTPuestoCompaniaSel]
END
GO


Create PROCEDURE [dbo].[uspPSTPuestoCompaniaSel] 
(
@p_compania VARCHAR(2)
)
AS
BEGIN
  
  SELECT 
  ISNULL(grupo_funcional, '') as grupo_funcional,   
  ISNULL(grado_salarial, '') as grado_salarial,   
  ISNULL(puesto, '') as puesto,   
  ISNULL(descripcion_puesto, '') as descripcion_puesto, 
  dbo.usfPSTGrupoFuncionalObtener(@p_compania, grupo_funcional,'0') as descripcion_grupo_funcional
  FROM PSTPuestoCompania  
  WHERE 
  compania = @p_compania
  AND situacion_registro <> 'E'
  order by 4;

END

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'uspReporteGeneralConsumoComedor')
BEGIN
  DROP PROCEDURE [dbo].[uspReporteGeneralConsumoComedor]
END
GO


CREATE procedure [dbo].[uspReporteGeneralConsumoComedor]   
(  
  @pTipoConsumo varchar(2),  
  @pCodigoUnico varchar(9),  
  @pFechaIni date = null,  
  @pFechaFin date = null,  
  @pUnidadFuncional VarChar(8),  
  @pIncluirSubUF    VarChar(1),  
  @pCodigoResponsable VarChar(9),  
  @pCodigoCompania VarChar(2),  
  @pCodigoEmpresaTercero char(2)='',  
  @pEsTercero char(1)='',  
  @pFotocheck varchar(20)='',  
  @pDNI varchar(11)='',  
  @pMolinete varchar(300)=''  
)  
As  
Begin  
  
 declare @vCompaniaSupervisor Char(2) = ''  
   
 If @pCodigoResponsable <> ''     
 Begin  
  Set @vCompaniaSupervisor = (Select compania From Trabajador Where Codigo_Unico = @pCodigoResponsable)  
 End  
 Else    
 Begin  
  Set @vCompaniaSupervisor = @pCodigoCompania  
 End  
  
  
 if @pEsTercero = '0'  
 begin  
   select   
    t.matricula,  
    t.numero_documento as DNI,  
    (ltrim(rtrim(t.apellido_paterno)) + ' ' +  ltrim(rtrim(t.apellido_materno)) + ','+ ltrim(rtrim(t.nombre))) as NombreCompleto,  
    uf.nombre_unidad_funcional,  
    cc1.centro_costo as descripcion_centro_costo,  
    co.nombre_cia as Compania,  
    f.CodigoFotocheck AS CODIGO_FOTOCHECK,  
    cm.comv_nombrecons,  
    mc.macd_fechamarc,  
    mc.macd_horamarc,  
    mc.macn_costo,  
    mc.macv_codRelog,   
    cl.descripcion_registro as Molinete  
   from Trabajador t  
   inner join Tbl_compania co  
   on co.codigo_cia = t.compania  
   inner join Tbl_unidad_funcional uf  
   on t.unidad_funcional_organica = uf.unidad_funcional  
   inner join Distr_ccosto_trabajador cc    
   on t.codigo_unico = cc.codigo_unico  
   inner join Tbl_centro_costo cc1  
   on cc.centro_costo = cc1.centro_costo  
   --inner join ADRWT_TEMPORAL f  
   inner join ASIFotocheck f  
   on t.codigo_unico = f.CodigoUnico  
   inner join tbl_marcas_comedor mc  
   on f.CodigoFotocheck = mc.macv_codigo  
   inner join Tbl_detalle_tabla cl  
   on cl.codigo_tabla = 'CRLJ' and cl.situacion_registro = 'A' and cl.codigo_registro = mc.macv_codRelog  
   inner join tbl_comedor_mant cm  
   on mc.macv_tipocons = cm.comi_id   
   --inner join  (  
   --    Select   
   --     CodTrabajador  
   --    From   
   --     dbo.usfGRLSupervisorLstCU (  
   --      dbo.usfSEGAplicacionGetIdPorAbrev('CMDR'),@vCompaniaSupervisor , @pCodigoResponsable ,   
   --      @pCodigoCompania,@pUnidadFuncional , @pIncluirSubUF)    
   --   )Supervisor On ( T.Codigo_Unico = Supervisor.CodTrabajador )    
   where  
    (co.codigo_cia =  @pCodigoCompania  or  @pCodigoCompania  = '')  
    and (t.numero_documento =  @pDNI  or  @pDNI = '' )   
    and (f.CodigoFotocheck =  @pFotocheck  or  @pFotocheck = '' )   
    and (mc.macv_codRelog =  @pMolinete  or  @pMolinete = '' )   
    and(cm.comv_tipocons =  @pTipoConsumo  or  @pTipoConsumo  = '')  
    and (Convert(Date, mc.macd_fechamarc , 112 ) between Convert(Date,@pFechaIni,112)  And  Convert(Date,@pFechaFin,112))  
    and (t.codigo_unico =  @pCodigoUnico  or @pCodigoUnico = '')  
     
   UNION ALL  
  
   select   
    t.Dni  as matricula,  
    t.Dni as DNI,  
    (ltrim(rtrim(t.ApellidoPaterno)) + ' ' +  ltrim(rtrim(t.ApellidoMaterno)) + ','+ ltrim(rtrim(t.Nombres))) as NombreCompleto,  
    uf.nombre_unidad_funcional,  
    --cc1.descripcion_centro_costo,  
    --'(Sin Centro de Costo)' as descripcion_centro_costo,  
    '' as descripcion_centro_costo,  
    co.Nombre as Compania,  
    t.Fotocheck as CODIGO_FOTOCHECK,  
    cm.comv_nombrecons,  
    mc.macd_fechamarc,  
    mc.macd_horamarc,  
    mc.macn_costo,  
    mc.macv_codRelog,   
    cl.descripcion_registro as Molinete  
   from TERTrabajador t  
   inner join TEREmpresa co   
   on co.CodigoEmpresa = t.CodigoEmpresa  
   inner join Tbl_unidad_funcional uf  
   on t.CodigoGerencia = uf.unidad_funcional  
   --inner join Distr_ccosto_trabajador cc    
   --on t.CodigoUnicoTercero = cc.codigo_unico  
   --inner join Tbl_centro_costo cc1  
   --on cc.centro_costo = cc1.centro_costo  
     
   inner join tbl_marcas_comedor mc  
   on t.Fotocheck = mc.macv_codigo  
   inner join Tbl_detalle_tabla cl  
   on cl.codigo_tabla = 'CRLJ' and cl.situacion_registro = 'A' and cl.codigo_registro = mc.macv_codRelog  
   inner join tbl_comedor_mant cm  
   on mc.macv_tipocons = cm.comi_id   
     
   where  
    (co.CodigoEmpresa =  @pCodigoEmpresaTercero  or  @pCodigoEmpresaTercero  = '')  
    and (t.Dni =  @pDNI  or  @pDNI = '' )   
    and (t.Fotocheck =  @pFotocheck  or  @pFotocheck = '' )   
    and (mc.macv_codRelog =  @pMolinete  or  @pMolinete = '' )   
    and(cm.comv_tipocons =  @pTipoConsumo  or  @pTipoConsumo  = '')  
    and (Convert(Date, mc.macd_fechamarc , 112 ) between Convert(Date,@pFechaIni,112)  And  Convert(Date,@pFechaFin,112))  
    and (t.CodigoUnicoTercero =  @pCodigoUnico  or @pCodigoUnico = '')  
     
   order by  2 asc, mc.macd_fechamarc asc  
        
 end  
 else  
 begin  
   select   
    t.Dni  as matricula,  
    t.Dni as DNI,  
    (ltrim(rtrim(t.ApellidoPaterno)) + ' ' +  ltrim(rtrim(t.ApellidoMaterno)) + ','+ ltrim(rtrim(t.Nombres))) as NombreCompleto,  
    uf.nombre_unidad_funcional,  
    --cc1.descripcion_centro_costo,  
    --'(Sin Centro de Costo)' as descripcion_centro_costo,  
    '' as descripcion_centro_costo,  
    co.Nombre as Compania,  
    t.Fotocheck as CODIGO_FOTOCHECK,  
    cm.comv_nombrecons,  
    mc.macd_fechamarc,  
    mc.macd_horamarc,  
    mc.macn_costo,  
    mc.macv_codRelog,   
    cl.descripcion_registro as Molinete  
   from TERTrabajador t  
   inner join TEREmpresa co   
   on co.CodigoEmpresa = t.CodigoEmpresa  
   inner join Tbl_unidad_funcional uf  
   on t.CodigoGerencia = uf.unidad_funcional  
     
   inner join tbl_marcas_comedor mc  
   on t.Fotocheck = mc.macv_codigo  
   inner join Tbl_detalle_tabla cl  
   on cl.codigo_tabla = 'CRLJ' and cl.situacion_registro = 'A' and cl.codigo_registro = mc.macv_codRelog  
   inner join tbl_comedor_mant cm  
   on mc.macv_tipocons = cm.comi_id   
   --inner join  (  
   --    Select   
   --     CodTrabajador  
   --    From   
   --     dbo.usfGRLSupervisorLstCU (  
   --      dbo.usfSEGAplicacionGetIdPorAbrev('CMDR'),@vCompaniaSupervisor , @pCodigoResponsable ,   
   --      @pCodigoCompania,@pUnidadFuncional , @pIncluirSubUF)    
   --   )Supervisor On ( T.CodigoUnicoTercero = Supervisor.CodTrabajador )    
   where  
    (co.CodigoEmpresa =  @pCodigoEmpresaTercero  or  @pCodigoEmpresaTercero  = '')  
    and (t.Dni =  @pDNI  or  @pDNI = '' )   
    and (t.Fotocheck =  @pFotocheck  or  @pFotocheck = '' )   
    and (mc.macv_codRelog =  @pMolinete  or  @pMolinete = '' )   
    and(cm.comv_tipocons =  @pTipoConsumo  or  @pTipoConsumo  = '')  
    and (Convert(Date, mc.macd_fechamarc , 112 ) between Convert(Date,@pFechaIni,112)  And  Convert(Date,@pFechaFin,112))  
    and (t.CodigoUnicoTercero =  @pCodigoUnico  or @pCodigoUnico = '')  
     
   order by  2 asc, mc.macd_fechamarc asc  
 end  
  
End  
  
  
  

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'uspUsuarioAppCompaniaLst')
BEGIN
  DROP PROCEDURE [dbo].[uspUsuarioAppCompaniaLst]
END
GO

 CREATE Procedure uspUsuarioAppCompaniaLst
(  
 @pCodigoUnico VARCHAR(10),
 @pCodApp Int  
 )   
AS
BEGIN

	SELECT  DISTINCT CODIGO = C.CODIGO_CIA + ',' +  B.USUARIO,  
			DESCRIPCION = LTRIM(RTRIM(C.NOMBRE_CIA))  
	FROM  Segu_Usuario_Aplicacion A
		INNER  JOIN TBL_USUARIO B  ON A.usuario = b.usuario
		INNER  JOIN TBL_COMPANIA C ON B.COMPANIA_USUARIO = C.CODIGO_CIA  
	WHERE  RTRIM(B.CODIGO_UNICO_USUARIO) = RTRIM(@pCodigoUnico)  
		AND  A.APLII_ID = @pCodApp  
		AND A.ESTAI_ID = 1  
		AND B.SITUACION_USUARIO = 'A' 
	ORDER BY 2 

END

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'uspVACProgramacionLstMensual')
BEGIN
  DROP PROCEDURE [dbo].[uspVACProgramacionLstMensual]
END
GO


CREATE PROCEDURE uspVACProgramacionLstMensual    
/* ========================================================================      
Autor:    Josue Aquise Carvajal.      
Fecha Creación:  Miercoles, 13 de Marzo 2013 | 16:14      
Fecha Modifica.:       
Descripción:     Obtiene los datos de programación de vacaciones de todos los demás trabajadores del área funcional del trabajador seleccionado.      
Parámetros:         
     @K_TRABAJADOR  : Código del supervisor, coordinador, etc  
     @K_COMPANIA  : Código de la Compania    
     @K_UNIDAD_FUNC  : Código de la Unidad Funcional    
     @K_INC_SUBUNID  : Indicador incluir sub unidad funcional    
     @K_SUPERVISOR  : indicador perfil del trabajador '1' supervisor, '2' coordinador     
========================================================================= */      
(    
@K_NRO_LOTE INT,  
@K_TRABAJADOR char(9),    
@K_COMPANIA char(2),    
@K_UNIDAD_FUNC char(8),    
@K_INC_SUBUNID char(1),    
@K_SUPERVISOR char(1)  
)    
as  
--declaro la tabla, esta se usará si se requiere mostrar los trabajadores de todas las áreas que tiene acceso el supervisor    
declare @tbl_UF_Trabajador table(    
codigo_unidad_funcional char(8)    
)    
declare @V_UF_Trabajador char(8) = ''    
--Obtener las unidades funcionalaes que tiene acceso el usuario (Agregar a la función el caso de ser supervisor)    
insert into @tbl_UF_Trabajador    
SELECT UNIDAD_FUNCIONAL          
FROM dbo.UsfVacObtenerUnidadesFuncTrab(@K_TRABAJADOR,@K_COMPANIA,@K_UNIDAD_FUNC,@K_INC_SUBUNID)
    
--Obtener la unidad funcional a la que pertenece el trabajador que solicitó la programación de vacaciones  
select @V_UF_Trabajador = unidad_funcional_organica from trabajador tr    
inner join VacLoteProgramacion lp on tr.codigo_unico = lp.CodigoUnico and lp.NroLote = @K_NRO_LOTE  
  
--Obtener la lista de solicitudes de todos los trabajadores del área a la que pertenece el trabajador que solicitó las vacaciones    
/*select @V_UF_Trabajador = unidad_funcional_organica from trabajador tr    
inner join VACLoteProgramacion lp on tr.codigo_unico = lp.codigounico    
*/    
    
select t.codigo_unico    
  ,t.apellido_paterno + ' ' + t.apellido_materno + ' ' + t.nombre Nombre    
  ,codigo_unico    
  ,vf.FechaInicioFase     
  ,vf.FechaFinFase    
from Trabajador t     
inner join VACLoteProgramacion lp on t.codigo_unico = lp.CodigoUnico    
	And lp.SituacionRegistro = 'A'
inner join VACProgramacion pr on lp.NroLote = pr.NroLote    
	And pr.SituacionRegistro = 'A'
inner join VACFase vf on pr.NroSolicitud = vf.NroSolicitud and pr.secuencia = vf.secuencia    
	And vf.SituacionRegistro = 'A'
where t.situacion_trabajador = 'A'    
and t.unidad_funcional_organica = @V_UF_Trabajador  -- in(select from codigo_unidad_funcional @tbl_UF_Trabajador) --para mostrar los trabajadores de todas las áreas   
And lp.Anio = (Select Anio From VACLoteProgramacion Where NroLote = @K_NRO_LOTE)
And vf.Fase Not In ('AN')
order by 1,4  

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'uspVACVacacionesIns')
BEGIN
  DROP PROCEDURE [dbo].[uspVACVacacionesIns]
END
GO

create PROC uspVACVacacionesIns
/*
	VACASI_INS_VACACION
*/
(@K_COD_TRABAJADOR	CHAR(9)
,@K_COD_COMPANIA	CHAR(2)
,@K_TIPO_VACACION	CHAR(1)
,@K_FECHA_INICIO	DATETIME
,@K_NRO_DE_DIAS		INT
,@K_TIPO_PAGO		CHAR(1)
,@K_ESTADO_PAGO		CHAR(1)
,@K_MONTO_PAGO		MONEY
,@K_SECU_PROCESO	SMALLINT
,@K_SITUACION_VAC	CHAR(1)
,@K_IND_ABONADO		CHAR(1)
,@K_IND_PRE_ABONADO	CHAR(1)
,@K_FECHA_PAGO		DATETIME
,@K_MONTO_PAGO_VAC	MONEY
,@K_NRO_CUENTA		CHAR(20)
,@K_TIPO_CUENTA		CHAR(1)
,@K_USUARIO			CHAR(10)
,@K_FECHA_REGISTRO	DATETIME
,@K_FLAG_DESCONTAR CHAR(1))
AS
BEGIN
	
	DECLARE 
	@V_NRO_DIAS_DISP		INT
	,@V_DIAS_ADELANTADOS	INT
	,@V_DIAS_FALTANTES		INT
	,@V_PERIODO				INT
	,@V_DIAS_PERIODO		INT
	,@V_CODIGO_SECUENCIAL	INT
	,@V_DIAS_VAC			INT
	,@V_PERIODO_TRUNCO		INT
	,@V_MOTIVO_VAC			CHAR(1)
	,@V_DIAS_TRUNCOS_USADOS	INT
	,@V_DIAS_LIBRES_TRUNCOS	INT
	,@V_PERIODO_ADELANTADO	INT
	,@V_DIAS_USADOS_ADEL	INT
	,@V_DIAS_LIBRES_ADEL	INT
	,@V_FECHA_INI_ADEL		DATETIME
	,@V_SECUENCIA_DESCUENTO INT
	,@V_ANIO_PLANILLA VARCHAR(4)
	,@V_COD_PERIODO_PLANILLA VARCHAR(2)

	--OBTENGO EL TOTAL DE DIAS DISPONIBLES
	--SELECT @V_NRO_DIAS_DISP = SUM(DIAS) FROM VACAFT_PERIODOS_LIBRES(@K_COD_TRABAJADOR, @K_COD_COMPANIA)
	Select @V_NRO_DIAS_DISP =  SUM(DIAS) From dbo.usfVACPeriodoDisponibleTrabador(@K_COD_TRABAJADOR, @K_COD_COMPANIA)
	
	--PREGUNTO SI EL NRO DE DIAS DISPONIBLES CUBRE EL DE LA DE LA VACACION
	IF @V_NRO_DIAS_DISP < @K_NRO_DE_DIAS
		SET @V_DIAS_ADELANTADOS = @K_NRO_DE_DIAS - @V_NRO_DIAS_DISP

	--OBTENGO EL PERIODO TRUNCO
	--SELECT @V_PERIODO_TRUNCO = YEAR(FECHA_INGRESO_COMPANIA) + DBO.VACAFN_OBT_ANIOS_LABORADOS(@K_COD_TRABAJADOR, @K_COD_COMPANIA) + 1
	SELECT @V_PERIODO_TRUNCO = YEAR(FECHA_INGRESO_COMPANIA) + dbo.usfVACObtenerAniosLaboradosTrabajador(@K_COD_TRABAJADOR, @K_COD_COMPANIA, GETDATE()) + 1
	
	FROM TRABAJADOR
	WHERE CODIGO_UNICO = @K_COD_TRABAJADOR

	--INICIALIZO LOS DIAS FALTANTES
	SET @V_DIAS_FALTANTES = @K_NRO_DE_DIAS - ISNULL(@V_DIAS_ADELANTADOS,0)

	--CURSOR CON LOS DIAS DISPONIBLES
	DECLARE CUR_DIAS_DISP CURSOR FOR
		--SELECT PERIODO ,DIAS FROM VACAFT_PERIODOS_LIBRES(@K_COD_TRABAJADOR, @K_COD_COMPANIA)
		Select PERIODO, DIAS From dbo.usfVACPeriodoDisponibleTrabador(@K_COD_TRABAJADOR, @K_COD_COMPANIA)

	--ABRO EL CURSOR PARA COMENZAR A INGRESAR LA VACACION
	OPEN CUR_DIAS_DISP
	FETCH CUR_DIAS_DISP INTO @V_PERIODO, @V_DIAS_PERIODO

	WHILE @@FETCH_STATUS = 0
	BEGIN

		IF @V_DIAS_FALTANTES > 0
		BEGIN

			--VERIFICO SI LOS DIAS DEL PERIODO CUBREN LOS DE LA VACACION
			IF @V_DIAS_FALTANTES < @V_DIAS_PERIODO
			BEGIN
				SET @V_DIAS_VAC = @V_DIAS_FALTANTES
				SET @V_DIAS_FALTANTES = 0	
			END
			ELSE
			BEGIN
				SET @V_DIAS_VAC = @V_DIAS_PERIODO
				SET @V_DIAS_FALTANTES = @V_DIAS_FALTANTES - @V_DIAS_PERIODO
			END

			--OBTENGO EL SECUENCIAL DE LAS VACACIONES
			SELECT
				@V_CODIGO_SECUENCIAL = ISNULL(MAX(SECUENCIA_VACACIONES),0) + 1
			FROM 
				VACACIONES
			WHERE 
				CODIGO_UNICO = @K_COD_TRABAJADOR
				AND EJERCICIO_VACACION = @V_PERIODO

			--DETERMINO EL MOTIVO DE LA VACACION
			IF @V_PERIODO = @V_PERIODO_TRUNCO
			BEGIN
				SET @V_MOTIVO_VAC = 1 --ADELANTADAS
				--PREGUNTO SI TIENE DIAS ADELANTADOS
				IF ISNULL(@V_DIAS_ADELANTADOS,0) > 0
				BEGIN
					--DETERMINO LOS DIAS TRUNCOS USADOS
					SELECT
						@V_DIAS_TRUNCOS_USADOS = ISNULL(SUM(NRO_DE_DIAS),0)
					FROM
						VACACIONES
					WHERE
						CODIGO_UNICO = @K_COD_TRABAJADOR
						AND EJERCICIO_VACACION = @V_PERIODO
						AND MOTIVO_VACACION <> 4
					--DETERMINO LOS DIAS LIBRES DEL PERIODO TRUNCO
					--SET @V_DIAS_LIBRES_TRUNCOS = 30 - (@V_DIAS_VAC + @V_DIAS_TRUNCOS_USADOS)
					SET @V_DIAS_LIBRES_TRUNCOS = dbo.usfVACRegimenVacacionalLstDias(@K_COD_TRABAJADOR) - (@V_DIAS_VAC + @V_DIAS_TRUNCOS_USADOS)
					
					--PREGUNTO SI LOS DIAS QUE QUEDAN EN EL PERIODO TRUNCO CUBREN LOS DIAS ADELANTADOS
					IF @V_DIAS_LIBRES_TRUNCOS >= @V_DIAS_ADELANTADOS
					BEGIN
						--SUMO LOS DIAS ADELANTADOS PARA INGRESARLOS COMO ADELANTADOS
						SET @V_DIAS_VAC = @V_DIAS_VAC + @V_DIAS_ADELANTADOS
						--DEJO LOS ADELANTADOS EN 0
						SET @V_DIAS_ADELANTADOS = 0
					END
					ELSE
					BEGIN
						--SUMO LOS DIAS ADELANTADOS PARA INGRESARLOS COMO ADELANTADOS
						SET @V_DIAS_VAC = @V_DIAS_VAC + @V_DIAS_LIBRES_TRUNCOS
						--OBTENGO LOS NUEVOS DIAS ADELANTADOS
						SET @V_DIAS_ADELANTADOS = @V_DIAS_ADELANTADOS - @V_DIAS_LIBRES_TRUNCOS
						--DEFINO LA FECHA DE INICIO DE LA VACACION ADELANTADA
						SET @V_FECHA_INI_ADEL = DATEADD(DAY,@V_DIAS_VAC,@K_FECHA_INICIO)
					END
				END
			END
			ELSE
				SET @V_MOTIVO_VAC = 1 --GOZADAS


			/*
				CALCULAMOS EL MES Y AÑO DE PAGO
			*/
			Declare @vAnoPago Char(4) = Null
			Declare @vMesPago Char(2) = Null
			Declare @vTipoTrabajador Char(1) = Null
			Declare @vCodigoBaseConcepto Char(2) = Null
			
			/*
				SI EL AÑO O MES DE PAGO ES NULL, BUSCAMOS ESTOS DATOS
				1. EN EL PERIODO VIGENTE DE LA PLANILLA	(PERIODO_VIGENTE_PLANILLA)
				2. EN CASO NO ENCONTRARSE EN LOS PERIODOS DE LA PLANILLA (PERIODO_PLANILLA)
			*/
			If (@vAnoPago Is Null) Or (@vMesPago Is Null)
			Begin
			
				Set @vTipoTrabajador = (Select Tipo_Trabajador From Trabajador	
										Where Codigo_Unico = @K_COD_TRABAJADOR
											And Compania = @K_COD_COMPANIA)
				
				Set @vCodigoBaseConcepto = (Select Codigo_Base_Concepto From Tbl_Tipo_Trabajador
											Where Tipo_Trabajador = @vTipoTrabajador
												And Compania = @K_COD_COMPANIA)
				
				
				Select	@vAnoPago = Ano_Periodo,
						@vMesPago = Codigo_Periodo 
				From PERIODO_VIGENTE_PLANILLA
				Where 
					Codigo_Compania = @K_COD_COMPANIA
					And Tipo_Trabajador = @vTipoTrabajador
					And 
					(
						-- Si la fecha de inicio de vacaciones es menor al periodo, muestro el vigente
						(
						Convert(Date, @K_FECHA_INICIO, 112) < Convert(Date, Fecha_Apertura, 112) 
						)
						Or 
						(
						Convert(Date, @K_FECHA_INICIO, 112) Between Fecha_Apertura And Fecha_Cierre 
						)
					)
					/*And (Convert(Date, @K_FECHA_INICIO, 112) < Convert(Date, GETDATE(), 112)
						And (Convert(Date, @K_FECHA_INICIO, 112) Between
								Fecha_Apertura And Fecha_Cierre))
					*/
						
			End

			If (@vAnoPago Is Null) Or (@vMesPago Is Null)
			Begin
									
				Select	@vAnoPago = Ano_Periodo,
						@vMesPago = Codigo_Periodo 
				From PERIODO_PLANILLA
				Where 
					Codigo_Base_Concepto = @vCodigoBaseConcepto
					And (Convert(Date, @K_FECHA_INICIO, 112) Between
							Fecha_Corte_1 And Fecha_Corte_2)
							
			End
						
			/*
				AHORA EL MOTIVO VACACION SALE DEL TIPO DE SOLICIUD DE LA VACACION
			*/
			SELECT @V_MOTIVO_VAC = TIPOSOLICITUD FROM VACPROGRAMACION
			WHERE 
			NROSOLICITUD IN
						(
							SELECT COD_SOLICITUD FROM ADRWT_VAC_REALES
							WHERE COD_VACACION IN (SELECT COD_VAC_REAL FROM #TMPVACREALES)
						)
			ORDER BY 1 DESC -- EL MENOR TIPO DE VACACION
			
			--INSERTO LA VACACION
			INSERT INTO VACACIONES
				(SECUENCIA_VACACIONES
				,CODIGO_UNICO
				,TIPO_VACACION
				,EJERCICIO_VACACION
				,FECHA_INICIO_VACACION
				,FECHA_FIN_VACACION
				,MOTIVO_VACACION
				,NRO_DE_DIAS
				,TIPO_DE_PAGO
				,ESTADO_PAGO_VACACIONES
				,MONTO_PAGO_VACACIONES
				,SECUENCIA_PROCESO
				,SITUACION_VACACION
				,INDICADOR_ABONADO
				,INDICADOR_PRE_ABONADO
				,FECHA_PAGO
				,MONTO_PAGO
				,NUMERO_CUENTA_VACACIONES
				,TIPO_CUENTA_VACACIONES
				,USUARIO
				,FECHA_REGISTRO
				,Ano_Pago
				,Mes_Pago
				,codigo_cia)
			VALUES
				(@V_CODIGO_SECUENCIAL
				,@K_COD_TRABAJADOR
				,@K_TIPO_VACACION
				,@V_PERIODO
				,@K_FECHA_INICIO
				--,DATEADD(DAY,@V_DIAS_VAC,@K_FECHA_INICIO) - 1 -- DUDA de esta manera guardaba la fecha fin 
				,dbo.usfVACObtenerFechaFinVac(@K_COD_COMPANIA, @K_COD_TRABAJADOR, @K_FECHA_INICIO, @V_DIAS_VAC)  -- Ahora se calcula la fecha fin
				,@V_MOTIVO_VAC
				,@V_DIAS_VAC
				,@K_TIPO_PAGO
				,@K_ESTADO_PAGO
				,@K_MONTO_PAGO
				,@K_SECU_PROCESO
				,@K_SITUACION_VAC
				,@K_IND_ABONADO
				,@K_IND_PRE_ABONADO
				,@K_FECHA_PAGO
				,@K_MONTO_PAGO_VAC
				,@K_NRO_CUENTA
				,@K_TIPO_CUENTA
				,@K_USUARIO
				,@K_FECHA_REGISTRO
				,@vAnoPago
				,@vMesPago
				,@K_COD_COMPANIA)

--			--ACTUALIZO LOS DIAS PENDIENTES
--			EXEC VACASU_ACT_PERIODO_PENDIENTE
--				@K_COD_TRABAJADOR
--				,@V_PERIODO
--				,@K_USUARIO

			--RELACIONO LA VACACION CON LAS VACACIONES REALES QUE LA CONSTITUYERON
			INSERT INTO VACAT_VAC_VACREAL
			SELECT 
				@V_CODIGO_SECUENCIAL
				,@K_COD_TRABAJADOR
				,@K_TIPO_VACACION
				,@V_PERIODO
				,COD_VAC_REAL
			FROM 
				#TMPVACREALES

			IF (@K_FLAG_DESCONTAR = '1')
			BEGIN
				/*OBTENGO LA SECUENCIA DEL DESCUENTO*/
				SELECT
					@V_SECUENCIA_DESCUENTO = ISNULL(MAX(codigo_secuencia),0) + 1
				FROM
					DESCUENTO_VACACIONES
				WHERE
					CODIGO_UNICO = @K_COD_TRABAJADOR
					AND EJERCICIO_VACACION = @V_PERIODO

				/*OBTENGO EL PERIODO DE PLANILLA PARA LA VACACION*/
				SET @V_ANIO_PLANILLA = CAST(YEAR(@K_FECHA_INICIO) AS VARCHAR)
				SET @V_COD_PERIODO_PLANILLA = RIGHT('00' + CAST(MONTH(@K_FECHA_INICIO) AS VARCHAR),2)

				INSERT INTO DESCUENTO_VACACIONES
					(secuencia_vacaciones
					,codigo_unico
					,tipo_vacacion
					,codigo_secuencia
					,ejercicio_vacacion
					,importe
					,numero_dias
					,indicador_planilla_periodo
					,indicador_procesado_planilla
					,motivo_vacacion
					,codigo_periodo
					,ano_periodo
					,secuencia_descuento
					,usuario
					,fecha_registro)
				VALUES
					(@V_CODIGO_SECUENCIAL
					,@K_COD_TRABAJADOR
					,@K_TIPO_VACACION
					,@V_SECUENCIA_DESCUENTO
					,@V_PERIODO
					,0 --NULL
					,@V_DIAS_VAC
					,1
					,0
					,@V_MOTIVO_VAC
					,@V_COD_PERIODO_PLANILLA
					,@V_ANIO_PLANILLA
					,2
					,@K_USUARIO
					,GETDATE())
			END
				
			--PREGUNTO SI FALTAN MAS DIAS PARA ACTUALIZAR LA FECHA DE FIN
			IF @V_DIAS_FALTANTES > 0
			BEGIN
				SET @K_FECHA_INICIO = DATEADD(DAY,@V_DIAS_VAC,@K_FECHA_INICIO)
				/*SET @K_FECHA_INICIO = DBO.VACAFN_DETERNINA_FECHA_INICIO(@K_COD_TRABAJADOR,@K_COD_COMPANIA,@K_FECHA_INICIO)*/
			END

		END

		FETCH CUR_DIAS_DISP INTO @V_PERIODO, @V_DIAS_PERIODO

	END

	CLOSE CUR_DIAS_DISP
	DEALLOCATE CUR_DIAS_DISP

	--PREGUNTO SI HAY DIAS ADELANTADOS
	IF ISNULL(@V_DIAS_ADELANTADOS,0) > 0
	BEGIN

		SET @V_MOTIVO_VAC = 1 --ADELANTADAS

		--DEFINO EL PERIODO ADELANTADO
		SELECT @V_PERIODO_ADELANTADO = MAX(CAST(EJERCICIO_VACACION AS INT))
		FROM 
			VACACIONES
		WHERE
			CODIGO_UNICO =  @K_COD_TRABAJADOR

		--OBTENGO LOS DAS USADOS DE ESE PERIODO ADELANTADO
		SELECT 
			@V_DIAS_USADOS_ADEL = ISNULL(SUM(NRO_DE_DIAS),0)
		FROM 
			VACACIONES
		WHERE 
			CODIGO_UNICO = @K_COD_TRABAJADOR
			AND EJERCICIO_VACACION = @V_PERIODO_ADELANTADO
			AND MOTIVO_VACACION <> 4

		--IF @V_DIAS_USADOS_ADEL = 30
		IF @V_DIAS_USADOS_ADEL = dbo.usfVACRegimenVacacionalLstDias(@K_COD_TRABAJADOR)
		BEGIN
			--DETERMINO EL NUEVO PERIODO ADELANTADO	
			SET @V_PERIODO_ADELANTADO = @V_PERIODO_ADELANTADO + 1
			--DETERMINO LOS DIAS USADOS PARA ESTE PERIODO 
			SET @V_DIAS_USADOS_ADEL = 0
		END

		--DETERMINO LOS DIAS LIBRES DEL PERIODO ADELANTADO
		SET @V_DIAS_LIBRES_ADEL = dbo.usfVACRegimenVacacionalLstDias(@K_COD_TRABAJADOR) - @V_DIAS_USADOS_ADEL

		WHILE @V_DIAS_ADELANTADOS > 0
		BEGIN

			--DEFINO LOS DIAS ADELANTADOS QUE USARE
			IF @V_DIAS_LIBRES_ADEL >= @V_DIAS_ADELANTADOS
			BEGIN
				SET @V_DIAS_VAC = @V_DIAS_ADELANTADOS
				SET @V_DIAS_ADELANTADOS = 0
			END
			ELSE
			BEGIN
				SET @V_DIAS_VAC = @V_DIAS_LIBRES_ADEL
				SET @V_DIAS_ADELANTADOS = @V_DIAS_ADELANTADOS - @V_DIAS_LIBRES_ADEL
			END

			--OBTENGO EL SECUENCIAL DE LAS VACACIONES
			SELECT
				@V_CODIGO_SECUENCIAL = ISNULL(MAX(SECUENCIA_VACACIONES),0) + 1
			FROM 
				VACACIONES
			WHERE 
				CODIGO_UNICO = @K_COD_TRABAJADOR
				AND EJERCICIO_VACACION = @V_PERIODO_ADELANTADO

			--INSERTO LA VACACION
			INSERT INTO VACACIONES
				(SECUENCIA_VACACIONES
				,CODIGO_UNICO
				,TIPO_VACACION
				,EJERCICIO_VACACION
				,FECHA_INICIO_VACACION
				,FECHA_FIN_VACACION
				,MOTIVO_VACACION
				,NRO_DE_DIAS
				,TIPO_DE_PAGO
				,ESTADO_PAGO_VACACIONES
				,MONTO_PAGO_VACACIONES
				,SECUENCIA_PROCESO
				,SITUACION_VACACION
				,INDICADOR_ABONADO
				,INDICADOR_PRE_ABONADO
				,FECHA_PAGO
				,MONTO_PAGO
				,NUMERO_CUENTA_VACACIONES
				,TIPO_CUENTA_VACACIONES
				,USUARIO
				,FECHA_REGISTRO
				,Ano_Pago
				,Mes_Pago)
			VALUES
				(@V_CODIGO_SECUENCIAL
				,@K_COD_TRABAJADOR
				,@K_TIPO_VACACION
				,@V_PERIODO_ADELANTADO
				,@V_FECHA_INI_ADEL
				--,DATEADD(DAY,@V_DIAS_VAC,@V_FECHA_INI_ADEL) - 1 --DUDA
				,dbo.usfVACObtenerFechaFinVac(@K_COD_COMPANIA, @K_COD_TRABAJADOR, @V_FECHA_INI_ADEL, @V_DIAS_VAC)
				,@V_MOTIVO_VAC
				,@V_DIAS_VAC
				,@K_TIPO_PAGO
				,@K_ESTADO_PAGO
				,@K_MONTO_PAGO
				,@K_SECU_PROCESO
				,@K_SITUACION_VAC
				,@K_IND_ABONADO
				,@K_IND_PRE_ABONADO
				,@K_FECHA_PAGO
				,@K_MONTO_PAGO_VAC
				,@K_NRO_CUENTA
				,@K_TIPO_CUENTA
				,@K_USUARIO
				,@K_FECHA_REGISTRO
				,@vAnoPago
				,@vMesPago)

			--RELACIONO LA VACACION CON LAS VACACIONES REALES QUE LA CONSTITUYERON
			INSERT INTO VACAT_VAC_VACREAL
			SELECT 
				@V_CODIGO_SECUENCIAL
				,@K_COD_TRABAJADOR
				,@K_TIPO_VACACION
				,@V_PERIODO_ADELANTADO
				,COD_VAC_REAL
			FROM 
				#TMPVACREALES

			IF (@K_FLAG_DESCONTAR = '1')
			BEGIN
				/*OBTENGO LA SECUENCIA DEL DESCUENTO*/
				SELECT
					@V_SECUENCIA_DESCUENTO = ISNULL(MAX(codigo_secuencia),0) + 1
				FROM
					DESCUENTO_VACACIONES
				WHERE
					CODIGO_UNICO = @K_COD_TRABAJADOR
					AND EJERCICIO_VACACION = @V_PERIODO

				/*OBTENGO EL PERIODO DE PLANILLA PARA LA VACACION*/
				SET @V_ANIO_PLANILLA = CAST(YEAR(@K_FECHA_INICIO) AS VARCHAR)
				SET @V_COD_PERIODO_PLANILLA = RIGHT('00' + CAST(MONTH(@K_FECHA_INICIO) AS VARCHAR),2)

				INSERT INTO DESCUENTO_VACACIONES
					(secuencia_vacaciones
					,codigo_unico
					,tipo_vacacion
					,codigo_secuencia
					,ejercicio_vacacion
					,importe
					,numero_dias
					,indicador_planilla_periodo
					,indicador_procesado_planilla
					,motivo_vacacion
					,codigo_periodo
					,ano_periodo
					,secuencia_descuento
					,usuario
					,fecha_registro)
				VALUES
					(@V_CODIGO_SECUENCIAL
					,@K_COD_TRABAJADOR
					,@K_TIPO_VACACION
					,@V_SECUENCIA_DESCUENTO
					,@V_PERIODO
					,NULL
					,@V_DIAS_VAC
					,1
					,1
					,@V_MOTIVO_VAC
					,@V_COD_PERIODO_PLANILLA
					,@V_ANIO_PLANILLA
					,2
					,@K_USUARIO
					,GETDATE())
			END


			--DEFINO EL NUEVO PERIODO ADELANTADO Y SUS DIAS LIBRES
			SET @V_PERIODO_ADELANTADO = @V_PERIODO_ADELANTADO + 1
			--SET @V_DIAS_LIBRES_ADEL = 30
			SET @V_DIAS_LIBRES_ADEL = dbo.usfVACRegimenVacacionalLstDias(@K_COD_TRABAJADOR)

		END

	END

END

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'usp_SEG_DetalleTabla_Lista')
BEGIN
  DROP PROCEDURE [dbo].[usp_SEG_DetalleTabla_Lista]
END
GO


CREATE PROCEDURE [dbo].[usp_SEG_DetalleTabla_Lista]          
/***************************************************************                          
Procedimiento : usp_SEG_DetalleTabla_Lista          
Propósito     : Lista detalle de la tabla general          
Retorno       : Boolean          
Notas         : Migracion de Cliente Servidor a Web                     
Autor         : Pedro Barco Lezama            
Fecha/Hora    : 25/03/2011            
'***************************************************************/          
(          
 @A_CODIGO_TABLA  CHAR(4),          
 @A_CODIGO_REGISTRO CHAR(6)          
)          
AS          
BEGIN          
 SELECT DT.codigo_tabla,          
   TG.DESCRIPCION_TABLA,          
   ltrim(rtrim(DT.codigo_registro)) as codigo_registro,          
   DT.descripcion_registro,          
   CASE WHEN DT.situacion_registro ='A' THEN 'ACTIVO' ELSE 'INACTIVO' END AS situacion_registro          
 FROM TBL_DETALLE_TABLA DT inner join TBL_TABLA_GENERAL TG          
  ON DT.CODIGO_TABLA = TG.CODIGO_TABLA          
 WHERE (DT.CODIGO_TABLA = @A_CODIGO_TABLA OR @A_CODIGO_TABLA = '')          
 AND   (DT.CODIGO_REGISTRO = @A_CODIGO_REGISTRO OR @A_CODIGO_REGISTRO = '')          
 --and DT.situacion_registro = 'A'          
 ORDER BY 4 ASC          
END

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'usp_SEG_TablaGeneral_Lista')
BEGIN
  DROP PROCEDURE [dbo].[usp_SEG_TablaGeneral_Lista]
END
GO


CREATE PROCEDURE [dbo].[usp_SEG_TablaGeneral_Lista]  
/***************************************************************                  
Procedimiento : usp_SEG_TablaGeneral_Lista  
Propósito     : Lista la tabla general  
Retorno       : Boolean  
Notas         : Migracion de Cliente Servidor a Web             
Autor         : Pedro Barco Lezama    
Fecha/Hora    : 25/03/2011    
'***************************************************************/  
(  
 @A_CODIGO_TABLA CHAR(4),  
 @NOMBRE_TABLA VARCHAR(30) = null 
)  
AS  
BEGIN  
 SELECT codigo_tabla,  
   descripcion_tabla,  
   CASE WHEN situacion_tabla  = 'A' THEN 'ACTIVO' ELSE 'INACTIVO' END AS situacion_tabla  
 FROM TBL_TABLA_GENERAL  
 WHERE (CODIGO_TABLA = @A_CODIGO_TABLA OR @A_CODIGO_TABLA = '')  
 --and situacion_tabla ='A'  
 and  descripcion_tabla like '%' + @NOMBRE_TABLA +  '%'  
 Order by 2  
END

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO
IF EXISTS(SELECT * FROM SYSOBJECTS WHERE TYPE = 'P' AND NAME = 'sf_obtiene_fecha_poliza')
BEGIN
  DROP PROCEDURE [dbo].[sf_obtiene_fecha_poliza]
END
GO

CREATE Function dbo.sf_obtiene_fecha_poliza (@matricula char(9), @numero_documento char(15),@dia_hoy datetime )
RETURNS char(10)
as
BEGIN 
	declare @dias1	integer
	declare @dias2	integer
	declare @fecha datetime
	declare @fecha_origen datetime
	declare @fec_ing datetime
	declare @fec_sal datetime
	declare @cuenta int

	select @dias1 = sum(datediff(dd,fecha_ingreso_compania, isnull(fecha_retiro,@dia_hoy))+1)
	from Trabajador
	where codigo_unico =  @matricula
	

	if @dias1 >= 365 * 4
		select @fecha = dateadd(yy,4,fecha_ingreso_compania)
		from Trabajador
		where codigo_unico =  @matricula
	else
	begin
		declare trabs cursor for
		select fecha_ingreso_compania, isnull(fecha_retiro,@dia_hoy)
		from Trabajador
		where numero_documento = @numero_documento and
			tipo_trabajador in ('L','O')
		order by  1 asc

		open trabs
		fetch trabs into @fec_ing, @fec_sal
		--select @fecha_origen = @fec_ing
		select @dias2 = 0
		--select @contador = 1
		select @cuenta = 0

		while @@fetch_status = 0
		begin
			select @dias2 =   datediff(dd, @fec_ing, @fec_sal ) + 1
			

			if @cuenta + @dias2 >= 365 *4
			begin
				select @dias2 = 365 * 4 - @cuenta
				select  @fecha =dateadd(dd, @dias2,@fec_ing) 
				
			end 
			else
			begin
				select @cuenta = @cuenta + @dias2
				--select 	@fecha_origen = @fec_ing
				--select @contador = @contador + 1
			end 

			fetch trabs into @fec_ing, @fec_sal
		end
		close trabs
		deallocate trabs

		if  @fecha is null
		begin
			select @fecha =  dateadd(yy,4,min(fecha_ingreso_compania))
			from Trabajador
			where numero_documento = @numero_documento and
				tipo_trabajador in ('L','O')	
		end

	end
	


	
RETURN(convert(char(10),@fecha,103))
END













